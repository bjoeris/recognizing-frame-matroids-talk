/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**********************!*\
  !*** ./src/entry.js ***!
  \**********************/
/***/ function(module, exports, __webpack_require__) {

	// pull in desired CSS/SASS files
	__webpack_require__( /*! ./styles/solarized.scss */ 1 );
	
	var Main = __webpack_require__(/*! ./Main */ 32);
	
	Main.main();

/***/ },
/* 1 */
/*!***********************************!*\
  !*** ./src/styles/solarized.scss ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(/*! !./../../~/css-loader!./../../~/sass-loader!./solarized.scss */ 2);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(/*! ./../../~/style-loader/addStyles.js */ 31)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./solarized.scss", function() {
				var newContent = require("!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./solarized.scss");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 2 */
/*!******************************************************************!*\
  !*** ./~/css-loader!./~/sass-loader!./src/styles/solarized.scss ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../~/css-loader/lib/css-base.js */ 3)();
	// imports
	exports.i(__webpack_require__(/*! -!./../../~/css-loader!./fonts/league-gothic/league-gothic.css */ 4), "");
	exports.i(__webpack_require__(/*! -!./../../~/css-loader!./fonts/Lato/Lato.css */ 8), "");
	exports.i(__webpack_require__(/*! -!./../../~/css-loader!./fonts/Roboto/Roboto.css */ 17), "");
	exports.i(__webpack_require__(/*! -!./../../~/css-loader!./fonts/News_Cycle/News_Cycle.css */ 26), "");
	
	// module
	exports.push([module.id, "html * {\n  color-profile: sRGB;\n  rendering-intent: auto; }\n\n/**\r\n * Solarized colors by Ethan Schoonover\r\n */\nhtml * {\n  color-profile: sRGB;\n  rendering-intent: auto; }\n\nhtml {\n  font-size: 1vh; }\n\nbody {\n  background: #000000; }\n\n.hidden {\n  visibility: hidden;\n  overflow: hidden;\n  width: 0;\n  height: 0; }\n\n.slide-background {\n  background: #fdf6e3;\n  width: 100vw;\n  height: 75vw;\n  max-height: 100vh;\n  max-width: 133.33333vh;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden; }\n\n.slide {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 100%;\n  line-height: 1.3;\n  font-family: \"Lato\", sans-serif;\n  font-size: 6rem;\n  font-weight: normal;\n  color: #657b83; }\n\n.slide-content {\n  margin: 2rem;\n  text-align: center; }\n\n.slide-content p {\n  text-align: left; }\n\n::selection {\n  color: #fff;\n  background: #d33682;\n  text-shadow: none; }\n\n.header, .talk-title, .author, .institute, .conference {\n  margin: 0 0 3rem 0;\n  color: #586e75;\n  font-family: \"News Cycle\";\n  font-weight: normal;\n  line-height: 1.2;\n  letter-spacing: normal;\n  text-transform: uppercase;\n  text-shadow: none;\n  word-wrap: break-word;\n  text-align: center; }\n\n.talk-title {\n  font-size: 1.508em; }\n\n.author {\n  font-size: 0.844em; }\n  .author .speaker {\n    color: #859900; }\n\n.institute-ref {\n  vertical-align: super;\n  font-size: 60%; }\n\n.institute {\n  font-size: 0.62em; }\n\n.conference {\n  font-size: 0.844em; }\n\n.slide p {\n  margin: 3rem 0;\n  line-height: 1.3; }\n\n.theorem .theorem-title {\n  font-size: 110%;\n  color: #586e75;\n  font-weight: bold; }\n  .theorem .theorem-title .theorem-name {\n    font-style: italic; }\n\n.emph {\n  font-style: italic;\n  color: #859900; }\n\n.overlay-parent {\n  position: relative; }\n  .overlay-parent .overlay-child {\n    position: absolute;\n    margin-left: auto;\n    margin-right: auto;\n    left: 0;\n    right: 0; }\n\n.highlight-rect {\n  fill: #cb4b16;\n  opacity: 0.5; }\n", ""]);
	
	// exports


/***/ },
/* 3 */
/*!**************************************!*\
  !*** ./~/css-loader/lib/css-base.js ***!
  \**************************************/
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 4 */
/*!*************************************************************************!*\
  !*** ./~/css-loader!./src/styles/fonts/league-gothic/league-gothic.css ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../../../~/css-loader/lib/css-base.js */ 3)();
	// imports
	
	
	// module
	exports.push([module.id, "@font-face {\r\n    font-family: 'League Gothic';\r\n    src: url(" + __webpack_require__(/*! ./league-gothic.eot */ 5) + ");\r\n    src: url(" + __webpack_require__(/*! ./league-gothic.eot */ 5) + "?#iefix) format('embedded-opentype'),\r\n         url(" + __webpack_require__(/*! ./league-gothic.woff */ 6) + ") format('woff'),\r\n         url(" + __webpack_require__(/*! ./league-gothic.ttf */ 7) + ") format('truetype');\r\n\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}", ""]);
	
	// exports


/***/ },
/* 5 */
/*!**********************************************************!*\
  !*** ./src/styles/fonts/league-gothic/league-gothic.eot ***!
  \**********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/vnd.ms-fontobject;base64,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"

/***/ },
/* 6 */
/*!***********************************************************!*\
  !*** ./src/styles/fonts/league-gothic/league-gothic.woff ***!
  \***********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,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"

/***/ },
/* 7 */
/*!**********************************************************!*\
  !*** ./src/styles/fonts/league-gothic/league-gothic.ttf ***!
  \**********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/x-font-ttf;base64,"

/***/ },
/* 8 */
/*!*******************************************************!*\
  !*** ./~/css-loader!./src/styles/fonts/Lato/Lato.css ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../../../~/css-loader/lib/css-base.js */ 3)();
	// imports
	
	
	// module
	exports.push([module.id, "/* lato-regular - latin */\r\n@font-face {\r\n  font-family: 'Lato';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  src: local('Lato Regular'), local('Lato-Regular'),\r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-regular.woff2 */ 9) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-regular.woff */ 10) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* lato-italic - latin */\r\n@font-face {\r\n  font-family: 'Lato';\r\n  font-style: italic;\r\n  font-weight: 400;\r\n  src: local('Lato Italic'), local('Lato-Italic'),\r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-italic.woff2 */ 11) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-italic.woff */ 12) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* lato-700italic - latin */\r\n@font-face {\r\n  font-family: 'Lato';\r\n  font-style: italic;\r\n  font-weight: 700;\r\n  src: local('Lato Bold Italic'), local('Lato-BoldItalic'),\r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-700italic.woff2 */ 13) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-700italic.woff */ 14) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* lato-700 - latin */\r\n@font-face {\r\n  font-family: 'Lato';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  src: local('Lato Bold'), local('Lato-Bold'),\r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-700.woff2 */ 15) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./lato-v11-latin-700.woff */ 16) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}", ""]);
	
	// exports


/***/ },
/* 9 */
/*!************************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-regular.woff2 ***!
  \************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 10 */
/*!***********************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-regular.woff ***!
  \***********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 11 */
/*!***********************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-italic.woff2 ***!
  \***********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 12 */
/*!**********************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-italic.woff ***!
  \**********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 13 */
/*!**************************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-700italic.woff2 ***!
  \**************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 14 */
/*!*************************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-700italic.woff ***!
  \*************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 15 */
/*!********************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-700.woff2 ***!
  \********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 16 */
/*!*******************************************************!*\
  !*** ./src/styles/fonts/Lato/lato-v11-latin-700.woff ***!
  \*******************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 17 */
/*!***********************************************************!*\
  !*** ./~/css-loader!./src/styles/fonts/Roboto/Roboto.css ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../../../~/css-loader/lib/css-base.js */ 3)();
	// imports
	
	
	// module
	exports.push([module.id, "/* roboto-regular - latin */\r\n@font-face {\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  src: local('Roboto'), local('Roboto-Regular'),\r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-regular.woff2 */ 18) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-regular.woff */ 19) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* roboto-italic - latin */\r\n@font-face {\r\n  font-family: 'Roboto';\r\n  font-style: italic;\r\n  font-weight: 400;\r\n  src: local('Roboto Italic'), local('Roboto-Italic'),\r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-italic.woff2 */ 20) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-italic.woff */ 21) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* roboto-700 - latin */\r\n@font-face {\r\n  font-family: 'Roboto';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  src: local('Roboto Bold'), local('Roboto-Bold'),\r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-700.woff2 */ 22) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-700.woff */ 23) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* roboto-700italic - latin */\r\n@font-face {\r\n  font-family: 'Roboto';\r\n  font-style: italic;\r\n  font-weight: 700;\r\n  src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-700italic.woff2 */ 24) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./roboto-v15-latin-700italic.woff */ 25) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}", ""]);
	
	// exports


/***/ },
/* 18 */
/*!****************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-regular.woff2 ***!
  \****************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 19 */
/*!***************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-regular.woff ***!
  \***************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 20 */
/*!***************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-italic.woff2 ***!
  \***************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 21 */
/*!**************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-italic.woff ***!
  \**************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 22 */
/*!************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-700.woff2 ***!
  \************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 23 */
/*!***********************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-700.woff ***!
  \***********************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 24 */
/*!******************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-700italic.woff2 ***!
  \******************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 25 */
/*!*****************************************************************!*\
  !*** ./src/styles/fonts/Roboto/roboto-v15-latin-700italic.woff ***!
  \*****************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 26 */
/*!*******************************************************************!*\
  !*** ./~/css-loader!./src/styles/fonts/News_Cycle/News_Cycle.css ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(/*! ./../../../../~/css-loader/lib/css-base.js */ 3)();
	// imports
	
	
	// module
	exports.push([module.id, "/* news-cycle-regular - latin */\r\n@font-face {\r\n  font-family: 'News Cycle';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  src: local('News Cycle'), local('NewsCycle'),\r\n       url(" + __webpack_require__(/*! ./news-cycle-v13-latin-regular.woff2 */ 27) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./news-cycle-v13-latin-regular.woff */ 28) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}\r\n/* news-cycle-700 - latin */\r\n@font-face {\r\n  font-family: 'News Cycle';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  src: local('News Cycle Bold'), local('NewsCycle-Bold'),\r\n       url(" + __webpack_require__(/*! ./news-cycle-v13-latin-700.woff2 */ 29) + ") format('woff2'), \r\n       url(" + __webpack_require__(/*! ./news-cycle-v13-latin-700.woff */ 30) + ") format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n}", ""]);
	
	// exports


/***/ },
/* 27 */
/*!************************************************************************!*\
  !*** ./src/styles/fonts/News_Cycle/news-cycle-v13-latin-regular.woff2 ***!
  \************************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,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"

/***/ },
/* 28 */
/*!***********************************************************************!*\
  !*** ./src/styles/fonts/News_Cycle/news-cycle-v13-latin-regular.woff ***!
  \***********************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,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"

/***/ },
/* 29 */
/*!********************************************************************!*\
  !*** ./src/styles/fonts/News_Cycle/news-cycle-v13-latin-700.woff2 ***!
  \********************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/octet-stream;base64,"

/***/ },
/* 30 */
/*!*******************************************************************!*\
  !*** ./src/styles/fonts/News_Cycle/news-cycle-v13-latin-700.woff ***!
  \*******************************************************************/
/***/ function(module, exports) {

	module.exports = "data:application/font-woff;base64,"

/***/ },
/* 31 */
/*!*************************************!*\
  !*** ./~/style-loader/addStyles.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(true) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 32 */
/*!***********************!*\
  !*** ./src/Main.purs ***!
  \***********************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Aff_AVar = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs */ 143);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_HTML = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML.purs */ 145);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var DOM_HTML_Window = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Window.purs */ 174);
	var Halogen = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen.purs */ 176);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Events_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Indexed.purs */ 266);
	var Halogen_HTML_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Indexed.purs */ 271);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Properties_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Tweened.purs */ 275);
	var Halogen_Query_EventSource = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs */ 208);
	var Halogen_Util = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Util.purs */ 282);
	var Keyboard = __webpack_require__(/*! ./src/Keyboard.purs */ 288);
	var RequestAnimationFrame = __webpack_require__(/*! ./src/RequestAnimationFrame.purs */ 290);
	var Data_Char = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/Char.purs */ 232);
	var Data_Const = __webpack_require__(/*! ./bower_components/purescript-const/src/Data/Const.purs */ 196);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Time_Duration = __webpack_require__(/*! ./bower_components/purescript-datetime/src/Data/Time/Duration.purs */ 278);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween_1 = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Timeline_Compile = __webpack_require__(/*! ./src/Timeline/Compile.purs */ 292);
	var Timeline_Run = __webpack_require__(/*! ./src/Timeline/Run.purs */ 294);
	var Timeline_Tween_1 = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Timeline_Slides = __webpack_require__(/*! ./src/Timeline/Slides.purs */ 295);
	var Halogen_HTML_Styles_Indexed = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Indexed.purs */ 297);
	var Halogen_HTML_Elements_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Elements/Tweened.purs */ 296);
	var Halogen_HTML_Styles_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Tweened.purs */ 301);
	var Slides = __webpack_require__(/*! ./src/Slides.purs */ 302);
	var Pokeball = __webpack_require__(/*! ./src/Pokeball.purs */ 305);
	var D3_Geo = __webpack_require__(/*! ./src/D3/Geo.purs */ 312);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Halogen_Query = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query.purs */ 227);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Monad_Aff_Free = __webpack_require__(/*! ./bower_components/purescript-aff-free/src/Control/Monad/Aff/Free.purs */ 202);
	var Halogen_Query_HalogenF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs */ 201);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Monad_Aff_Class = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs */ 211);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Halogen_Component = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component.purs */ 177);
	var Halogen_Driver = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Driver.purs */ 228);
	var Init = (function () {
	    function Init(value0) {
	        this.value0 = value0;
	    };
	    Init.create = function (value0) {
	        return new Init(value0);
	    };
	    return Init;
	})();
	var Move = (function () {
	    function Move(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Move.create = function (value0) {
	        return function (value1) {
	            return new Move(value0, value1);
	        };
	    };
	    return Move;
	})();
	var Tick = (function () {
	    function Tick(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tick.create = function (value0) {
	        return function (value1) {
	            return new Tick(value0, value1);
	        };
	    };
	    return Tick;
	})();
	var ui = (function () {
	    var initializer = new Data_Maybe.Just(Halogen_Query.action(Init.create));
	    var $$eval = function (v) {
	        if (v instanceof Init) {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(Data_Function.apply(Control_Monad_Aff_Free.fromEff(Control_Monad_Aff_Free.affableFree(Halogen_Query_HalogenF.affableHalogenF(Control_Monad_Aff_Free.affableAff))))(Data_Functor.mapFlipped(Control_Monad_Eff.functorEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document))(DOM_HTML_Types.htmlDocumentToDocument)))(function (v1) {
	                var keyboardSource = Data_Function.apply(Halogen_Query_EventSource.eventSource(Control_Monad_Aff.monadAff)(Control_Monad_Aff_Class.monadAffAff)(Keyboard.onKeyUp(v1)))(function (e) {
	                    var info = Keyboard.readKeyboardEvent(e);
	                    var $7 = info.keyCode === 37;
	                    if ($7) {
	                        return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Halogen_Query.action(function ($17) {
	                            return Data_Functor_Coproduct.right(Move.create(Timeline_Run.MoveReverse.value)($17));
	                        }));
	                    };
	                    if (!$7) {
	                        var $8 = info.keyCode === 39;
	                        if ($8) {
	                            return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Halogen_Query.action(function ($18) {
	                                return Data_Functor_Coproduct.right(Move.create(Timeline_Run.MoveForward.value)($18));
	                            }));
	                        };
	                        if (!$8) {
	                            return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Data_Functor_Coproduct.left(Data_Unit.unit));
	                        };
	                        throw new Error("Failed pattern match at Main line 103, column 18 - line 105, column 48: " + [ $8.constructor.name ]);
	                    };
	                    throw new Error("Failed pattern match at Main line 101, column 11 - line 105, column 48: " + [ $7.constructor.name ]);
	                });
	                var animationFrameSource = Data_Function.apply(Halogen_Query_EventSource.eventSource(Control_Monad_Aff.monadAff)(Control_Monad_Aff_Class.monadAffAff)(RequestAnimationFrame.onAnimationFrameDelta(Data_Time_Duration.durationMilliseconds)))(function (dt) {
	                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(Halogen_Query.action(Tick.create(dt)));
	                });
	                return Control_Bind.bind(Control_Monad_Free.freeBind)(Data_Function.apply(Halogen_Query.subscribe)(Halogen_Query_EventSource.catEventSource(Control_Monad_Aff.monadRecAff)(keyboardSource)))(function () {
	                    return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.subscribe(animationFrameSource))(function () {
	                        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value0);
	                    });
	                });
	            });
	        };
	        if (v instanceof Move) {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.modify(Timeline_Run.move(v.value0)))(function () {
	                return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value1);
	            });
	        };
	        if (v instanceof Tick) {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.modify(Timeline_Run.tick(v.value0)))(function () {
	                return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value1);
	            });
	        };
	        throw new Error("Failed pattern match at Main line 94, column 3 - line 112, column 14: " + [ v.constructor.name ]);
	    };
	    return Halogen_Component.lifecycleComponent({
	        render: Timeline_Run.getValue, 
	        "eval": $$eval, 
	        initializer: initializer, 
	        finalizer: Data_Maybe.Nothing.value
	    });
	})();
	var timeline = Control_Bind.bind(Timeline_Build.bindTimeline)(Timeline_Build.newStep)(function (v) {
	    return Control_Bind.bind(Timeline_Build.bindTimeline)(Timeline_Slides.slides(Slides.slides))(function (v1) {
	        return Control_Bind.bind(Timeline_Build.bindTimeline)(Timeline_Build.newStep)(function () {
	            return Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(v1);
	        });
	    });
	});
	var initialState = Data_Function.apply(Debug_Trace.spy)(Timeline_Run.initialState(timeline));
	var main = Halogen_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Util.awaitBody)(function (v) {
	    return Halogen_Driver.runUI(ui)(initialState)(v);
	}));
	module.exports = {
	    Init: Init, 
	    Move: Move, 
	    Tick: Tick, 
	    initialState: initialState, 
	    main: main, 
	    timeline: timeline, 
	    ui: ui
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 33 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Prelude.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_Field = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Field.purs */ 72);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_NaturalTransformation = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/NaturalTransformation.purs */ 73);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Void = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Void.purs */ 59);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 34 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Applicative.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.pure = pure;
	};
	var pure = function (dict) {
	    return dict.pure;
	};
	var unless = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (!v) {
	                return v1;
	            };
	            if (v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var when = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v) {
	                return v1;
	            };
	            if (!v) {
	                return pure(dictApplicative)(Data_Unit.unit);
	            };
	            throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var liftA1 = function (dictApplicative) {
	    return function (f) {
	        return function (a) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
	        };
	    };
	};
	var applicativeFn = new Applicative(function () {
	    return Control_Apply.applyFn;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	var applicativeArray = new Applicative(function () {
	    return Control_Apply.applyArray;
	}, function (x) {
	    return [ x ];
	});
	module.exports = {
	    Applicative: Applicative, 
	    liftA1: liftA1, 
	    pure: pure, 
	    unless: unless, 
	    when: when, 
	    applicativeFn: applicativeFn, 
	    applicativeArray: applicativeArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 35 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Apply.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.js */ 36);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.apply = apply;
	};
	var applyFn = new Apply(function () {
	    return Data_Functor.functorFn;
	}, function (f) {
	    return function (g) {
	        return function (x) {
	            return f(x)(g(x));
	        };
	    };
	});
	var applyArray = new Apply(function () {
	    return Data_Functor.functorArray;
	}, $foreign.arrayApply);
	var apply = function (dict) {
	    return dict.apply;
	};
	var applyFirst = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
	        };
	    };
	};
	var applySecond = function (dictApply) {
	    return function (a) {
	        return function (b) {
	            return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
	        };
	    };
	};
	var lift2 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
	            };
	        };
	    };
	};
	var lift3 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c);
	                };
	            };
	        };
	    };
	};
	var lift4 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d);
	                    };
	                };
	            };
	        };
	    };
	};
	var lift5 = function (dictApply) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return function (d) {
	                        return function (e) {
	                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b))(c))(d))(e);
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Apply: Apply, 
	    apply: apply, 
	    applyFirst: applyFirst, 
	    applySecond: applySecond, 
	    lift2: lift2, 
	    lift3: lift3, 
	    lift4: lift4, 
	    lift5: lift5, 
	    applyFn: applyFn, 
	    applyArray: applyArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 36 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Apply.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Control.Apply
	
	exports.arrayApply = function (fs) {
	  return function (xs) {
	    var result = [];
	    var n = 0;
	    for (var i = 0, l = fs.length; i < l; i++) {
	      for (var j = 0, k = xs.length; j < k; j++) {
	        result[n++] = fs[i](xs[j]);
	      }
	    }
	    return result;
	  };
	};


/***/ },
/* 37 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Functor.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.js */ 38);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Functor = function (map) {
	    this.map = map;
	};
	var map = function (dict) {
	    return dict.map;
	};
	var mapFlipped = function (dictFunctor) {
	    return function (fa) {
	        return function (f) {
	            return map(dictFunctor)(f)(fa);
	        };
	    };
	};
	var $$void = function (dictFunctor) {
	    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
	};
	var voidLeft = function (dictFunctor) {
	    return function (f) {
	        return function (x) {
	            return map(dictFunctor)(Data_Function["const"](x))(f);
	        };
	    };
	};
	var voidRight = function (dictFunctor) {
	    return function (x) {
	        return map(dictFunctor)(Data_Function["const"](x));
	    };
	};
	var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
	var functorArray = new Functor($foreign.arrayMap);
	module.exports = {
	    Functor: Functor, 
	    map: map, 
	    mapFlipped: mapFlipped, 
	    "void": $$void, 
	    voidLeft: voidLeft, 
	    voidRight: voidRight, 
	    functorFn: functorFn, 
	    functorArray: functorArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 38 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Functor.js ***!
  \*****************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Functor
	
	exports.arrayMap = function (f) {
	  return function (arr) {
	    var l = arr.length;
	    var result = new Array(l);
	    for (var i = 0; i < l; i++) {
	      result[i] = f(arr[i]);
	    }
	    return result;
	  };
	};


/***/ },
/* 39 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Function.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var on = function (f) {
	    return function (g) {
	        return function (x) {
	            return function (y) {
	                return f(g(x))(g(y));
	            };
	        };
	    };
	};
	var flip = function (f) {
	    return function (b) {
	        return function (a) {
	            return f(a)(b);
	        };
	    };
	};
	var $$const = function (a) {
	    return function (v) {
	        return a;
	    };
	};
	var applyFlipped = function (x) {
	    return function (f) {
	        return f(x);
	    };
	};
	var apply = function (f) {
	    return function (x) {
	        return f(x);
	    };
	};
	module.exports = {
	    apply: apply, 
	    applyFlipped: applyFlipped, 
	    "const": $$const, 
	    flip: flip, 
	    on: on
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 40 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Category.purs ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	
	/**
	 *  | `Category`s consist of objects and composable morphisms between them, and
	 *  | as such are [`Semigroupoids`](#semigroupoid), but unlike `semigroupoids`
	 *  | must have an identity element.
	 *  |
	 *  | Instances must satisfy the following law in addition to the
	 *  | `Semigroupoid` law:
	 *  |
	 *  | - Identity: `id <<< p = p <<< id = p`
	 */
	var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
	    this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
	    this.id = id;
	};
	
	/**
	 *  | `Category`s consist of objects and composable morphisms between them, and
	 *  | as such are [`Semigroupoids`](#semigroupoid), but unlike `semigroupoids`
	 *  | must have an identity element.
	 *  |
	 *  | Instances must satisfy the following law in addition to the
	 *  | `Semigroupoid` law:
	 *  |
	 *  | - Identity: `id <<< p = p <<< id = p`
	 */
	var id = function (dict) {
	    return dict.id;
	};
	var categoryFn = new Category(function () {
	    return Control_Semigroupoid.semigroupoidFn;
	}, function (x) {
	    return x;
	});
	module.exports = {
	    Category: Category, 
	    id: id, 
	    categoryFn: categoryFn
	};


/***/ },
/* 41 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs ***!
  \***************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 *  | A `Semigroupoid` is similar to a [`Category`](#category) but does not
	 *  | require an identity element `id`, just composable morphisms.
	 *  |
	 *  | `Semigroupoid`s must satisfy the following law:
	 *  |
	 *  | - Associativity: `p <<< (q <<< r) = (p <<< q) <<< r`
	 *  |
	 *  | One example of a `Semigroupoid` is the function type constructor `(->)`,
	 *  | with `(<<<)` defined as function composition.
	 */
	var Semigroupoid = function (compose) {
	    this.compose = compose;
	};
	var semigroupoidFn = new Semigroupoid(function (f) {
	    return function (g) {
	        return function (x) {
	            return f(g(x));
	        };
	    };
	});
	
	/**
	 *  | A `Semigroupoid` is similar to a [`Category`](#category) but does not
	 *  | require an identity element `id`, just composable morphisms.
	 *  |
	 *  | `Semigroupoid`s must satisfy the following law:
	 *  |
	 *  | - Associativity: `p <<< (q <<< r) = (p <<< q) <<< r`
	 *  |
	 *  | One example of a `Semigroupoid` is the function type constructor `(->)`,
	 *  | with `(<<<)` defined as function composition.
	 */
	var compose = function (dict) {
	    return dict.compose;
	};
	
	/**
	 *  | Forwards composition, or `compose` with its arguments reversed.
	 */
	var composeFlipped = function (dictSemigroupoid) {
	    return function (f) {
	        return function (g) {
	            return compose(dictSemigroupoid)(g)(f);
	        };
	    };
	};
	module.exports = {
	    Semigroupoid: Semigroupoid, 
	    compose: compose, 
	    composeFlipped: composeFlipped, 
	    semigroupoidFn: semigroupoidFn
	};


/***/ },
/* 42 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Unit.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.js */ 43);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var showUnit = new Data_Show.Show(function (v) {
	    return "unit";
	});
	module.exports = {
	    showUnit: showUnit, 
	    unit: $foreign.unit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 43 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Unit.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Unit
	
	exports.unit = {};


/***/ },
/* 44 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Show.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.js */ 45);
	
	/**
	 *  | The `Show` type class represents those types which can be converted into
	 *  | a human-readable `String` representation.
	 *  |
	 *  | While not required, it is recommended that for any expression `x`, the
	 *  | string `show x` be executable PureScript code which evaluates to the same
	 *  | value as the expression `x`.
	 */
	var Show = function (show) {
	    this.show = show;
	};
	var showString = new Show($foreign.showStringImpl);
	var showNumber = new Show($foreign.showNumberImpl);
	var showInt = new Show($foreign.showIntImpl);
	var showChar = new Show($foreign.showCharImpl);
	var showBoolean = new Show(function (v) {
	    if (v) {
	        return "true";
	    };
	    if (!v) {
	        return "false";
	    };
	    throw new Error("Failed pattern match at Data.Show line 13, column 3 - line 14, column 3: " + [ v.constructor.name ]);
	});
	
	/**
	 *  | The `Show` type class represents those types which can be converted into
	 *  | a human-readable `String` representation.
	 *  |
	 *  | While not required, it is recommended that for any expression `x`, the
	 *  | string `show x` be executable PureScript code which evaluates to the same
	 *  | value as the expression `x`.
	 */
	var show = function (dict) {
	    return dict.show;
	};
	var showArray = function (dictShow) {
	    return new Show($foreign.showArrayImpl(show(dictShow)));
	};
	module.exports = {
	    Show: Show, 
	    show: show, 
	    showBoolean: showBoolean, 
	    showInt: showInt, 
	    showNumber: showNumber, 
	    showChar: showChar, 
	    showString: showString, 
	    showArray: showArray
	};


/***/ },
/* 45 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Show.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Show
	
	exports.showIntImpl = function (n) {
	  return n.toString();
	};
	
	exports.showNumberImpl = function (n) {
	  var str = n.toString();
	  return isNaN(str + ".0") ? str : str + ".0";
	};
	
	exports.showCharImpl = function (c) {
	  var code = c.charCodeAt(0);
	  if (code < 0x20 || code === 0x7F) {
	    switch (c) {
	      case "\x07": return "'\\a'";
	      case "\b": return "'\\b'";
	      case "\f": return "'\\f'";
	      case "\n": return "'\\n'";
	      case "\r": return "'\\r'";
	      case "\t": return "'\\t'";
	      case "\v": return "'\\v'";
	    }
	    return "'\\" + code.toString(10) + "'";
	  }
	  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
	};
	
	exports.showStringImpl = function (s) {
	  var l = s.length;
	  return "\"" + s.replace(
	    /[\0-\x1F\x7F"\\]/g,
	    function (c, i) { // jshint ignore:line
	      switch (c) {
	        case "\"":
	        case "\\":
	          return "\\" + c;
	        case "\x07": return "\\a";
	        case "\b": return "\\b";
	        case "\f": return "\\f";
	        case "\n": return "\\n";
	        case "\r": return "\\r";
	        case "\t": return "\\t";
	        case "\v": return "\\v";
	      }
	      var k = i + 1;
	      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
	      return "\\" + c.charCodeAt(0).toString(10) + empty;
	    }
	  ) + "\"";
	};
	
	exports.showArrayImpl = function (f) {
	  return function (xs) {
	    var ss = [];
	    for (var i = 0, l = xs.length; i < l; i++) {
	      ss[i] = f(xs[i]);
	    }
	    return "[" + ss.join(",") + "]";
	  };
	};


/***/ },
/* 46 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Bind.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.js */ 47);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
	    this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
	    this.bind = bind;
	};
	var bindFn = new Bind(function () {
	    return Control_Apply.applyFn;
	}, function (m) {
	    return function (f) {
	        return function (x) {
	            return f(m(x))(x);
	        };
	    };
	});
	var bindArray = new Bind(function () {
	    return Control_Apply.applyArray;
	}, $foreign.arrayBind);
	var bind = function (dict) {
	    return dict.bind;
	};
	var bindFlipped = function (dictBind) {
	    return Data_Function.flip(bind(dictBind));
	};
	var composeKleisliFlipped = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bindFlipped(dictBind)(f)(g(a));
	            };
	        };
	    };
	};
	var composeKleisli = function (dictBind) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return bind(dictBind)(f(a))(g);
	            };
	        };
	    };
	};
	var ifM = function (dictBind) {
	    return function (cond) {
	        return function (t) {
	            return function (f) {
	                return bind(dictBind)(cond)(function (cond$prime) {
	                    if (cond$prime) {
	                        return t;
	                    };
	                    if (!cond$prime) {
	                        return f;
	                    };
	                    throw new Error("Failed pattern match at Control.Bind line 103, column 35 - line 103, column 56: " + [ cond$prime.constructor.name ]);
	                });
	            };
	        };
	    };
	};
	var join = function (dictBind) {
	    return function (m) {
	        return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Bind: Bind, 
	    bind: bind, 
	    bindFlipped: bindFlipped, 
	    composeKleisli: composeKleisli, 
	    composeKleisliFlipped: composeKleisliFlipped, 
	    ifM: ifM, 
	    join: join, 
	    bindFn: bindFn, 
	    bindArray: bindArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 47 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Bind.js ***!
  \*****************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Control.Bind
	
	exports.arrayBind = function (arr) {
	  return function (f) {
	    var result = [];
	    for (var i = 0, l = arr.length; i < l; i++) {
	      Array.prototype.push.apply(result, f(arr[i]));
	    }
	    return result;
	  };
	};


/***/ },
/* 48 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Control/Monad.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
	};
	var monadFn = new Monad(function () {
	    return Control_Applicative.applicativeFn;
	}, function () {
	    return Control_Bind.bindFn;
	});
	var monadArray = new Monad(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Bind.bindArray;
	});
	var liftM1 = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f(v));
	            });
	        };
	    };
	};
	var ap = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
	                });
	            });
	        };
	    };
	};
	module.exports = {
	    Monad: Monad, 
	    ap: ap, 
	    liftM1: liftM1, 
	    monadFn: monadFn, 
	    monadArray: monadArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 49 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Boolean.purs ***!
  \*******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 *  | An alias for `true`, which can be useful in guard clauses:
	 *  |
	 *  | ```purescript
	 *  | max x y | x >= y    = x
	 *  |         | otherwise = y
	 *  | ```
	 */
	var otherwise = true;
	module.exports = {
	    otherwise: otherwise
	};


/***/ },
/* 50 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var BooleanAlgebra = function (__superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0) {
	    this["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"] = __superclass_Data$dotHeytingAlgebra$dotHeytingAlgebra_0;
	};
	var booleanAlgebraUnit = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraUnit;
	});
	var booleanAlgebraBoolean = new BooleanAlgebra(function () {
	    return Data_HeytingAlgebra.heytingAlgebraBoolean;
	});
	module.exports = {
	    BooleanAlgebra: BooleanAlgebra, 
	    booleanAlgebraBoolean: booleanAlgebraBoolean, 
	    booleanAlgebraUnit: booleanAlgebraUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 51 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.js */ 52);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
	    this.conj = conj;
	    this.disj = disj;
	    this.ff = ff;
	    this.implies = implies;
	    this.not = not;
	    this.tt = tt;
	};
	var tt = function (dict) {
	    return dict.tt;
	};
	var not = function (dict) {
	    return dict.not;
	};
	var implies = function (dict) {
	    return dict.implies;
	};
	var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return Data_Unit.unit;
	}, Data_Unit.unit);
	var ff = function (dict) {
	    return dict.ff;
	};
	var disj = function (dict) {
	    return dict.disj;
	};
	var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
	    return function (b) {
	        return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
	    };
	}, $foreign.boolNot, true);
	var conj = function (dict) {
	    return dict.conj;
	};
	var heytingAlgebraFunction = function (dictHeytingAlgebra) {
	    return new HeytingAlgebra(function (f) {
	        return function (g) {
	            return function (a) {
	                return conj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return disj(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (v) {
	        return ff(dictHeytingAlgebra);
	    }, function (f) {
	        return function (g) {
	            return function (a) {
	                return implies(dictHeytingAlgebra)(f(a))(g(a));
	            };
	        };
	    }, function (f) {
	        return function (a) {
	            return not(dictHeytingAlgebra)(f(a));
	        };
	    }, function (v) {
	        return tt(dictHeytingAlgebra);
	    });
	};
	module.exports = {
	    HeytingAlgebra: HeytingAlgebra, 
	    conj: conj, 
	    disj: disj, 
	    ff: ff, 
	    implies: implies, 
	    not: not, 
	    tt: tt, 
	    heytingAlgebraBoolean: heytingAlgebraBoolean, 
	    heytingAlgebraUnit: heytingAlgebraUnit, 
	    heytingAlgebraFunction: heytingAlgebraFunction
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 52 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.js ***!
  \************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.HeytingAlgebra
	
	exports.boolConj = function (b1) {
	  return function (b2) {
	    return b1 && b2;
	  };
	};
	
	exports.boolDisj = function (b1) {
	  return function (b2) {
	    return b1 || b2;
	  };
	};
	
	exports.boolNot = function (b) {
	  return !b;
	};


/***/ },
/* 53 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Bounded.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.js */ 54);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
	    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
	    this.bottom = bottom;
	    this.top = top;
	};
	var top = function (dict) {
	    return dict.top;
	};
	var boundedUnit = new Bounded(function () {
	    return Data_Ord.ordUnit;
	}, Data_Unit.unit, Data_Unit.unit);
	var boundedOrdering = new Bounded(function () {
	    return Data_Ord.ordOrdering;
	}, Data_Ordering.LT.value, Data_Ordering.GT.value);
	var boundedInt = new Bounded(function () {
	    return Data_Ord.ordInt;
	}, $foreign.bottomInt, $foreign.topInt);
	var boundedChar = new Bounded(function () {
	    return Data_Ord.ordChar;
	}, $foreign.bottomChar, $foreign.topChar);
	var boundedBoolean = new Bounded(function () {
	    return Data_Ord.ordBoolean;
	}, false, true);
	var bottom = function (dict) {
	    return dict.bottom;
	};
	module.exports = {
	    Bounded: Bounded, 
	    bottom: bottom, 
	    top: top, 
	    boundedBoolean: boundedBoolean, 
	    boundedInt: boundedInt, 
	    boundedChar: boundedChar, 
	    boundedOrdering: boundedOrdering, 
	    boundedUnit: boundedUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 54 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Bounded.js ***!
  \*****************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Bounded
	
	exports.topInt = 2147483647;
	exports.bottomInt = -2147483648;
	
	exports.topChar = String.fromCharCode(65535);
	exports.bottomChar = String.fromCharCode(0);


/***/ },
/* 55 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ord.purs ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.js */ 56);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ord_Unsafe = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord/Unsafe.purs */ 60);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Void = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Void.purs */ 59);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
	    this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
	    this.compare = compare;
	};
	var ordVoid = new Ord(function () {
	    return Data_Eq.eqVoid;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordUnit = new Ord(function () {
	    return Data_Eq.eqUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Ordering.EQ.value;
	    };
	});
	var ordString = new Ord(function () {
	    return Data_Eq.eqString;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordOrdering = new Ord(function () {
	    return Data_Ordering.eqOrdering;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.EQ.value;
	        };
	        if (v instanceof Data_Ordering.LT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
	            return Data_Ordering.LT.value;
	        };
	        if (v instanceof Data_Ordering.GT) {
	            return Data_Ordering.GT.value;
	        };
	        throw new Error("Failed pattern match at Data.Ord line 68, column 3 - line 68, column 21: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var ordNumber = new Ord(function () {
	    return Data_Eq.eqNumber;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordInt = new Ord(function () {
	    return Data_Eq.eqInt;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordChar = new Ord(function () {
	    return Data_Eq.eqChar;
	}, Data_Ord_Unsafe.unsafeCompare);
	var ordBoolean = new Ord(function () {
	    return Data_Eq.eqBoolean;
	}, Data_Ord_Unsafe.unsafeCompare);
	var compare = function (dict) {
	    return dict.compare;
	};
	var comparing = function (dictOrd) {
	    return function (f) {
	        return Data_Function.on(compare(dictOrd))(f);
	    };
	};
	var greaterThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $22 = compare(dictOrd)(a1)(a2);
	            if ($22 instanceof Data_Ordering.GT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var greaterThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $23 = compare(dictOrd)(a1)(a2);
	            if ($23 instanceof Data_Ordering.LT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var signum = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $24 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($24) {
	                return Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	            };
	            if (!$24) {
	                return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            };
	            throw new Error("Failed pattern match at Data.Ord line 163, column 12 - line 163, column 46: " + [ $24.constructor.name ]);
	        };
	    };
	};
	var lessThan = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $25 = compare(dictOrd)(a1)(a2);
	            if ($25 instanceof Data_Ordering.LT) {
	                return true;
	            };
	            return false;
	        };
	    };
	};
	var lessThanOrEq = function (dictOrd) {
	    return function (a1) {
	        return function (a2) {
	            var $26 = compare(dictOrd)(a1)(a2);
	            if ($26 instanceof Data_Ordering.GT) {
	                return false;
	            };
	            return true;
	        };
	    };
	};
	var max = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $27 = compare(dictOrd)(x)(y);
	            if ($27 instanceof Data_Ordering.LT) {
	                return y;
	            };
	            if ($27 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($27 instanceof Data_Ordering.GT) {
	                return x;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 122, column 3 - line 125, column 12: " + [ $27.constructor.name ]);
	        };
	    };
	};
	var min = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            var $28 = compare(dictOrd)(x)(y);
	            if ($28 instanceof Data_Ordering.LT) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.EQ) {
	                return x;
	            };
	            if ($28 instanceof Data_Ordering.GT) {
	                return y;
	            };
	            throw new Error("Failed pattern match at Data.Ord line 113, column 3 - line 116, column 12: " + [ $28.constructor.name ]);
	        };
	    };
	};
	var ordArray = function (dictOrd) {
	    return new Ord(function () {
	        return Data_Eq.eqArray(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, (function () {
	        var toDelta = function (x) {
	            return function (y) {
	                var $29 = compare(dictOrd)(x)(y);
	                if ($29 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($29 instanceof Data_Ordering.LT) {
	                    return 1;
	                };
	                if ($29 instanceof Data_Ordering.GT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 60, column 7 - line 65, column 1: " + [ $29.constructor.name ]);
	            };
	        };
	        return function (xs) {
	            return function (ys) {
	                return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
	            };
	        };
	    })());
	};
	var clamp = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                return min(dictOrd)(hi)(max(dictOrd)(low)(x));
	            };
	        };
	    };
	};
	var between = function (dictOrd) {
	    return function (low) {
	        return function (hi) {
	            return function (x) {
	                if (lessThan(dictOrd)(x)(low)) {
	                    return false;
	                };
	                if (greaterThan(dictOrd)(x)(hi)) {
	                    return false;
	                };
	                if (true) {
	                    return true;
	                };
	                throw new Error("Failed pattern match at Data.Ord line 150, column 1 - line 153, column 16: " + [ low.constructor.name, hi.constructor.name, x.constructor.name ]);
	            };
	        };
	    };
	};
	var abs = function (dictOrd) {
	    return function (dictRing) {
	        return function (x) {
	            var $33 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()));
	            if ($33) {
	                return x;
	            };
	            if (!$33) {
	                return Data_Ring.negate(dictRing)(x);
	            };
	            throw new Error("Failed pattern match at Data.Ord line 158, column 9 - line 158, column 42: " + [ $33.constructor.name ]);
	        };
	    };
	};
	module.exports = {
	    Ord: Ord, 
	    abs: abs, 
	    between: between, 
	    clamp: clamp, 
	    compare: compare, 
	    comparing: comparing, 
	    greaterThan: greaterThan, 
	    greaterThanOrEq: greaterThanOrEq, 
	    lessThan: lessThan, 
	    lessThanOrEq: lessThanOrEq, 
	    max: max, 
	    min: min, 
	    signum: signum, 
	    ordBoolean: ordBoolean, 
	    ordInt: ordInt, 
	    ordNumber: ordNumber, 
	    ordString: ordString, 
	    ordChar: ordChar, 
	    ordUnit: ordUnit, 
	    ordVoid: ordVoid, 
	    ordArray: ordArray, 
	    ordOrdering: ordOrdering
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 56 */
/*!*************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ord.js ***!
  \*************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Ord
	
	exports.ordArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var x = xs[i];
	        var y = ys[i];
	        var o = f(x)(y);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};


/***/ },
/* 57 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Eq.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.js */ 58);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Void = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Void.purs */ 59);
	var Eq = function (eq) {
	    this.eq = eq;
	};
	var eqVoid = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqUnit = new Eq(function (v) {
	    return function (v1) {
	        return true;
	    };
	});
	var eqString = new Eq($foreign.refEq);
	var eqNumber = new Eq($foreign.refEq);
	var eqInt = new Eq($foreign.refEq);
	var eqChar = new Eq($foreign.refEq);
	var eqBoolean = new Eq($foreign.refEq);
	var eq = function (dict) {
	    return dict.eq;
	};
	var eqArray = function (dictEq) {
	    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
	};
	var notEq = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
	        };
	    };
	};
	module.exports = {
	    Eq: Eq, 
	    eq: eq, 
	    notEq: notEq, 
	    eqBoolean: eqBoolean, 
	    eqInt: eqInt, 
	    eqNumber: eqNumber, 
	    eqChar: eqChar, 
	    eqString: eqString, 
	    eqUnit: eqUnit, 
	    eqVoid: eqVoid, 
	    eqArray: eqArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 58 */
/*!************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Eq.js ***!
  \************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Eq
	
	exports.refEq = function (r1) {
	  return function (r2) {
	    return r1 === r2;
	  };
	};
	
	exports.refIneq = function (r1) {
	  return function (r2) {
	    return r1 !== r2;
	  };
	};
	
	exports.eqArrayImpl = function (f) {
	  return function (xs) {
	    return function (ys) {
	      if (xs.length !== ys.length) return false;
	      for (var i = 0; i < xs.length; i++) {
	        if (!f(xs[i])(ys[i])) return false;
	      }
	      return true;
	    };
	  };
	};


/***/ },
/* 59 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Void.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Void = function (x) {
	    return x;
	};
	var absurd = function (a) {
	    var spin = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            var __tco_v = v;
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    return spin(a);
	};
	var showVoid = new Data_Show.Show(absurd);
	module.exports = {
	    absurd: absurd, 
	    showVoid: showVoid
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 60 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ord/Unsafe.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord/Unsafe.js */ 61);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	module.exports = {
	    unsafeCompare: unsafeCompare
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 61 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ord/Unsafe.js ***!
  \********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Ord.Unsafe
	
	exports.unsafeCompareImpl = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (x) {
	        return function (y) {
	          return x < y ? lt : x > y ? gt : eq;
	        };
	      };
	    };
	  };
	};


/***/ },
/* 62 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ordering.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var LT = (function () {
	    function LT() {
	
	    };
	    LT.value = new LT();
	    return LT;
	})();
	var GT = (function () {
	    function GT() {
	
	    };
	    GT.value = new GT();
	    return GT;
	})();
	var EQ = (function () {
	    function EQ() {
	
	    };
	    EQ.value = new EQ();
	    return EQ;
	})();
	var showOrdering = new Data_Show.Show(function (v) {
	    if (v instanceof LT) {
	        return "LT";
	    };
	    if (v instanceof GT) {
	        return "GT";
	    };
	    if (v instanceof EQ) {
	        return "EQ";
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 27, column 3 - line 28, column 3: " + [ v.constructor.name ]);
	});
	var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof LT) {
	            return LT.value;
	        };
	        if (v instanceof GT) {
	            return GT.value;
	        };
	        if (v instanceof EQ) {
	            return v1;
	        };
	        throw new Error("Failed pattern match at Data.Ordering line 22, column 3 - line 22, column 19: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invert = function (v) {
	    if (v instanceof GT) {
	        return LT.value;
	    };
	    if (v instanceof EQ) {
	        return EQ.value;
	    };
	    if (v instanceof LT) {
	        return GT.value;
	    };
	    throw new Error("Failed pattern match at Data.Ordering line 34, column 1 - line 34, column 15: " + [ v.constructor.name ]);
	};
	var eqOrdering = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof LT && v1 instanceof LT) {
	            return true;
	        };
	        if (v instanceof GT && v1 instanceof GT) {
	            return true;
	        };
	        if (v instanceof EQ && v1 instanceof EQ) {
	            return true;
	        };
	        return false;
	    };
	});
	module.exports = {
	    LT: LT, 
	    GT: GT, 
	    EQ: EQ, 
	    invert: invert, 
	    eqOrdering: eqOrdering, 
	    semigroupOrdering: semigroupOrdering, 
	    showOrdering: showOrdering
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 63 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Semigroup.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.js */ 64);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Void = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Void.purs */ 59);
	var Semigroup = function (append) {
	    this.append = append;
	};
	var semigroupVoid = new Semigroup(function (v) {
	    return Data_Void.absurd;
	});
	var semigroupUnit = new Semigroup(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var semigroupString = new Semigroup($foreign.concatString);
	var semigroupArray = new Semigroup($foreign.concatArray);
	var append = function (dict) {
	    return dict.append;
	};
	var semigroupFn = function (dictSemigroup) {
	    return new Semigroup(function (f) {
	        return function (g) {
	            return function (x) {
	                return append(dictSemigroup)(f(x))(g(x));
	            };
	        };
	    });
	};
	module.exports = {
	    Semigroup: Semigroup, 
	    append: append, 
	    semigroupString: semigroupString, 
	    semigroupUnit: semigroupUnit, 
	    semigroupVoid: semigroupVoid, 
	    semigroupFn: semigroupFn, 
	    semigroupArray: semigroupArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 64 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Semigroup.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Semigroup
	
	exports.concatString = function (s1) {
	  return function (s2) {
	    return s1 + s2;
	  };
	};
	
	exports.concatArray = function (xs) {
	  return function (ys) {
	    return xs.concat(ys);
	  };
	};


/***/ },
/* 65 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ring.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.js */ 66);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Ring = function (__superclass_Data$dotSemiring$dotSemiring_0, sub) {
	    this["__superclass_Data.Semiring.Semiring_0"] = __superclass_Data$dotSemiring$dotSemiring_0;
	    this.sub = sub;
	};
	var sub = function (dict) {
	    return dict.sub;
	};
	var ringUnit = new Ring(function () {
	    return Data_Semiring.semiringUnit;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var ringNumber = new Ring(function () {
	    return Data_Semiring.semiringNumber;
	}, $foreign.numSub);
	var ringInt = new Ring(function () {
	    return Data_Semiring.semiringInt;
	}, $foreign.intSub);
	var negate = function (dictRing) {
	    return function (a) {
	        return sub(dictRing)(Data_Semiring.zero(dictRing["__superclass_Data.Semiring.Semiring_0"]()))(a);
	    };
	};
	module.exports = {
	    Ring: Ring, 
	    negate: negate, 
	    sub: sub, 
	    ringInt: ringInt, 
	    ringNumber: ringNumber, 
	    ringUnit: ringUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 66 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Ring.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Ring
	
	exports.intSub = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x - y | 0;
	  };
	};
	
	exports.numSub = function (n1) {
	  return function (n2) {
	    return n1 - n2;
	  };
	};


/***/ },
/* 67 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Semiring.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.js */ 68);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Semiring = function (add, mul, one, zero) {
	    this.add = add;
	    this.mul = mul;
	    this.one = one;
	    this.zero = zero;
	};
	var zero = function (dict) {
	    return dict.zero;
	};
	var semiringUnit = new Semiring(function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, Data_Unit.unit, Data_Unit.unit);
	var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
	var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
	var one = function (dict) {
	    return dict.one;
	};
	var mul = function (dict) {
	    return dict.mul;
	};
	var add = function (dict) {
	    return dict.add;
	};
	module.exports = {
	    Semiring: Semiring, 
	    add: add, 
	    mul: mul, 
	    one: one, 
	    zero: zero, 
	    semiringInt: semiringInt, 
	    semiringNumber: semiringNumber, 
	    semiringUnit: semiringUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 68 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Semiring.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Semiring
	
	exports.intAdd = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x + y | 0;
	  };
	};
	
	exports.intMul = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x * y | 0;
	  };
	};
	
	exports.numAdd = function (n1) {
	  return function (n2) {
	    return n1 + n2;
	  };
	};
	
	exports.numMul = function (n1) {
	  return function (n2) {
	    return n1 * n2;
	  };
	};


/***/ },
/* 69 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var CommutativeRing = function (__superclass_Data$dotRing$dotRing_0) {
	    this["__superclass_Data.Ring.Ring_0"] = __superclass_Data$dotRing$dotRing_0;
	};
	var commutativeRingUnit = new CommutativeRing(function () {
	    return Data_Ring.ringUnit;
	});
	var commutativeRingNumber = new CommutativeRing(function () {
	    return Data_Ring.ringNumber;
	});
	var commutativeRingInt = new CommutativeRing(function () {
	    return Data_Ring.ringInt;
	});
	module.exports = {
	    CommutativeRing: CommutativeRing, 
	    commutativeRingInt: commutativeRingInt, 
	    commutativeRingNumber: commutativeRingNumber, 
	    commutativeRingUnit: commutativeRingUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 70 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.js */ 71);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var EuclideanRing = function (__superclass_Data$dotCommutativeRing$dotCommutativeRing_0, degree, div, mod) {
	    this["__superclass_Data.CommutativeRing.CommutativeRing_0"] = __superclass_Data$dotCommutativeRing$dotCommutativeRing_0;
	    this.degree = degree;
	    this.div = div;
	    this.mod = mod;
	};
	var mod = function (dict) {
	    return dict.mod;
	};
	var euclideanRingUnit = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingUnit;
	}, function (v) {
	    return 1;
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	}, function (v) {
	    return function (v1) {
	        return Data_Unit.unit;
	    };
	});
	var euclideanRingNumber = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingNumber;
	}, function (v) {
	    return 1;
	}, $foreign.numDiv, function (v) {
	    return function (v1) {
	        return 0.0;
	    };
	});
	var euclideanRingInt = new EuclideanRing(function () {
	    return Data_CommutativeRing.commutativeRingInt;
	}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
	var div = function (dict) {
	    return dict.div;
	};
	var degree = function (dict) {
	    return dict.degree;
	};
	module.exports = {
	    EuclideanRing: EuclideanRing, 
	    degree: degree, 
	    div: div, 
	    mod: mod, 
	    euclideanRingInt: euclideanRingInt, 
	    euclideanRingNumber: euclideanRingNumber, 
	    euclideanRingUnit: euclideanRingUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 71 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/EuclideanRing.js ***!
  \***********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.EuclideanRing
	
	exports.intDegree = function (x) {
	  return Math.abs(x);
	};
	
	exports.intDiv = function (x) {
	  return function (y) {
	    /* jshint bitwise: false */
	    return x / y | 0;
	  };
	};
	
	exports.intMod = function (x) {
	  return function (y) {
	    return x % y;
	  };
	};
	
	exports.numDiv = function (n1) {
	  return function (n2) {
	    return n1 / n2;
	  };
	};


/***/ },
/* 72 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/Field.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Field = function (__superclass_Data$dotEuclideanRing$dotEuclideanRing_0) {
	    this["__superclass_Data.EuclideanRing.EuclideanRing_0"] = __superclass_Data$dotEuclideanRing$dotEuclideanRing_0;
	};
	var fieldUnit = new Field(function () {
	    return Data_EuclideanRing.euclideanRingUnit;
	});
	var fieldNumber = new Field(function () {
	    return Data_EuclideanRing.euclideanRingNumber;
	});
	module.exports = {
	    Field: Field, 
	    fieldNumber: fieldNumber, 
	    fieldUnit: fieldUnit
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 73 */
/*!*********************************************************************************!*\
  !*** ./bower_components/purescript-prelude/src/Data/NaturalTransformation.purs ***!
  \*********************************************************************************/
/***/ function(module, exports) {

	"use strict";
	module.exports = {};


/***/ },
/* 74 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-eff/src/Control/Monad/Eff.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.js */ 75);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var monadEff = new Control_Monad.Monad(function () {
	    return applicativeEff;
	}, function () {
	    return bindEff;
	});
	var bindEff = new Control_Bind.Bind(function () {
	    return applyEff;
	}, $foreign.bindE);
	var applyEff = new Control_Apply.Apply(function () {
	    return functorEff;
	}, Control_Monad.ap(monadEff));
	var applicativeEff = new Control_Applicative.Applicative(function () {
	    return applyEff;
	}, $foreign.pureE);
	var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
	module.exports = {
	    functorEff: functorEff, 
	    applyEff: applyEff, 
	    applicativeEff: applicativeEff, 
	    bindEff: bindEff, 
	    monadEff: monadEff, 
	    forE: $foreign.forE, 
	    foreachE: $foreign.foreachE, 
	    runPure: $foreign.runPure, 
	    untilE: $foreign.untilE, 
	    whileE: $foreign.whileE
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 75 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-eff/src/Control/Monad/Eff.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Control.Monad.Eff
	
	exports.pureE = function (a) {
	  return function () {
	    return a;
	  };
	};
	
	exports.bindE = function (a) {
	  return function (f) {
	    return function () {
	      return f(a())();
	    };
	  };
	};
	
	exports.runPure = function (f) {
	  return f();
	};
	
	exports.untilE = function (f) {
	  return function () {
	    while (!f());
	    return {};
	  };
	};
	
	exports.whileE = function (f) {
	  return function (a) {
	    return function () {
	      while (f()) {
	        a();
	      }
	      return {};
	    };
	  };
	};
	
	exports.forE = function (lo) {
	  return function (hi) {
	    return function (f) {
	      return function () {
	        for (var i = lo; i < hi; i++) {
	          f(i)();
	        }
	      };
	    };
	  };
	};
	
	exports.foreachE = function (as) {
	  return function (f) {
	    return function () {
	      for (var i = 0, l = as.length; i < l; i++) {
	        f(as[i])();
	      }
	    };
	  };
	};


/***/ },
/* 76 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.js */ 77);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Aff_Internal = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.purs */ 83);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_Parallel_Class = __webpack_require__(/*! ./bower_components/purescript-parallel/src/Control/Parallel/Class.purs */ 125);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Canceler = function (x) {
	    return x;
	};
	var runAff = function (ex) {
	    return function (f) {
	        return function (aff) {
	            return Data_Function_Uncurried.runFn3($foreign._runAff)(ex)(f)(aff);
	        };
	    };
	};
	var makeAff$prime = function (h) {
	    return $foreign._makeAff(h);
	};
	var functorAff = new Data_Functor.Functor(function (f) {
	    return function (fa) {
	        return Data_Function_Uncurried.runFn2($foreign._fmap)(f)(fa);
	    };
	});
	var fromAVBox = Unsafe_Coerce.unsafeCoerce;
	var cancel = function (v) {
	    return v;
	};
	var launchAff = (function () {
	    var lowerEx = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($34) {
	        return Canceler(Data_Functor.map(Data_Functor.functorFn)($foreign._unsafeInterleaveAff)(cancel($34)));
	    });
	    return function ($35) {
	        return lowerEx(runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($foreign._unsafeInterleaveAff($35)));
	    };
	})();
	var attempt = function (aff) {
	    return Data_Function_Uncurried.runFn3($foreign._attempt)(Data_Either.Left.create)(Data_Either.Right.create)(aff);
	};
	var apathize = function (a) {
	    return Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit))(attempt(a));
	};
	var applyAff = new Control_Apply.Apply(function () {
	    return functorAff;
	}, function (ff) {
	    return function (fa) {
	        return Data_Function_Uncurried.runFn3($foreign._bind)(alwaysCanceler)(ff)(function (f) {
	            return Data_Functor.map(functorAff)(f)(fa);
	        });
	    };
	});
	var applicativeAff = new Control_Applicative.Applicative(function () {
	    return applyAff;
	}, function (v) {
	    return Data_Function_Uncurried.runFn2($foreign._pure)(nonCanceler)(v);
	});
	var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
	var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
	var cancelWith = function (aff) {
	    return function (c) {
	        return Data_Function_Uncurried.runFn3($foreign._cancelWith)(nonCanceler)(aff)(c);
	    };
	};
	var forkAff = function (aff) {
	    return Data_Function_Uncurried.runFn2($foreign._forkAff)(nonCanceler)(aff);
	};
	var forkAll = function (dictFoldable) {
	    return function (affs) {
	        return Data_Function_Uncurried.runFn3($foreign._forkAll)(nonCanceler)(Data_Foldable.foldl(dictFoldable))(affs);
	    };
	};
	var killVar = function (q) {
	    return function (e) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal._killVar)(nonCanceler)(q)(e));
	    };
	};
	var later$prime = function (n) {
	    return function (aff) {
	        return Data_Function_Uncurried.runFn3($foreign._setTimeout)(nonCanceler)(n)(aff);
	    };
	};
	var later = later$prime(0);
	var liftEff$prime = function (eff) {
	    return attempt($foreign._unsafeInterleaveAff(Data_Function_Uncurried.runFn2($foreign._liftEff)(nonCanceler)(eff)));
	};
	var makeAff = function (h) {
	    return makeAff$prime(function (e) {
	        return function (a) {
	            return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
	        };
	    });
	};
	var makeVar = Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal._makeVar(nonCanceler));
	var putVar = function (q) {
	    return function (a) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal._putVar)(nonCanceler)(q)(a));
	    };
	};
	var takeVar = function (q) {
	    return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn2(Control_Monad_Aff_Internal._takeVar)(nonCanceler)(q));
	};
	var semigroupAff = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_Semigroup.append(dictSemigroup))(a))(b);
	        };
	    });
	};
	var monoidAff = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAff(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
	};
	var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function (e) {
	            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
	        };
	    };
	});
	var monoidCanceler = new Data_Monoid.Monoid(function () {
	    return semigroupCanceler;
	}, Data_Function["const"](Control_Applicative.pure(applicativeAff)(true)));
	var bindAff = new Control_Bind.Bind(function () {
	    return applyAff;
	}, function (fa) {
	    return function (f) {
	        return Data_Function_Uncurried.runFn3($foreign._bind)(alwaysCanceler)(fa)(f);
	    };
	});
	var monadAff = new Control_Monad.Monad(function () {
	    return applicativeAff;
	}, function () {
	    return bindAff;
	});
	var monadContAff = new Control_Monad_Cont_Class.MonadCont(function () {
	    return monadAff;
	}, function (f) {
	    return makeAff(function (eb) {
	        return function (cb) {
	            return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(runAff(eb)(cb)(f(function (a) {
	                return makeAff(function (v) {
	                    return function (v1) {
	                        return cb(a);
	                    };
	                });
	            })));
	        };
	    });
	});
	var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
	    return monadAff;
	}, function (eff) {
	    return Data_Function_Uncurried.runFn2($foreign._liftEff)(nonCanceler)(eff);
	});
	var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
	    return monadAff;
	}, function (f) {
	    return function (a) {
	        return Data_Function_Uncurried.runFn3($foreign._tailRecM)(Data_Either.isLeft)(f)(a);
	    };
	});
	var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
	    return monadAff;
	}, function (aff) {
	    return function (ex) {
	        return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
	    };
	}, function (e) {
	    return Data_Function_Uncurried.runFn2($foreign._throwError)(nonCanceler)(e);
	});
	var $$finally = function (aff1) {
	    return function (aff2) {
	        return Control_Bind.bind(bindAff)(attempt(aff1))(function (v) {
	            return Control_Bind.bind(bindAff)(aff2)(function () {
	                return Data_Either.either(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Applicative.pure(applicativeAff))(v);
	            });
	        });
	    };
	};
	var monadParAff = new Control_Parallel_Class.MonadPar(function () {
	    return monadAff;
	}, function (f) {
	    return function (ma) {
	        return function (mb) {
	            var putOrKill = function (v) {
	                return Data_Either.either(killVar(v))(putVar(v));
	            };
	            return Control_Bind.bind(bindAff)(makeVar)(function (v) {
	                return Control_Bind.bind(bindAff)(makeVar)(function (v1) {
	                    return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v))(attempt(ma))))(function (v2) {
	                        return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v1))(attempt(mb))))(function (v3) {
	                            return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(f)(takeVar(v)))(takeVar(v1));
	                        });
	                    });
	                });
	            });
	        };
	    };
	});
	var monadRaceAff = new Control_Parallel_Class.MonadRace(function () {
	    return monadParAff;
	}, function (a1) {
	    return function (a2) {
	        var maybeKill = function (va) {
	            return function (ve) {
	                return function (err) {
	                    return Control_Bind.bind(bindAff)(takeVar(ve))(function (v) {
	                        return Control_Bind.bind(bindAff)((function () {
	                            var $29 = v === 1;
	                            if ($29) {
	                                return killVar(va)(err);
	                            };
	                            if (!$29) {
	                                return Control_Applicative.pure(applicativeAff)(Data_Unit.unit);
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Aff line 240, column 7 - line 240, column 51: " + [ $29.constructor.name ]);
	                        })())(function () {
	                            return putVar(ve)(v + 1 | 0);
	                        });
	                    });
	                };
	            };
	        };
	        return Control_Bind.bind(bindAff)(makeVar)(function (v) {
	            return Control_Bind.bind(bindAff)(makeVar)(function (v1) {
	                return Control_Bind.bind(bindAff)(putVar(v1)(0))(function () {
	                    return Control_Bind.bind(bindAff)(Data_Function.apply(forkAff)(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v)(v1))(putVar(v)))(attempt(a1))))(function (v2) {
	                        return Control_Bind.bind(bindAff)(Data_Function.apply(forkAff)(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v)(v1))(putVar(v)))(attempt(a2))))(function (v3) {
	                            return cancelWith(takeVar(v))(Data_Semigroup.append(semigroupCanceler)(v2)(v3));
	                        });
	                    });
	                });
	            });
	        });
	    };
	}, Data_Function.apply(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Monad_Eff_Exception.error("Stalled")));
	var altAff = new Control_Alt.Alt(function () {
	    return functorAff;
	}, function (a1) {
	    return function (a2) {
	        return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
	    };
	});
	var plusAff = new Control_Plus.Plus(function () {
	    return altAff;
	}, Data_Function.apply(Control_Monad_Error_Class.throwError(monadErrorAff))(Control_Monad_Eff_Exception.error("Always fails")));
	var alternativeAff = new Control_Alternative.Alternative(function () {
	    return applicativeAff;
	}, function () {
	    return plusAff;
	});
	var monadZero = new Control_MonadZero.MonadZero(function () {
	    return alternativeAff;
	}, function () {
	    return monadAff;
	});
	var monadPlusAff = new Control_MonadPlus.MonadPlus(function () {
	    return monadZero;
	});
	module.exports = {
	    Canceler: Canceler, 
	    apathize: apathize, 
	    attempt: attempt, 
	    cancel: cancel, 
	    cancelWith: cancelWith, 
	    "finally": $$finally, 
	    forkAff: forkAff, 
	    forkAll: forkAll, 
	    later: later, 
	    "later'": later$prime, 
	    launchAff: launchAff, 
	    "liftEff'": liftEff$prime, 
	    makeAff: makeAff, 
	    "makeAff'": makeAff$prime, 
	    nonCanceler: nonCanceler, 
	    runAff: runAff, 
	    semigroupAff: semigroupAff, 
	    monoidAff: monoidAff, 
	    functorAff: functorAff, 
	    applyAff: applyAff, 
	    applicativeAff: applicativeAff, 
	    bindAff: bindAff, 
	    monadAff: monadAff, 
	    monadEffAff: monadEffAff, 
	    monadErrorAff: monadErrorAff, 
	    altAff: altAff, 
	    plusAff: plusAff, 
	    alternativeAff: alternativeAff, 
	    monadZero: monadZero, 
	    monadPlusAff: monadPlusAff, 
	    monadRecAff: monadRecAff, 
	    monadContAff: monadContAff, 
	    semigroupCanceler: semigroupCanceler, 
	    monoidCanceler: monoidCanceler, 
	    monadParAff: monadParAff, 
	    monadRaceAff: monadRaceAff
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 77 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff.js ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {/* global exports */
	"use strict";
	
	exports._cancelWith = function (nonCanceler, aff, canceler1) {
	  return function(success, error) {
	    var canceler2 = aff(success, error);
	
	    return function(e) {
	      return function(success, error) {
	        var cancellations = 0;
	        var result        = false;
	        var errored       = false;
	
	        var s = function(bool) {
	          cancellations = cancellations + 1;
	          result        = result || bool;
	
	          if (cancellations === 2 && !errored) {
	            success(result);
	          }
	        };
	
	        var f = function(err) {
	          if (!errored) {
	            errored = true;
	            error(err);
	          }
	        };
	
	        canceler2(e)(s, f);
	        canceler1(e)(s, f);
	
	        return nonCanceler;
	      };
	    };
	  };
	}
	
	exports._setTimeout = function (nonCanceler, millis, aff) {
	  var set = setTimeout, clear = clearTimeout;
	  if (millis <= 0 && typeof setImmediate === "function") {
	    set = setImmediate;
	    clear = clearImmediate;
	  }
	  return function(success, error) {
	    var canceler;
	
	    var timeout = set(function() {
	      canceler = aff(success, error);
	    }, millis);
	
	    return function(e) {
	      return function(s, f) {
	        if (canceler !== undefined) {
	          return canceler(e)(s, f);
	        } else {
	          clear(timeout);
	          s(true);
	          return nonCanceler;
	        }
	      };
	    };
	  };
	}
	
	exports._unsafeInterleaveAff = function (aff) {
	  return aff;
	}
	
	exports._forkAff = function (nonCanceler, aff) {
	  var voidF = function(){};
	
	  return function(success, error) {
	    var canceler = aff(voidF, voidF);
	    success(canceler);
	    return nonCanceler;
	  };
	}
	
	exports._forkAll = function (nonCanceler, foldl, affs) {
	  var voidF = function(){};
	
	  return function(success, error) {
	    try {
	      var cancelers = foldl(function(acc) {
	        return function(aff) {
	          acc.push(aff(voidF, voidF));
	          return acc;
	        }
	      })([])(affs);
	    } catch (err) {
	      error(err)
	    }
	
	    var canceler = function(e) {
	      return function(success, error) {
	        var cancellations = 0;
	        var result        = false;
	        var errored       = false;
	
	        var s = function(bool) {
	          cancellations = cancellations + 1;
	          result        = result || bool;
	
	          if (cancellations === cancelers.length && !errored) {
	            success(result);
	          }
	        };
	
	        var f = function(err) {
	          if (!errored) {
	            errored = true;
	            error(err);
	          }
	        };
	
	        for (var i = 0; i < cancelers.length; i++) {
	          cancelers[i](e)(s, f);
	        }
	
	        return nonCanceler;
	      };
	    };
	
	    success(canceler);
	    return nonCanceler;
	  };
	}
	
	exports._makeAff = function (cb) {
	  return function(success, error) {
	    try {
	      return cb(function(e) {
	        return function() {
	          error(e);
	        };
	      })(function(v) {
	        return function() {
	          success(v);
	        };
	      })();
	    } catch (err) {
	      error(err);
	    }
	  }
	}
	
	exports._pure = function (nonCanceler, v) {
	  return function(success, error) {
	    success(v);
	    return nonCanceler;
	  };
	}
	
	exports._throwError = function (nonCanceler, e) {
	  return function(success, error) {
	    error(e);
	    return nonCanceler;
	  };
	}
	
	exports._fmap = function (f, aff) {
	  return function(success, error) {
	    try {
	      return aff(function(v) {
	        try {
	          var v2 = f(v);
	        } catch (err) {
	          error(err)
	        }
	        success(v2);
	      }, error);
	    } catch (err) {
	      error(err);
	    }
	  };
	}
	
	exports._bind = function (alwaysCanceler, aff, f) {
	  return function(success, error) {
	    var canceler1, canceler2;
	
	    var isCanceled    = false;
	    var requestCancel = false;
	
	    var onCanceler = function(){};
	
	    canceler1 = aff(function(v) {
	      if (requestCancel) {
	        isCanceled = true;
	
	        return alwaysCanceler;
	      } else {
	        canceler2 = f(v)(success, error);
	
	        onCanceler(canceler2);
	
	        return canceler2;
	      }
	    }, error);
	
	    return function(e) {
	      return function(s, f) {
	        requestCancel = true;
	
	        if (canceler2 !== undefined) {
	          return canceler2(e)(s, f);
	        } else {
	          return canceler1(e)(function(bool) {
	            if (bool || isCanceled) {
	              s(true);
	            } else {
	              onCanceler = function(canceler) {
	                canceler(e)(s, f);
	              };
	            }
	          }, f);
	        }
	      };
	    };
	  };
	}
	
	exports._attempt = function (Left, Right, aff) {
	  return function(success, error) {
	    try {
	      return aff(function(v) {
	        success(Right(v));
	      }, function(e) {
	        success(Left(e));
	      });
	    } catch (err) {
	      success(Left(err));
	    }
	  };
	}
	
	exports._runAff = function (errorT, successT, aff) {
	  return function() {
	    return aff(function(v) {
	      successT(v)();
	    }, function(e) {
	      errorT(e)();
	    });
	  };
	}
	
	exports._liftEff = function (nonCanceler, e) {
	  return function(success, error) {
	    var result;
	    try {
	      result = e();
	    } catch (err) {
	      error(err);
	      return nonCanceler;
	    }
	
	    success(result);
	    return nonCanceler;
	  };
	}
	
	exports._tailRecM = function (isLeft, f, a) {
	  return function(success, error) {
	    return function go(acc) {
	      var result, status, canceler;
	
	      // Observes synchronous effects using a flag.
	      //   status = 0 (unresolved status)
	      //   status = 1 (synchronous effect)
	      //   status = 2 (asynchronous effect)
	      while (true) {
	        status = 0;
	        canceler = f(acc)(function(v) {
	          // If the status is still unresolved, we have observed a
	          // synchronous effect. Otherwise, the status will be `2`.
	          if (status === 0) {
	            // Store the result for further synchronous processing.
	            result = v;
	            status = 1;
	          } else {
	            // When we have observed an asynchronous effect, we use normal
	            // recursion. This is safe because we will be on a new stack.
	            if (isLeft(v)) {
	              go(v.value0);
	            } else {
	              try {
	                success(v.value0);
	              } catch (err) {
	                error(err);
	              }
	            }
	          }
	        }, error);
	
	        // If the status has already resolved to `1` by our Aff handler, then
	        // we have observed a synchronous effect. Otherwise it will still be
	        // `0`.
	        if (status === 1) {
	          // When we have observed a synchronous effect, we merely swap out the
	          // accumulator and continue the loop, preserving stack.
	          if (isLeft(result)) {
	            acc = result.value0;
	            continue;
	          } else {
	            try {
	              success(result.value0);
	            } catch (err) {
	              error(err);
	            }
	          }
	        } else {
	          // If the status has not resolved yet, then we have observed an
	          // asynchronous effect.
	          status = 2;
	        }
	        return canceler;
	      }
	
	    }(a);
	  };
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/timers-browserify/main.js */ 78).setImmediate, __webpack_require__(/*! ./~/timers-browserify/main.js */ 78).clearImmediate))

/***/ },
/* 78 */
/*!*************************************!*\
  !*** ./~/timers-browserify/main.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(/*! process/browser.js */ 79).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;
	
	// DOM APIs, for completeness
	
	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };
	
	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};
	
	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};
	
	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};
	
	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);
	
	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};
	
	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
	
	  immediateIds[id] = true;
	
	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });
	
	  return id;
	};
	
	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/timers-browserify/main.js */ 78).setImmediate, __webpack_require__(/*! ./~/timers-browserify/main.js */ 78).clearImmediate))

/***/ },
/* 79 */
/*!**************************************************!*\
  !*** ./~/timers-browserify/~/process/browser.js ***!
  \**************************************************/
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 80 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Alt.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.alt = alt;
	};
	var altArray = new Alt(function () {
	    return Data_Functor.functorArray;
	}, Data_Semigroup.append(Data_Semigroup.semigroupArray));
	var alt = function (dict) {
	    return dict.alt;
	};
	module.exports = {
	    Alt: Alt, 
	    alt: alt, 
	    altArray: altArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 81 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Alternative.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
	    this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
	    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
	};
	var alternativeArray = new Alternative(function () {
	    return Control_Applicative.applicativeArray;
	}, function () {
	    return Control_Plus.plusArray;
	});
	module.exports = {
	    Alternative: Alternative, 
	    alternativeArray: alternativeArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 82 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Plus.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
	    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
	    this.empty = empty;
	};
	var plusArray = new Plus(function () {
	    return Control_Alt.altArray;
	}, [  ]);
	var empty = function (dict) {
	    return dict.empty;
	};
	module.exports = {
	    Plus: Plus, 
	    empty: empty, 
	    plusArray: plusArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 83 */
/*!*****************************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.purs ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.js */ 84);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	module.exports = {
	    _killVar: $foreign._killVar, 
	    _makeVar: $foreign._makeVar, 
	    _putVar: $foreign._putVar, 
	    _takeVar: $foreign._takeVar
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 84 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.js ***!
  \***************************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	exports._makeVar = function (nonCanceler) {
	  return function(success, error) {
	    try {
	      success({
	        consumers: [],
	        producers: [],
	        error: undefined
	      });
	    } catch (err) {
	      error(err);
	    }
	
	    return nonCanceler;
	  };
	};
	
	exports._takeVar = function (nonCanceler, avar) {
	  return function(success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else if (avar.producers.length > 0) {
	      var producer = avar.producers.shift();
	
	      producer(success, error);
	    } else {
	      avar.consumers.push({success: success, error: error});
	    }
	
	    return nonCanceler;
	  };
	};
	
	exports._putVar = function (nonCanceler, avar, a) {
	  return function(success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else if (avar.consumers.length === 0) {
	      avar.producers.push(function(success, error) {
	        try {
	          success(a);
	        } catch (err) {
	          error(err);
	        }
	      });
	
	      success({});
	    } else {
	      var consumer = avar.consumers.shift();
	
	      try {
	        consumer.success(a);
	      } catch (err) {
	        error(err);
	
	        return;
	      }
	
	      success({});
	    }
	
	    return nonCanceler;
	  };
	};
	
	exports._killVar = function (nonCanceler, avar, e) {
	  return function(success, error) {
	    if (avar.error !== undefined) {
	      error(avar.error);
	    } else {
	      var errors = [];
	
	      avar.error = e;
	
	      while (avar.consumers.length > 0) {
	        var consumer = avar.consumers.shift();
	
	        try {
	          consumer.error(e);
	        } catch (err) {
	          errors.push(err);
	        }
	      }
	
	      if (errors.length > 0) error(errors[0]);
	      else success({});
	    }
	
	    return nonCanceler;
	  };
	};


/***/ },
/* 85 */
/*!*************************************************************************************!*\
  !*** ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.js */ 86);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var $$try = function (action) {
	    return $foreign.catchException(function ($0) {
	        return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
	    })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
	};
	var $$throw = function ($1) {
	    return $foreign.throwException($foreign.error($1));
	};
	var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var showError = new Data_Show.Show($foreign.showErrorImpl);
	module.exports = {
	    stack: stack, 
	    "throw": $$throw, 
	    "try": $$try, 
	    showError: showError, 
	    catchException: $foreign.catchException, 
	    error: $foreign.error, 
	    message: $foreign.message, 
	    throwException: $foreign.throwException
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 86 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.js ***!
  \***********************************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Control.Monad.Eff.Exception
	
	exports.showErrorImpl = function (err) {
	  return err.stack || err.toString();
	};
	
	exports.error = function (msg) {
	  return new Error(msg);
	};
	
	exports.message = function (e) {
	  return e.message;
	};
	
	exports.stackImpl = function (just) {
	  return function (nothing) {
	    return function (e) {
	      return e.stack ? just(e.stack) : nothing;
	    };
	  };
	};
	
	exports.throwException = function (e) {
	  return function () {
	    throw e;
	  };
	};
	
	exports.catchException = function (c) {
	  return function (t) {
	    return function () {
	      try {
	        return t();
	      } catch (e) {
	        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
	          return c(e)();
	        } else {
	          return c(new Error(e.toString()))();
	        }
	      }
	    };
	  };
	};


/***/ },
/* 87 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-either/src/Data/Either.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bifoldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs */ 89);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Bitraversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Bitraversable.purs */ 98);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Left = (function () {
	    function Left(value0) {
	        this.value0 = value0;
	    };
	    Left.create = function (value0) {
	        return new Left(value0);
	    };
	    return Left;
	})();
	var Right = (function () {
	    function Right(value0) {
	        this.value0 = value0;
	    };
	    Right.create = function (value0) {
	        return new Right(value0);
	    };
	    return Right;
	})();
	var showEither = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            if (v instanceof Left) {
	                return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
	            };
	            if (v instanceof Right) {
	                return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
	            };
	            throw new Error("Failed pattern match at Data.Either line 171, column 3 - line 172, column 3: " + [ v.constructor.name ]);
	        });
	    };
	};
	var functorEither = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        if (v1 instanceof Right) {
	            return new Right(v(v1.value0));
	        };
	        throw new Error("Failed pattern match at Data.Either line 46, column 3 - line 46, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));
	var fromRight = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar52) {
	                return $dollar52;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Right) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 262, column 1 - line 262, column 23: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var fromLeft = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar56) {
	                return $dollar56;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Left) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Either line 257, column 1 - line 257, column 22: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Left) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Right) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 202, column 3 - line 202, column 31: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 200, column 3 - line 200, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return z;
	            };
	            if (v1 instanceof Right) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Either line 198, column 3 - line 198, column 26: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableEither = new Data_Traversable.Traversable(function () {
	    return foldableEither;
	}, function () {
	    return functorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Control_Applicative.pure(dictApplicative)(new Left(v.value0));
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 216, column 3 - line 216, column 36: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Left) {
	                return Control_Applicative.pure(dictApplicative)(new Left(v1.value0));
	            };
	            if (v1 instanceof Right) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 214, column 3 - line 214, column 39: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var extendEither = new Control_Extend.Extend(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Left) {
	            return new Left(v1.value0);
	        };
	        return new Right(v(v1));
	    };
	});
	var eqEither = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (v) {
	            return function (v1) {
	                if (v instanceof Left && v1 instanceof Left) {
	                    return Data_Eq.eq(dictEq)(v.value0)(v1.value0);
	                };
	                if (v instanceof Right && v1 instanceof Right) {
	                    return Data_Eq.eq(dictEq1)(v.value0)(v1.value0);
	                };
	                return false;
	            };
	        });
	    };
	};
	var ordEither = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqEither(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (v) {
	            return function (v1) {
	                if (v instanceof Left && v1 instanceof Left) {
	                    return Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                };
	                if (v instanceof Right && v1 instanceof Right) {
	                    return Data_Ord.compare(dictOrd1)(v.value0)(v1.value0);
	                };
	                if (v instanceof Left) {
	                    return Data_Ordering.LT.value;
	                };
	                if (v1 instanceof Left) {
	                    return Data_Ordering.GT.value;
	                };
	                throw new Error("Failed pattern match at Data.Either line 188, column 3 - line 188, column 48: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        });
	    };
	};
	var either = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return v(v2.value0);
	            };
	            if (v2 instanceof Right) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
	var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
	var boundedEither = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordEither(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
	    };
	};
	var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Left) {
	                return new Left(v(v2.value0));
	            };
	            if (v2 instanceof Right) {
	                return new Right(v1(v2.value0));
	            };
	            throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 53, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	var bifoldableEither = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 210, column 3 - line 210, column 31: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(z)(v2.value0);
	                };
	                if (v2 instanceof Right) {
	                    return v1(z)(v2.value0);
	                };
	                throw new Error("Failed pattern match at Data.Either line 208, column 3 - line 208, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	}, function (v) {
	    return function (v1) {
	        return function (z) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return v(v2.value0)(z);
	                };
	                if (v2 instanceof Right) {
	                    return v1(v2.value0)(z);
	                };
	                throw new Error("Failed pattern match at Data.Either line 206, column 3 - line 206, column 33: " + [ v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableEither;
	}, function () {
	    return bifunctorEither;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Left) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Either line 222, column 3 - line 222, column 35: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Left) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Left.create)(v(v2.value0));
	                };
	                if (v2 instanceof Right) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Right.create)(v1(v2.value0));
	                };
	                throw new Error("Failed pattern match at Data.Either line 220, column 3 - line 220, column 41: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	});
	var applyEither = new Control_Apply.Apply(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return new Left(v.value0);
	        };
	        if (v instanceof Right) {
	            return Data_Functor.map(functorEither)(v.value0)(v1);
	        };
	        throw new Error("Failed pattern match at Data.Either line 89, column 3 - line 89, column 28: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindEither = new Control_Bind.Bind(function () {
	    return applyEither;
	}, either(function (e) {
	    return function (v) {
	        return new Left(e);
	    };
	})(function (a) {
	    return function (f) {
	        return f(a);
	    };
	}));
	var semigroupEither = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
	        };
	    });
	};
	var semiringEither = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.add(dictSemiring))(x))(y);
	        };
	    }, function (x) {
	        return function (y) {
	            return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semiring.mul(dictSemiring))(x))(y);
	        };
	    }, new Right(Data_Semiring.one(dictSemiring)), new Right(Data_Semiring.zero(dictSemiring)));
	};
	var applicativeEither = new Control_Applicative.Applicative(function () {
	    return applyEither;
	}, Right.create);
	var monadEither = new Control_Monad.Monad(function () {
	    return applicativeEither;
	}, function () {
	    return bindEither;
	});
	var altEither = new Control_Alt.Alt(function () {
	    return functorEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Left) {
	            return v1;
	        };
	        return v;
	    };
	});
	module.exports = {
	    Left: Left, 
	    Right: Right, 
	    either: either, 
	    fromLeft: fromLeft, 
	    fromRight: fromRight, 
	    isLeft: isLeft, 
	    isRight: isRight, 
	    functorEither: functorEither, 
	    invariantEither: invariantEither, 
	    bifunctorEither: bifunctorEither, 
	    applyEither: applyEither, 
	    applicativeEither: applicativeEither, 
	    altEither: altEither, 
	    bindEither: bindEither, 
	    monadEither: monadEither, 
	    extendEither: extendEither, 
	    showEither: showEither, 
	    eqEither: eqEither, 
	    ordEither: ordEither, 
	    boundedEither: boundedEither, 
	    foldableEither: foldableEither, 
	    bifoldableEither: bifoldableEither, 
	    traversableEither: traversableEither, 
	    bitraversableEither: bitraversableEither, 
	    semiringEither: semiringEither, 
	    semigroupEither: semigroupEither
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 88 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Extend.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Extend = function (__superclass_Data$dotFunctor$dotFunctor_0, extend) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.extend = extend;
	};
	var extendFn = function (dictSemigroup) {
	    return new Extend(function () {
	        return Data_Functor.functorFn;
	    }, function (f) {
	        return function (g) {
	            return function (w) {
	                return f(function (w$prime) {
	                    return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
	                });
	            };
	        };
	    });
	};
	var extend = function (dict) {
	    return dict.extend;
	};
	var extendFlipped = function (dictExtend) {
	    return function (w) {
	        return function (f) {
	            return extend(dictExtend)(f)(w);
	        };
	    };
	};
	var duplicate = function (dictExtend) {
	    return extend(dictExtend)(Control_Category.id(Control_Category.categoryFn));
	};
	var composeCoKleisliFlipped = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return f(extend(dictExtend)(g)(w));
	            };
	        };
	    };
	};
	var composeCoKleisli = function (dictExtend) {
	    return function (f) {
	        return function (g) {
	            return function (w) {
	                return g(extend(dictExtend)(f)(w));
	            };
	        };
	    };
	};
	module.exports = {
	    Extend: Extend, 
	    composeCoKleisli: composeCoKleisli, 
	    composeCoKleisliFlipped: composeCoKleisliFlipped, 
	    duplicate: duplicate, 
	    extend: extend, 
	    extendFlipped: extendFlipped, 
	    extendFn: extendFn
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 89 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Monoid_Conj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Conj.purs */ 91);
	var Data_Monoid_Disj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Disj.purs */ 94);
	var Data_Monoid_Dual = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Dual.purs */ 95);
	var Data_Monoid_Endo = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Endo.purs */ 96);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
	    this.bifoldMap = bifoldMap;
	    this.bifoldl = bifoldl;
	    this.bifoldr = bifoldr;
	};
	var bifoldr = function (dict) {
	    return dict.bifoldr;
	};
	var bitraverse_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return bifoldr(dictBifoldable)(function ($18) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($18));
	                })(function ($19) {
	                    return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(g($19));
	                })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	            };
	        };
	    };
	};
	var bifor_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	var bisequence_ = function (dictBifoldable) {
	    return function (dictApplicative) {
	        return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var bifoldl = function (dict) {
	    return dict.bifoldl;
	};
	var bifoldMapDefaultR = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldr(dictBifoldable)(function ($20) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f($20));
	                    })(function ($21) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(g($21));
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMapDefaultL = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (g) {
	                return function (p) {
	                    return bifoldl(dictBifoldable)(function (m) {
	                        return function (a) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(f(a));
	                        };
	                    })(function (m) {
	                        return function (b) {
	                            return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(m)(g(b));
	                        };
	                    })(Data_Monoid.mempty(dictMonoid))(p);
	                };
	            };
	        };
	    };
	};
	var bifoldMap = function (dict) {
	    return dict.bifoldMap;
	};
	var bifoldlDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($22) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(f)($22)));
	                    })(function ($23) {
	                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(g)($23)));
	                    })(p)))(z);
	                };
	            };
	        };
	    };
	};
	var bifoldrDefault = function (dictBifoldable) {
	    return function (f) {
	        return function (g) {
	            return function (z) {
	                return function (p) {
	                    return Data_Monoid_Endo.runEndo(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo)(function ($24) {
	                        return Data_Monoid_Endo.Endo(f($24));
	                    })(function ($25) {
	                        return Data_Monoid_Endo.Endo(g($25));
	                    })(p))(z);
	                };
	            };
	        };
	    };
	};
	var bifold = function (dictBifoldable) {
	    return function (dictMonoid) {
	        return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var biany = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($26) {
	                    return Data_Monoid_Disj.runDisj(bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($27) {
	                        return Data_Monoid_Disj.Disj(p($27));
	                    })(function ($28) {
	                        return Data_Monoid_Disj.Disj(q($28));
	                    })($26));
	                };
	            };
	        };
	    };
	};
	var biall = function (dictBifoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function (q) {
	                return function ($29) {
	                    return Data_Monoid_Conj.runConj(bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($30) {
	                        return Data_Monoid_Conj.Conj(p($30));
	                    })(function ($31) {
	                        return Data_Monoid_Conj.Conj(q($31));
	                    })($29));
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bifoldable: Bifoldable, 
	    biall: biall, 
	    biany: biany, 
	    bifold: bifold, 
	    bifoldMap: bifoldMap, 
	    bifoldMapDefaultL: bifoldMapDefaultL, 
	    bifoldMapDefaultR: bifoldMapDefaultR, 
	    bifoldl: bifoldl, 
	    bifoldlDefault: bifoldlDefault, 
	    bifoldr: bifoldr, 
	    bifoldrDefault: bifoldrDefault, 
	    bifor_: bifor_, 
	    bisequence_: bisequence_, 
	    bitraverse_: bitraverse_
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 90 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
	    this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
	    this.mempty = mempty;
	};
	var monoidUnit = new Monoid(function () {
	    return Data_Semigroup.semigroupUnit;
	}, Data_Unit.unit);
	var monoidString = new Monoid(function () {
	    return Data_Semigroup.semigroupString;
	}, "");
	var monoidArray = new Monoid(function () {
	    return Data_Semigroup.semigroupArray;
	}, [  ]);
	var mempty = function (dict) {
	    return dict.mempty;
	};
	var monoidFn = function (dictMonoid) {
	    return new Monoid(function () {
	        return Data_Semigroup.semigroupFn(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Function["const"](mempty(dictMonoid)));
	};
	module.exports = {
	    Monoid: Monoid, 
	    mempty: mempty, 
	    monoidUnit: monoidUnit, 
	    monoidFn: monoidFn, 
	    monoidString: monoidString, 
	    monoidArray: monoidArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 91 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Conj.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Conj = function (x) {
	    return x;
	};
	var showConj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var semigroupConj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var runConj = function (v) {
	    return v;
	};
	var monoidConj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var invariantConj = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorConj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendConj = new Control_Extend.Extend(function () {
	    return functorConj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqConj = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordConj = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqConj(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadConj = new Control_Comonad.Comonad(function () {
	    return extendConj;
	}, runConj);
	var boundedConj = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordConj(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyConj = new Control_Apply.Apply(function () {
	    return functorConj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindConj = new Control_Bind.Bind(function () {
	    return applyConj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeConj = new Control_Applicative.Applicative(function () {
	    return applyConj;
	}, Conj);
	var monadConj = new Control_Monad.Monad(function () {
	    return applicativeConj;
	}, function () {
	    return bindConj;
	});
	module.exports = {
	    Conj: Conj, 
	    runConj: runConj, 
	    eqConj: eqConj, 
	    ordConj: ordConj, 
	    boundedConj: boundedConj, 
	    functorConj: functorConj, 
	    invariantConj: invariantConj, 
	    applyConj: applyConj, 
	    applicativeConj: applicativeConj, 
	    bindConj: bindConj, 
	    monadConj: monadConj, 
	    extendConj: extendConj, 
	    comonadConj: comonadConj, 
	    showConj: showConj, 
	    semigroupConj: semigroupConj, 
	    monoidConj: monoidConj, 
	    semiringConj: semiringConj
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 92 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Comonad.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
	    this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
	    this.extract = extract;
	};
	var extract = function (dict) {
	    return dict.extract;
	};
	module.exports = {
	    Comonad: Comonad, 
	    extract: extract
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 93 */
/*!*******************************************************************************!*\
  !*** ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Invariant = function (imap) {
	    this.imap = imap;
	};
	var imapF = function (dictFunctor) {
	    return function ($1) {
	        return Data_Function["const"](Data_Functor.map(dictFunctor)($1));
	    };
	};
	var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
	var invariantFn = new Invariant(imapF(Data_Functor.functorFn));
	var imap = function (dict) {
	    return dict.imap;
	};
	module.exports = {
	    Invariant: Invariant, 
	    imap: imap, 
	    imapF: imapF, 
	    invariantFn: invariantFn, 
	    invariantArray: invariantArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 94 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Disj.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Disj = function (x) {
	    return x;
	};
	var showDisj = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringDisj = function (dictHeytingAlgebra) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var semigroupDisj = function (dictHeytingAlgebra) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    });
	};
	var runDisj = function (v) {
	    return v;
	};
	var monoidDisj = function (dictHeytingAlgebra) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDisj(dictHeytingAlgebra);
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
	};
	var functorDisj = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDisj = new Control_Extend.Extend(function () {
	    return functorDisj;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDisj = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordDisj = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqDisj(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadDisj = new Control_Comonad.Comonad(function () {
	    return extendDisj;
	}, runDisj);
	var boundedDisj = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordDisj(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyDisj = new Control_Apply.Apply(function () {
	    return functorDisj;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDisj = new Control_Bind.Bind(function () {
	    return applyDisj;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDisj = new Control_Applicative.Applicative(function () {
	    return applyDisj;
	}, Disj);
	var monadDisj = new Control_Monad.Monad(function () {
	    return applicativeDisj;
	}, function () {
	    return bindDisj;
	});
	module.exports = {
	    Disj: Disj, 
	    runDisj: runDisj, 
	    eqDisj: eqDisj, 
	    ordDisj: ordDisj, 
	    boundedDisj: boundedDisj, 
	    functorDisj: functorDisj, 
	    applyDisj: applyDisj, 
	    applicativeDisj: applicativeDisj, 
	    bindDisj: bindDisj, 
	    monadDisj: monadDisj, 
	    extendDisj: extendDisj, 
	    comonadDisj: comonadDisj, 
	    showDisj: showDisj, 
	    semigroupDisj: semigroupDisj, 
	    monoidDisj: monoidDisj, 
	    semiringDisj: semiringDisj
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 95 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Dual.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Dual = function (x) {
	    return x;
	};
	var showDual = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupDual = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v1)(v);
	        };
	    });
	};
	var runDual = function (v) {
	    return v;
	};
	var monoidDual = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupDual(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var invariantDual = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorDual = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendDual = new Control_Extend.Extend(function () {
	    return functorDual;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqDual = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordDual = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqDual(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadDual = new Control_Comonad.Comonad(function () {
	    return extendDual;
	}, runDual);
	var boundedDual = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordDual(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyDual = new Control_Apply.Apply(function () {
	    return functorDual;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindDual = new Control_Bind.Bind(function () {
	    return applyDual;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeDual = new Control_Applicative.Applicative(function () {
	    return applyDual;
	}, Dual);
	var monadDual = new Control_Monad.Monad(function () {
	    return applicativeDual;
	}, function () {
	    return bindDual;
	});
	module.exports = {
	    Dual: Dual, 
	    runDual: runDual, 
	    eqDual: eqDual, 
	    ordDual: ordDual, 
	    boundedDual: boundedDual, 
	    functorDual: functorDual, 
	    invariantDual: invariantDual, 
	    applyDual: applyDual, 
	    applicativeDual: applicativeDual, 
	    bindDual: bindDual, 
	    monadDual: monadDual, 
	    extendDual: extendDual, 
	    comonadDual: comonadDual, 
	    showDual: showDual, 
	    semigroupDual: semigroupDual, 
	    monoidDual: monoidDual
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 96 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Endo.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Endo = function (x) {
	    return x;
	};
	var semigroupEndo = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        return function ($10) {
	            return v(v1($10));
	        };
	    };
	});
	var runEndo = function (v) {
	    return v;
	};
	var monoidEndo = new Data_Monoid.Monoid(function () {
	    return semigroupEndo;
	}, Control_Category.id(Control_Category.categoryFn));
	var invariantEndo = new Data_Functor_Invariant.Invariant(function (ab) {
	    return function (ba) {
	        return function (v) {
	            return function ($11) {
	                return ab(v(ba($11)));
	            };
	        };
	    };
	});
	module.exports = {
	    Endo: Endo, 
	    runEndo: runEndo, 
	    invariantEndo: invariantEndo, 
	    semigroupEndo: semigroupEndo, 
	    monoidEndo: monoidEndo
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 97 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	
	/**
	 *  | A `Bifunctor` is a `Functor` from the pair category `(Type, Type)` to `Type`.
	 *  |
	 *  | A type constructor with two type arguments can be made into a `Bifunctor` if
	 *  | both of its type arguments are covariant.
	 *  |
	 *  | The `bimap` function maps a pair of functions over the two type arguments
	 *  | of the bifunctor.
	 *  |
	 *  | Laws:
	 *  |
	 *  | - Identity: `bimap id id == id`
	 *  | - Composition: `bimap f1 g1 <<< bimap f2 g2 == bimap (f1 <<< f2) (g1 <<< g2)`
	 *  |
	 */
	var Bifunctor = function (bimap) {
	    this.bimap = bimap;
	};
	
	/**
	 *  | A `Bifunctor` is a `Functor` from the pair category `(Type, Type)` to `Type`.
	 *  |
	 *  | A type constructor with two type arguments can be made into a `Bifunctor` if
	 *  | both of its type arguments are covariant.
	 *  |
	 *  | The `bimap` function maps a pair of functions over the two type arguments
	 *  | of the bifunctor.
	 *  |
	 *  | Laws:
	 *  |
	 *  | - Identity: `bimap id id == id`
	 *  | - Composition: `bimap f1 g1 <<< bimap f2 g2 == bimap (f1 <<< f2) (g1 <<< g2)`
	 *  |
	 */
	var bimap = function (dict) {
	    return dict.bimap;
	};
	
	/**
	 *  | Map a function over the first type argument of a `Bifunctor`.
	 */
	var lmap = function (dictBifunctor) {
	    return function (f) {
	        return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	
	/**
	 *  | Map a function over the second type arguments of a `Bifunctor`.
	 */
	var rmap = function (dictBifunctor) {
	    return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	module.exports = {
	    Bifunctor: Bifunctor, 
	    bimap: bimap, 
	    lmap: lmap, 
	    rmap: rmap
	};


/***/ },
/* 98 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Bitraversable.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Bifoldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs */ 89);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
	    this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.bisequence = bisequence;
	    this.bitraverse = bitraverse;
	};
	var bitraverse = function (dict) {
	    return dict.bitraverse;
	};
	var bisequenceDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return bitraverse(dictBitraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(t);
	        };
	    };
	};
	var bisequence = function (dict) {
	    return dict.bisequence;
	};
	var bitraverseDefault = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (g) {
	                return function (t) {
	                    return bisequence(dictBitraversable)(dictApplicative)(Data_Bifunctor.bimap(dictBitraversable["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g)(t));
	                };
	            };
	        };
	    };
	};
	var bifor = function (dictBitraversable) {
	    return function (dictApplicative) {
	        return function (t) {
	            return function (f) {
	                return function (g) {
	                    return bitraverse(dictBitraversable)(dictApplicative)(f)(g)(t);
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Bitraversable: Bitraversable, 
	    bifor: bifor, 
	    bisequence: bisequence, 
	    bisequenceDefault: bisequenceDefault, 
	    bitraverse: bitraverse, 
	    bitraverseDefault: bitraverseDefault
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 99 */
/*!*********************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs ***!
  \*********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.js */ 100);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Maybe_First = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/First.purs */ 103);
	var Data_Maybe_Last = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/Last.purs */ 104);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Monoid_Additive = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Additive.purs */ 105);
	var Data_Monoid_Conj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Conj.purs */ 91);
	var Data_Monoid_Disj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Disj.purs */ 94);
	var Data_Monoid_Dual = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Dual.purs */ 95);
	var Data_Monoid_Endo = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Endo.purs */ 96);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs */ 106);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Foldable = function (foldMap, foldl, foldr) {
	    this.foldMap = foldMap;
	    this.foldl = foldl;
	    this.foldr = foldr;
	};
	var foldr = function (dict) {
	    return dict.foldr;
	};
	var oneOf = function (dictFoldable) {
	    return function (dictPlus) {
	        return foldr(dictFoldable)(Control_Alt.alt(dictPlus["__superclass_Control.Alt.Alt_0"]()))(Control_Plus.empty(dictPlus));
	    };
	};
	var traverse_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return function (f) {
	            return foldr(dictFoldable)(function ($164) {
	                return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($164));
	            })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
	        };
	    };
	};
	var for_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
	    };
	};
	var sequence_ = function (dictApplicative) {
	    return function (dictFoldable) {
	        return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var foldl = function (dict) {
	    return dict.foldl;
	};
	var intercalate = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (sep) {
	            return function (xs) {
	                var go = function (v) {
	                    return function (x) {
	                        if (v.init) {
	                            return {
	                                init: false, 
	                                acc: x
	                            };
	                        };
	                        return {
	                            init: false, 
	                            acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
	                        };
	                    };
	                };
	                return (foldl(dictFoldable)(go)({
	                    init: true, 
	                    acc: Data_Monoid.mempty(dictMonoid)
	                })(xs)).acc;
	            };
	        };
	    };
	};
	var maximumBy = function (dictFoldable) {
	    return function (cmp) {
	        var max$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $89 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
	                        if ($89) {
	                            return v.value0;
	                        };
	                        if (!$89) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 290, column 27 - line 290, column 57: " + [ $89.constructor.name ]);
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 289, column 3 - line 289, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var maximum = function (dictOrd) {
	    return function (dictFoldable) {
	        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var minimumBy = function (dictFoldable) {
	    return function (cmp) {
	        var min$prime = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Maybe.Just(v1);
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Maybe.Just((function () {
	                        var $93 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
	                        if ($93) {
	                            return v.value0;
	                        };
	                        if (!$93) {
	                            return v1;
	                        };
	                        throw new Error("Failed pattern match at Data.Foldable line 303, column 27 - line 303, column 57: " + [ $93.constructor.name ]);
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Foldable line 302, column 3 - line 302, column 27: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
	    };
	};
	var minimum = function (dictOrd) {
	    return function (dictFoldable) {
	        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
	    };
	};
	var product = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
	    };
	};
	var sum = function (dictFoldable) {
	    return function (dictSemiring) {
	        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
	    };
	};
	var foldableMultiplicative = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableMaybe = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Monoid.mempty(dictMonoid);
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return f(v.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 132, column 3 - line 132, column 30: " + [ f.constructor.name, v.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(z)(v1.value0);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 130, column 3 - line 130, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return z;
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return v(v1.value0)(z);
	            };
	            throw new Error("Failed pattern match at Data.Foldable line 128, column 3 - line 128, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var foldableDual = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableDisj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableConj = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldableAdditive = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var foldMapDefaultR = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldr(dictFoldable)(function (x) {
	                    return function (acc) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldableArray = new Foldable(function (dictMonoid) {
	    return foldMapDefaultR(foldableArray)(dictMonoid);
	}, $foreign.foldlArray, $foreign.foldrArray);
	var foldMapDefaultL = function (dictFoldable) {
	    return function (dictMonoid) {
	        return function (f) {
	            return function (xs) {
	                return foldl(dictFoldable)(function (acc) {
	                    return function (x) {
	                        return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
	                    };
	                })(Data_Monoid.mempty(dictMonoid))(xs);
	            };
	        };
	    };
	};
	var foldMap = function (dict) {
	    return dict.foldMap;
	};
	var foldableFirst = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldableLast = new Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return foldMap(foldableMaybe)(dictMonoid)(f)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldl(foldableMaybe)(f)(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return foldr(foldableMaybe)(f)(z)(v);
	        };
	    };
	});
	var foldlDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(function ($165) {
	                    return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo(Data_Function.flip(c)($165)));
	                })(xs)))(u);
	            };
	        };
	    };
	};
	var foldrDefault = function (dictFoldable) {
	    return function (c) {
	        return function (u) {
	            return function (xs) {
	                return Data_Monoid_Endo.runEndo(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(function ($166) {
	                    return Data_Monoid_Endo.Endo(c($166));
	                })(xs))(u);
	            };
	        };
	    };
	};
	var fold = function (dictFoldable) {
	    return function (dictMonoid) {
	        return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var find = function (dictFoldable) {
	    return function (p) {
	        var go = function (v) {
	            return function (v1) {
	                if (v instanceof Data_Maybe.Nothing && p(v1)) {
	                    return new Data_Maybe.Just(v1);
	                };
	                return v;
	            };
	        };
	        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
	    };
	};
	var any = function (dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function ($167) {
	                return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($168) {
	                    return Data_Monoid_Disj.Disj(p($168));
	                })($167));
	            };
	        };
	    };
	};
	var elem = function (dictFoldable) {
	    return function (dictEq) {
	        return function ($169) {
	            return any(dictFoldable)(Data_BooleanAlgebra.booleanAlgebraBoolean)(Data_Eq.eq(dictEq)($169));
	        };
	    };
	};
	var notElem = function (dictFoldable) {
	    return function (dictEq) {
	        return function (x) {
	            return function ($170) {
	                return !elem(dictFoldable)(dictEq)(x)($170);
	            };
	        };
	    };
	};
	var or = function (dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return any(dictFoldable)(dictBooleanAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var all = function (dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return function (p) {
	            return function ($171) {
	                return Data_Monoid_Conj.runConj(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]()))(function ($172) {
	                    return Data_Monoid_Conj.Conj(p($172));
	                })($171));
	            };
	        };
	    };
	};
	var and = function (dictFoldable) {
	    return function (dictBooleanAlgebra) {
	        return all(dictFoldable)(dictBooleanAlgebra)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Foldable: Foldable, 
	    all: all, 
	    and: and, 
	    any: any, 
	    elem: elem, 
	    find: find, 
	    fold: fold, 
	    foldMap: foldMap, 
	    foldMapDefaultL: foldMapDefaultL, 
	    foldMapDefaultR: foldMapDefaultR, 
	    foldl: foldl, 
	    foldlDefault: foldlDefault, 
	    foldr: foldr, 
	    foldrDefault: foldrDefault, 
	    for_: for_, 
	    intercalate: intercalate, 
	    maximum: maximum, 
	    maximumBy: maximumBy, 
	    minimum: minimum, 
	    minimumBy: minimumBy, 
	    notElem: notElem, 
	    oneOf: oneOf, 
	    or: or, 
	    product: product, 
	    sequence_: sequence_, 
	    sum: sum, 
	    traverse_: traverse_, 
	    foldableArray: foldableArray, 
	    foldableMaybe: foldableMaybe, 
	    foldableFirst: foldableFirst, 
	    foldableLast: foldableLast, 
	    foldableAdditive: foldableAdditive, 
	    foldableDual: foldableDual, 
	    foldableDisj: foldableDisj, 
	    foldableConj: foldableConj, 
	    foldableMultiplicative: foldableMultiplicative
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 100 */
/*!*******************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Foldable.js ***!
  \*******************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	exports.foldrArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = len - 1; i >= 0; i--) {
	        acc = f(xs[i])(acc);
	      }
	      return acc;
	    };
	  };
	};
	
	exports.foldlArray = function (f) {
	  return function (init) {
	    return function (xs) {
	      var acc = init;
	      var len = xs.length;
	      for (var i = 0; i < len; i++) {
	        acc = f(acc)(xs[i]);
	      }
	      return acc;
	    };
	  };
	};


/***/ },
/* 101 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-maybe/src/Data/Maybe.purs ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Just = (function () {
	    function Just(value0) {
	        this.value0 = value0;
	    };
	    Just.create = function (value0) {
	        return new Just(value0);
	    };
	    return Just;
	})();
	var Nothing = (function () {
	    function Nothing() {
	
	    };
	    Nothing.value = new Nothing();
	    return Nothing;
	})();
	var showMaybe = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Just) {
	            return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
	        };
	        if (v instanceof Nothing) {
	            return "Nothing";
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 220, column 3 - line 221, column 3: " + [ v.constructor.name ]);
	    });
	};
	var semigroupMaybe = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing) {
	                return v1;
	            };
	            if (v1 instanceof Nothing) {
	                return v;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 186, column 3 - line 186, column 23: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    });
	};
	var monoidMaybe = function (dictSemigroup) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMaybe(dictSemigroup);
	    }, Nothing.value);
	};
	var maybe$prime = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v(Data_Unit.unit);
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 245, column 1 - line 245, column 28: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var maybe = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nothing) {
	                return v;
	            };
	            if (v2 instanceof Just) {
	                return v1(v2.value0);
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 232, column 1 - line 232, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var isNothing = maybe(true)(Data_Function["const"](false));
	var isJust = maybe(false)(Data_Function["const"](true));
	var functorMaybe = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Just) {
	            return new Just(v(v1.value0));
	        };
	        return Nothing.value;
	    };
	});
	var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));
	var fromMaybe$prime = function (a) {
	    return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromMaybe = function (a) {
	    return maybe(a)(Control_Category.id(Control_Category.categoryFn));
	};
	var fromJust = function (dictPartial) {
	    return function (v) {
	        var __unused = function (dictPartial1) {
	            return function ($dollar29) {
	                return $dollar29;
	            };
	        };
	        return __unused(dictPartial)((function () {
	            if (v instanceof Just) {
	                return v.value0;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 283, column 1 - line 283, column 21: " + [ v.constructor.name ]);
	        })());
	    };
	};
	var extendMaybe = new Control_Extend.Extend(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Nothing) {
	            return Nothing.value;
	        };
	        return new Just(v(v1));
	    };
	});
	var eqMaybe = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            if (v instanceof Nothing && v1 instanceof Nothing) {
	                return true;
	            };
	            if (v instanceof Just && v1 instanceof Just) {
	                return Data_Eq.eq(dictEq)(v.value0)(v1.value0);
	            };
	            return false;
	        };
	    });
	};
	var ordMaybe = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMaybe(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            if (v instanceof Just && v1 instanceof Just) {
	                return Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	            };
	            if (v instanceof Nothing && v1 instanceof Nothing) {
	                return Data_Ordering.EQ.value;
	            };
	            if (v instanceof Nothing) {
	                return Data_Ordering.LT.value;
	            };
	            if (v1 instanceof Nothing) {
	                return Data_Ordering.GT.value;
	            };
	            throw new Error("Failed pattern match at Data.Maybe line 207, column 3 - line 207, column 42: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    });
	};
	var boundedMaybe = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMaybe(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
	};
	var applyMaybe = new Control_Apply.Apply(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return Data_Functor.map(functorMaybe)(v.value0)(v1);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 78, column 3 - line 78, column 31: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindMaybe = new Control_Bind.Bind(function () {
	    return applyMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Just) {
	            return v1(v.value0);
	        };
	        if (v instanceof Nothing) {
	            return Nothing.value;
	        };
	        throw new Error("Failed pattern match at Data.Maybe line 137, column 3 - line 137, column 24: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var applicativeMaybe = new Control_Applicative.Applicative(function () {
	    return applyMaybe;
	}, Just.create);
	var monadMaybe = new Control_Monad.Monad(function () {
	    return applicativeMaybe;
	}, function () {
	    return bindMaybe;
	});
	var altMaybe = new Control_Alt.Alt(function () {
	    return functorMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nothing) {
	            return v1;
	        };
	        return v;
	    };
	});
	var plusMaybe = new Control_Plus.Plus(function () {
	    return altMaybe;
	}, Nothing.value);
	var alternativeMaybe = new Control_Alternative.Alternative(function () {
	    return applicativeMaybe;
	}, function () {
	    return plusMaybe;
	});
	var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
	    return alternativeMaybe;
	}, function () {
	    return monadMaybe;
	});
	module.exports = {
	    Just: Just, 
	    Nothing: Nothing, 
	    fromJust: fromJust, 
	    fromMaybe: fromMaybe, 
	    "fromMaybe'": fromMaybe$prime, 
	    isJust: isJust, 
	    isNothing: isNothing, 
	    maybe: maybe, 
	    "maybe'": maybe$prime, 
	    functorMaybe: functorMaybe, 
	    applyMaybe: applyMaybe, 
	    applicativeMaybe: applicativeMaybe, 
	    altMaybe: altMaybe, 
	    plusMaybe: plusMaybe, 
	    alternativeMaybe: alternativeMaybe, 
	    bindMaybe: bindMaybe, 
	    monadMaybe: monadMaybe, 
	    monadZeroMaybe: monadZeroMaybe, 
	    extendMaybe: extendMaybe, 
	    invariantMaybe: invariantMaybe, 
	    semigroupMaybe: semigroupMaybe, 
	    monoidMaybe: monoidMaybe, 
	    eqMaybe: eqMaybe, 
	    ordMaybe: ordMaybe, 
	    boundedMaybe: boundedMaybe, 
	    showMaybe: showMaybe
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 102 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/MonadZero.purs ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
	    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	};
	var monadZeroArray = new MonadZero(function () {
	    return Control_Alternative.alternativeArray;
	}, function () {
	    return Control_Monad.monadArray;
	});
	var guard = function (dictMonadZero) {
	    return function (v) {
	        if (v) {
	            return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
	        };
	        if (!v) {
	            return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
	        };
	        throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
	    };
	};
	module.exports = {
	    MonadZero: MonadZero, 
	    guard: guard, 
	    monadZeroArray: monadZeroArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 103 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-maybe/src/Data/Maybe/First.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var First = function (x) {
	    return x;
	};
	var showFirst = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Just) {
	            return v;
	        };
	        return v1;
	    };
	});
	var runFirst = function (v) {
	    return v;
	};
	var monoidFirst = new Data_Monoid.Monoid(function () {
	    return semigroupFirst;
	}, Data_Maybe.Nothing.value);
	var functorFirst = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(f)(v);
	    };
	});
	var invariantFirst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorFirst));
	var extendFirst = new Control_Extend.Extend(function () {
	    return functorFirst;
	}, function (f) {
	    return function (v) {
	        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
	            return f(First($34));
	        })(v);
	    };
	});
	var eqFirst = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(v)(v1);
	        };
	    });
	};
	var ordFirst = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqFirst(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
	        };
	    });
	};
	var boundedFirst = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordFirst(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(Data_Maybe.boundedMaybe(dictBounded)), Data_Bounded.top(Data_Maybe.boundedMaybe(dictBounded)));
	};
	var applyFirst = new Control_Apply.Apply(function () {
	    return functorFirst;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(v)(v1);
	    };
	});
	var bindFirst = new Control_Bind.Bind(function () {
	    return applyFirst;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
	            return runFirst(f($35));
	        });
	    };
	});
	var applicativeFirst = new Control_Applicative.Applicative(function () {
	    return applyFirst;
	}, function ($36) {
	    return First(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($36));
	});
	var monadFirst = new Control_Monad.Monad(function () {
	    return applicativeFirst;
	}, function () {
	    return bindFirst;
	});
	module.exports = {
	    First: First, 
	    runFirst: runFirst, 
	    eqFirst: eqFirst, 
	    ordFirst: ordFirst, 
	    boundedFirst: boundedFirst, 
	    functorFirst: functorFirst, 
	    invariantFirst: invariantFirst, 
	    applyFirst: applyFirst, 
	    applicativeFirst: applicativeFirst, 
	    bindFirst: bindFirst, 
	    monadFirst: monadFirst, 
	    extendFirst: extendFirst, 
	    showFirst: showFirst, 
	    semigroupFirst: semigroupFirst, 
	    monoidFirst: monoidFirst
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 104 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-maybe/src/Data/Maybe/Last.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Last = function (x) {
	    return x;
	};
	var showLast = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
	    });
	};
	var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Maybe.Just) {
	            return v1;
	        };
	        if (v1 instanceof Data_Maybe.Nothing) {
	            return v;
	        };
	        throw new Error("Failed pattern match at Data.Maybe.Last line 67, column 3 - line 67, column 39: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var runLast = function (v) {
	    return v;
	};
	var monoidLast = new Data_Monoid.Monoid(function () {
	    return semigroupLast;
	}, Data_Maybe.Nothing.value);
	var functorLast = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(f)(v);
	    };
	});
	var invariantLast = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLast));
	var extendLast = new Control_Extend.Extend(function () {
	    return functorLast;
	}, function (f) {
	    return function (v) {
	        return Control_Extend.extend(Data_Maybe.extendMaybe)(function ($34) {
	            return f(Last($34));
	        })(v);
	    };
	});
	var eqLast = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(v)(v1);
	        };
	    });
	};
	var ordLast = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqLast(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd))(v)(v1);
	        };
	    });
	};
	var boundedLast = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordLast(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(Data_Maybe.boundedMaybe(dictBounded)), Data_Bounded.top(Data_Maybe.boundedMaybe(dictBounded)));
	};
	var applyLast = new Control_Apply.Apply(function () {
	    return functorLast;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(v)(v1);
	    };
	});
	var bindLast = new Control_Bind.Bind(function () {
	    return applyLast;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($35) {
	            return runLast(f($35));
	        });
	    };
	});
	var applicativeLast = new Control_Applicative.Applicative(function () {
	    return applyLast;
	}, function ($36) {
	    return Last(Control_Applicative.pure(Data_Maybe.applicativeMaybe)($36));
	});
	var monadLast = new Control_Monad.Monad(function () {
	    return applicativeLast;
	}, function () {
	    return bindLast;
	});
	module.exports = {
	    Last: Last, 
	    runLast: runLast, 
	    eqLast: eqLast, 
	    ordLast: ordLast, 
	    boundedLast: boundedLast, 
	    functorLast: functorLast, 
	    invariantLast: invariantLast, 
	    applyLast: applyLast, 
	    applicativeLast: applicativeLast, 
	    bindLast: bindLast, 
	    monadLast: monadLast, 
	    extendLast: extendLast, 
	    showLast: showLast, 
	    semigroupLast: semigroupLast, 
	    monoidLast: monoidLast
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 105 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Additive.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Additive = function (x) {
	    return x;
	};
	var showAdditive = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupAdditive = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    });
	};
	var runAdditive = function (v) {
	    return v;
	};
	var monoidAdditive = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupAdditive(dictSemiring);
	    }, Data_Semiring.zero(dictSemiring));
	};
	var invariantAdditive = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorAdditive = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendAdditive = new Control_Extend.Extend(function () {
	    return functorAdditive;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqAdditive = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordAdditive = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqAdditive(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadAdditive = new Control_Comonad.Comonad(function () {
	    return extendAdditive;
	}, runAdditive);
	var boundedAdditive = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordAdditive(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyAdditive = new Control_Apply.Apply(function () {
	    return functorAdditive;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindAdditive = new Control_Bind.Bind(function () {
	    return applyAdditive;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeAdditive = new Control_Applicative.Applicative(function () {
	    return applyAdditive;
	}, Additive);
	var monadAdditive = new Control_Monad.Monad(function () {
	    return applicativeAdditive;
	}, function () {
	    return bindAdditive;
	});
	module.exports = {
	    Additive: Additive, 
	    runAdditive: runAdditive, 
	    eqAdditive: eqAdditive, 
	    ordAdditive: ordAdditive, 
	    boundedAdditive: boundedAdditive, 
	    functorAdditive: functorAdditive, 
	    invariantAdditive: invariantAdditive, 
	    applyAdditive: applyAdditive, 
	    applicativeAdditive: applicativeAdditive, 
	    bindAdditive: bindAdditive, 
	    monadAdditive: monadAdditive, 
	    extendAdditive: extendAdditive, 
	    comonadAdditive: comonadAdditive, 
	    showAdditive: showAdditive, 
	    semigroupAdditive: semigroupAdditive, 
	    monoidAdditive: monoidAdditive
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 106 */
/*!********************************************************************************!*\
  !*** ./bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Multiplicative = function (x) {
	    return x;
	};
	var showMultiplicative = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semigroupMultiplicative = function (dictSemiring) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    });
	};
	var runMultiplicative = function (v) {
	    return v;
	};
	var monoidMultiplicative = function (dictSemiring) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMultiplicative(dictSemiring);
	    }, Data_Semiring.one(dictSemiring));
	};
	var invariantMultiplicative = new Data_Functor_Invariant.Invariant(function (f) {
	    return function (v) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var functorMultiplicative = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var extendMultiplicative = new Control_Extend.Extend(function () {
	    return functorMultiplicative;
	}, function (f) {
	    return function (x) {
	        return f(x);
	    };
	});
	var eqMultiplicative = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordMultiplicative = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqMultiplicative(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadMultiplicative = new Control_Comonad.Comonad(function () {
	    return extendMultiplicative;
	}, runMultiplicative);
	var boundedMultiplicative = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordMultiplicative(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var applyMultiplicative = new Control_Apply.Apply(function () {
	    return functorMultiplicative;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindMultiplicative = new Control_Bind.Bind(function () {
	    return applyMultiplicative;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
	    return applyMultiplicative;
	}, Multiplicative);
	var monadMultiplicative = new Control_Monad.Monad(function () {
	    return applicativeMultiplicative;
	}, function () {
	    return bindMultiplicative;
	});
	module.exports = {
	    Multiplicative: Multiplicative, 
	    runMultiplicative: runMultiplicative, 
	    eqMultiplicative: eqMultiplicative, 
	    ordMultiplicative: ordMultiplicative, 
	    boundedMultiplicative: boundedMultiplicative, 
	    functorMultiplicative: functorMultiplicative, 
	    invariantMultiplicative: invariantMultiplicative, 
	    applyMultiplicative: applyMultiplicative, 
	    applicativeMultiplicative: applicativeMultiplicative, 
	    bindMultiplicative: bindMultiplicative, 
	    monadMultiplicative: monadMultiplicative, 
	    extendMultiplicative: extendMultiplicative, 
	    comonadMultiplicative: comonadMultiplicative, 
	    showMultiplicative: showMultiplicative, 
	    semigroupMultiplicative: semigroupMultiplicative, 
	    monoidMultiplicative: monoidMultiplicative
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 107 */
/*!************************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.js */ 108);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Maybe_First = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/First.purs */ 103);
	var Data_Maybe_Last = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/Last.purs */ 104);
	var Data_Monoid_Additive = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Additive.purs */ 105);
	var Data_Monoid_Conj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Conj.purs */ 91);
	var Data_Monoid_Disj = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Disj.purs */ 94);
	var Data_Monoid_Dual = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Dual.purs */ 95);
	var Data_Monoid_Multiplicative = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid/Multiplicative.purs */ 106);
	var StateL = function (x) {
	    return x;
	};
	var StateR = function (x) {
	    return x;
	};
	var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Data$dotFunctor$dotFunctor_0, sequence, traverse) {
	    this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.sequence = sequence;
	    this.traverse = traverse;
	};
	var traverse = function (dict) {
	    return dict.traverse;
	};
	var traversableMultiplicative = new Traversable(function () {
	    return Data_Foldable.foldableMultiplicative;
	}, function () {
	    return Data_Monoid_Multiplicative.functorMultiplicative;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
	        };
	    };
	});
	var traversableMaybe = new Traversable(function () {
	    return Data_Foldable.foldableMaybe;
	}, function () {
	    return Data_Maybe.functorMaybe;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v.value0);
	        };
	        throw new Error("Failed pattern match at Data.Traversable line 88, column 3 - line 88, column 35: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Data_Maybe.Nothing) {
	                return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
	            };
	            if (v1 instanceof Data_Maybe.Just) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)(v(v1.value0));
	            };
	            throw new Error("Failed pattern match at Data.Traversable line 86, column 3 - line 86, column 37: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var traversableDual = new Traversable(function () {
	    return Data_Foldable.foldableDual;
	}, function () {
	    return Data_Monoid_Dual.functorDual;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Dual.Dual)(f(v));
	        };
	    };
	});
	var traversableDisj = new Traversable(function () {
	    return Data_Foldable.foldableDisj;
	}, function () {
	    return Data_Monoid_Disj.functorDisj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Disj.Disj)(f(v));
	        };
	    };
	});
	var traversableConj = new Traversable(function () {
	    return Data_Foldable.foldableConj;
	}, function () {
	    return Data_Monoid_Conj.functorConj;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Conj.Conj)(f(v));
	        };
	    };
	});
	var traversableAdditive = new Traversable(function () {
	    return Data_Foldable.foldableAdditive;
	}, function () {
	    return Data_Monoid_Additive.functorAdditive;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Monoid_Additive.Additive)(f(v));
	        };
	    };
	});
	var stateR = function (v) {
	    return v;
	};
	var stateL = function (v) {
	    return v;
	};
	var sequenceDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return function (tma) {
	            return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn))(tma);
	        };
	    };
	};
	var traversableArray = new Traversable(function () {
	    return Data_Foldable.foldableArray;
	}, function () {
	    return Data_Functor.functorArray;
	}, function (dictApplicative) {
	    return sequenceDefault(traversableArray)(dictApplicative);
	}, function (dictApplicative) {
	    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]()))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Applicative.pure(dictApplicative));
	});
	var sequence = function (dict) {
	    return dict.sequence;
	};
	var traversableFirst = new Traversable(function () {
	    return Data_Foldable.foldableFirst;
	}, function () {
	    return Data_Maybe_First.functorFirst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traversableLast = new Traversable(function () {
	    return Data_Foldable.foldableLast;
	}, function () {
	    return Data_Maybe_Last.functorLast;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
	        };
	    };
	});
	var traverseDefault = function (dictTraversable) {
	    return function (dictApplicative) {
	        return function (f) {
	            return function (ta) {
	                return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable["__superclass_Data.Functor.Functor_0"]())(f)(ta));
	            };
	        };
	    };
	};
	var functorStateR = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $75 = stateR(k)(s);
	            return {
	                accum: $75.accum, 
	                value: f($75.value)
	            };
	        };
	    };
	});
	var functorStateL = new Data_Functor.Functor(function (f) {
	    return function (k) {
	        return function (s) {
	            var $78 = stateL(k)(s);
	            return {
	                accum: $78.accum, 
	                value: f($78.value)
	            };
	        };
	    };
	});
	var $$for = function (dictApplicative) {
	    return function (dictTraversable) {
	        return function (x) {
	            return function (f) {
	                return traverse(dictTraversable)(dictApplicative)(f)(x);
	            };
	        };
	    };
	};
	var applyStateR = new Control_Apply.Apply(function () {
	    return functorStateR;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $81 = stateR(x)(s);
	            var $82 = stateR(f)($81.accum);
	            return {
	                accum: $82.accum, 
	                value: $82.value($81.value)
	            };
	        };
	    };
	});
	var applyStateL = new Control_Apply.Apply(function () {
	    return functorStateL;
	}, function (f) {
	    return function (x) {
	        return function (s) {
	            var $87 = stateL(f)(s);
	            var $88 = stateL(x)($87.accum);
	            return {
	                accum: $88.accum, 
	                value: $87.value($88.value)
	            };
	        };
	    };
	});
	var applicativeStateR = new Control_Applicative.Applicative(function () {
	    return applyStateR;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s, 
	            value: a
	        };
	    };
	});
	var mapAccumR = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateR(traverse(dictTraversable)(applicativeStateR)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanr = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumR(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(a)(b);
	                        return {
	                            accum: b$prime, 
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	var applicativeStateL = new Control_Applicative.Applicative(function () {
	    return applyStateL;
	}, function (a) {
	    return function (s) {
	        return {
	            accum: s, 
	            value: a
	        };
	    };
	});
	var mapAccumL = function (dictTraversable) {
	    return function (f) {
	        return function (s0) {
	            return function (xs) {
	                return stateL(traverse(dictTraversable)(applicativeStateL)(function (a) {
	                    return function (s) {
	                        return f(s)(a);
	                    };
	                })(xs))(s0);
	            };
	        };
	    };
	};
	var scanl = function (dictTraversable) {
	    return function (f) {
	        return function (b0) {
	            return function (xs) {
	                return (mapAccumL(dictTraversable)(function (b) {
	                    return function (a) {
	                        var b$prime = f(b)(a);
	                        return {
	                            accum: b$prime, 
	                            value: b$prime
	                        };
	                    };
	                })(b0)(xs)).value;
	            };
	        };
	    };
	};
	module.exports = {
	    Traversable: Traversable, 
	    "for": $$for, 
	    mapAccumL: mapAccumL, 
	    mapAccumR: mapAccumR, 
	    scanl: scanl, 
	    scanr: scanr, 
	    sequence: sequence, 
	    sequenceDefault: sequenceDefault, 
	    traverse: traverse, 
	    traverseDefault: traverseDefault, 
	    traversableArray: traversableArray, 
	    traversableMaybe: traversableMaybe, 
	    traversableFirst: traversableFirst, 
	    traversableLast: traversableLast, 
	    traversableAdditive: traversableAdditive, 
	    traversableDual: traversableDual, 
	    traversableConj: traversableConj, 
	    traversableDisj: traversableDisj, 
	    traversableMultiplicative: traversableMultiplicative
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 108 */
/*!**********************************************************************************!*\
  !*** ./bower_components/purescript-foldable-traversable/src/Data/Traversable.js ***!
  \**********************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Traversable
	
	// jshint maxparams: 3
	
	exports.traverseArrayImpl = function () {
	  function Cont(fn) {
	    this.fn = fn;
	  }
	
	  var emptyList = {};
	
	  var ConsCell = function (head, tail) {
	    this.head = head;
	    this.tail = tail;
	  };
	
	  function consList(x) {
	    return function (xs) {
	      return new ConsCell(x, xs);
	    };
	  }
	
	  function listToArray(list) {
	    var arr = [];
	    while (list !== emptyList) {
	      arr.push(list.head);
	      list = list.tail;
	    }
	    return arr;
	  }
	
	  return function (apply) {
	    return function (map) {
	      return function (pure) {
	        return function (f) {
	          var buildFrom = function (x, ys) {
	            return apply(map(consList)(f(x)))(ys);
	          };
	
	          var go = function (acc, currentLen, xs) {
	            if (currentLen === 0) {
	              return acc;
	            } else {
	              var last = xs[currentLen - 1];
	              return new Cont(function () {
	                return go(buildFrom(last, acc), currentLen - 1, xs);
	              });
	            }
	          };
	
	          return function (array) {
	            var result = go(pure(emptyList), array.length, array);
	            while (result instanceof Cont) {
	              result = result.fn();
	            }
	
	            return map(listToArray)(result);
	          };
	        };
	      };
	    };
	  };
	}();


/***/ },
/* 109 */
/*!********************************************************************************!*\
  !*** ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.js */ 110);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	module.exports = {
	    mkFn0: $foreign.mkFn0, 
	    mkFn1: $foreign.mkFn1, 
	    mkFn10: $foreign.mkFn10, 
	    mkFn2: $foreign.mkFn2, 
	    mkFn3: $foreign.mkFn3, 
	    mkFn4: $foreign.mkFn4, 
	    mkFn5: $foreign.mkFn5, 
	    mkFn6: $foreign.mkFn6, 
	    mkFn7: $foreign.mkFn7, 
	    mkFn8: $foreign.mkFn8, 
	    mkFn9: $foreign.mkFn9, 
	    runFn0: $foreign.runFn0, 
	    runFn1: $foreign.runFn1, 
	    runFn10: $foreign.runFn10, 
	    runFn2: $foreign.runFn2, 
	    runFn3: $foreign.runFn3, 
	    runFn4: $foreign.runFn4, 
	    runFn5: $foreign.runFn5, 
	    runFn6: $foreign.runFn6, 
	    runFn7: $foreign.runFn7, 
	    runFn8: $foreign.runFn8, 
	    runFn9: $foreign.runFn9
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 110 */
/*!******************************************************************************!*\
  !*** ./bower_components/purescript-functions/src/Data/Function/Uncurried.js ***!
  \******************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Function.Uncurried
	
	exports.mkFn0 = function (fn) {
	  return function () {
	    return fn({});
	  };
	};
	
	exports.mkFn1 = function (fn) {
	  return function (a) {
	    return fn(a);
	  };
	};
	
	exports.mkFn2 = function (fn) {
	  /* jshint maxparams: 2 */
	  return function (a, b) {
	    return fn(a)(b);
	  };
	};
	
	exports.mkFn3 = function (fn) {
	  /* jshint maxparams: 3 */
	  return function (a, b, c) {
	    return fn(a)(b)(c);
	  };
	};
	
	exports.mkFn4 = function (fn) {
	  /* jshint maxparams: 4 */
	  return function (a, b, c, d) {
	    return fn(a)(b)(c)(d);
	  };
	};
	
	exports.mkFn5 = function (fn) {
	  /* jshint maxparams: 5 */
	  return function (a, b, c, d, e) {
	    return fn(a)(b)(c)(d)(e);
	  };
	};
	
	exports.mkFn6 = function (fn) {
	  /* jshint maxparams: 6 */
	  return function (a, b, c, d, e, f) {
	    return fn(a)(b)(c)(d)(e)(f);
	  };
	};
	
	exports.mkFn7 = function (fn) {
	  /* jshint maxparams: 7 */
	  return function (a, b, c, d, e, f, g) {
	    return fn(a)(b)(c)(d)(e)(f)(g);
	  };
	};
	
	exports.mkFn8 = function (fn) {
	  /* jshint maxparams: 8 */
	  return function (a, b, c, d, e, f, g, h) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h);
	  };
	};
	
	exports.mkFn9 = function (fn) {
	  /* jshint maxparams: 9 */
	  return function (a, b, c, d, e, f, g, h, i) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
	  };
	};
	
	exports.mkFn10 = function (fn) {
	  /* jshint maxparams: 10 */
	  return function (a, b, c, d, e, f, g, h, i, j) {
	    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
	  };
	};
	
	exports.runFn0 = function (fn) {
	  return fn();
	};
	
	exports.runFn1 = function (fn) {
	  return function (a) {
	    return fn(a);
	  };
	};
	
	exports.runFn2 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return fn(a, b);
	    };
	  };
	};
	
	exports.runFn3 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return fn(a, b, c);
	      };
	    };
	  };
	};
	
	exports.runFn4 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return fn(a, b, c, d);
	        };
	      };
	    };
	  };
	};
	
	exports.runFn5 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return fn(a, b, c, d, e);
	          };
	        };
	      };
	    };
	  };
	};
	
	exports.runFn6 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return fn(a, b, c, d, e, f);
	            };
	          };
	        };
	      };
	    };
	  };
	};
	
	exports.runFn7 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return fn(a, b, c, d, e, f, g);
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};
	
	exports.runFn8 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return fn(a, b, c, d, e, f, g, h);
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};
	
	exports.runFn9 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return fn(a, b, c, d, e, f, g, h, i);
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};
	
	exports.runFn10 = function (fn) {
	  return function (a) {
	    return function (b) {
	      return function (c) {
	        return function (d) {
	          return function (e) {
	            return function (f) {
	              return function (g) {
	                return function (h) {
	                  return function (i) {
	                    return function (j) {
	                      return fn(a, b, c, d, e, f, g, h, i, j);
	                    };
	                  };
	                };
	              };
	            };
	          };
	        };
	      };
	    };
	  };
	};


/***/ },
/* 111 */
/*!************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var MonadCont = function (__superclass_Control$dotMonad$dotMonad_0, callCC) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.callCC = callCC;
	};
	var callCC = function (dict) {
	    return dict.callCC;
	};
	module.exports = {
	    MonadCont: MonadCont, 
	    callCC: callCC
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 112 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.liftEff = liftEff;
	};
	var monadEffEff = new MonadEff(function () {
	    return Control_Monad_Eff.monadEff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftEff = function (dict) {
	    return dict.liftEff;
	};
	module.exports = {
	    MonadEff: MonadEff, 
	    liftEff: liftEff, 
	    monadEffEff: monadEffEff
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 113 */
/*!*************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.catchError = catchError;
	    this.throwError = throwError;
	};
	var throwError = function (dict) {
	    return dict.throwError;
	};
	var monadErrorMaybe = new MonadError(function () {
	    return Data_Maybe.monadMaybe;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return v1(Data_Unit.unit);
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 55, column 3 - line 55, column 33: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Function["const"](Data_Maybe.Nothing.value));
	var monadErrorEither = new MonadError(function () {
	    return Data_Either.monadEither;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Data_Either.Left) {
	            return v1(v.value0);
	        };
	        if (v instanceof Data_Either.Right) {
	            return new Data_Either.Right(v.value0);
	        };
	        throw new Error("Failed pattern match at Control.Monad.Error.Class line 50, column 3 - line 50, column 30: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Either.Left.create);
	var catchError = function (dict) {
	    return dict.catchError;
	};
	var catchJust = function (dictMonadError) {
	    return function (p) {
	        return function (act) {
	            return function (handler) {
	                var handle = function (e) {
	                    var $12 = p(e);
	                    if ($12 instanceof Data_Maybe.Nothing) {
	                        return throwError(dictMonadError)(e);
	                    };
	                    if ($12 instanceof Data_Maybe.Just) {
	                        return handler($12.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Error.Class line 44, column 5 - line 46, column 26: " + [ $12.constructor.name ]);
	                };
	                return catchError(dictMonadError)(act)(handle);
	            };
	        };
	    };
	};
	module.exports = {
	    MonadError: MonadError, 
	    catchError: catchError, 
	    catchJust: catchJust, 
	    throwError: throwError, 
	    monadErrorEither: monadErrorEither, 
	    monadErrorMaybe: monadErrorMaybe
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 114 */
/*!******************************************************************************!*\
  !*** ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.purs */ 115);
	var Control_Monad_ST = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.purs */ 117);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var MonadRec = function (__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.tailRecM = tailRecM;
	};
	var tailRecM = function (dict) {
	    return dict.tailRecM;
	};
	var tailRecM2 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return tailRecM(dictMonadRec)(function (o) {
	                    return f(o.a)(o.b);
	                })({
	                    a: a, 
	                    b: b
	                });
	            };
	        };
	    };
	};
	var tailRecM3 = function (dictMonadRec) {
	    return function (f) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    return tailRecM(dictMonadRec)(function (o) {
	                        return f(o.a)(o.b)(o.c);
	                    })({
	                        a: a, 
	                        b: b, 
	                        c: c
	                    });
	                };
	            };
	        };
	    };
	};
	var tailRecEff = function (f) {
	    return function (a) {
	        var f$prime = function ($26) {
	            return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(f($26));
	        };
	        return function __do() {
	            var v = f$prime(a)();
	            var v1 = {
	                value: v
	            };
	            (function () {
	                while (!(function __do() {
	                    var v2 = v1.value;
	                    if (v2 instanceof Data_Either.Left) {
	                        var v3 = f$prime(v2.value0)();
	                        v1.value = v3;
	                        return false;
	                    };
	                    if (v2 instanceof Data_Either.Right) {
	                        return true;
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Rec.Class line 103, column 5 - line 108, column 27: " + [ v2.constructor.name ]);
	                })()) {
	
	                };
	                return {};
	            })();
	            return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
	                return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.fromRight(dictPartial))(Control_Monad_ST.readSTRef(v1));
	            })();
	        };
	    };
	};
	var tailRec = function (f) {
	    return function (a) {
	        var go = function (__copy_v) {
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Data_Either.Left) {
	                    var __tco_v = f(v.value0);
	                    v = __tco_v;
	                    continue tco;
	                };
	                if (v instanceof Data_Either.Right) {
	                    return v.value0;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Rec.Class line 78, column 1 - line 81, column 19: " + [ v.constructor.name ]);
	            };
	        };
	        return go(f(a));
	    };
	};
	var monadRecIdentity = new MonadRec(function () {
	    return Data_Identity.monadIdentity;
	}, function (f) {
	    return function ($27) {
	        return Data_Identity.Identity(tailRec(function ($28) {
	            return Data_Identity.runIdentity(f($28));
	        })($27));
	    };
	});
	var monadRecEither = new MonadRec(function () {
	    return Data_Either.monadEither;
	}, function (f) {
	    return function (a0) {
	        var g = function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new Data_Either.Right(new Data_Either.Left(v.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
	                return new Data_Either.Left(f(v.value0.value0));
	            };
	            if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
	                return new Data_Either.Right(new Data_Either.Right(v.value0.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Rec.Class line 92, column 7 - line 92, column 34: " + [ v.constructor.name ]);
	        };
	        return tailRec(g)(f(a0));
	    };
	});
	var monadRecEff = new MonadRec(function () {
	    return Control_Monad_Eff.monadEff;
	}, tailRecEff);
	var forever = function (dictMonadRec) {
	    return function (ma) {
	        return tailRecM(dictMonadRec)(function (u) {
	            return Data_Functor.voidRight((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(new Data_Either.Left(u))(ma);
	        })(Data_Unit.unit);
	    };
	};
	module.exports = {
	    MonadRec: MonadRec, 
	    forever: forever, 
	    tailRec: tailRec, 
	    tailRecM: tailRecM, 
	    tailRecM2: tailRecM2, 
	    tailRecM3: tailRecM3, 
	    monadRecIdentity: monadRecIdentity, 
	    monadRecEff: monadRecEff, 
	    monadRecEither: monadRecEither
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 115 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.purs ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.js */ 116);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var unsafePerformEff = function ($0) {
	    return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
	};
	module.exports = {
	    unsafePerformEff: unsafePerformEff, 
	    unsafeInterleaveEff: $foreign.unsafeInterleaveEff
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 116 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.js ***!
  \*************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Control.Monad.Eff.Unsafe
	
	exports.unsafeInterleaveEff = function (f) {
	  return f;
	};


/***/ },
/* 117 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-st/src/Control/Monad/ST.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.js */ 118);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var pureST = function (st) {
	    return Control_Monad_Eff.runPure($foreign.runST(st));
	};
	module.exports = {
	    pureST: pureST, 
	    modifySTRef: $foreign.modifySTRef, 
	    newSTRef: $foreign.newSTRef, 
	    readSTRef: $foreign.readSTRef, 
	    runST: $foreign.runST, 
	    writeSTRef: $foreign.writeSTRef
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 118 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-st/src/Control/Monad/ST.js ***!
  \****************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Control.Monad.ST
	
	exports.newSTRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};
	
	exports.readSTRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};
	
	exports.modifySTRef = function (ref) {
	  return function (f) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = f(ref.value);
	    };
	  };
	};
	
	exports.writeSTRef = function (ref) {
	  return function (a) {
	    return function () {
	      /* jshint boss: true */
	      return ref.value = a;
	    };
	  };
	};
	
	exports.runST = function (f) {
	  return f;
	};


/***/ },
/* 119 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-identity/src/Data/Identity.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_Field = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Field.purs */ 72);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Identity = function (x) {
	    return x;
	};
	var showIdentity = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringIdentity = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));
	};
	var semigroupIdenity = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var runIdentity = function (v) {
	    return v;
	};
	var ringIdentity = function (dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringIdentity(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ring.sub(dictRing)(v)(v1);
	        };
	    });
	};
	var monoidIdentity = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupIdenity(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var heytingAlgebraIdentity = function (dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var functorIdentity = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return f(v);
	    };
	});
	var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
	var foldableIdentity = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v)(z);
	        };
	    };
	});
	var traversableIdentity = new Data_Traversable.Traversable(function () {
	    return foldableIdentity;
	}, function () {
	    return functorIdentity;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(v);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Identity)(f(v));
	        };
	    };
	});
	var extendIdentity = new Control_Extend.Extend(function () {
	    return functorIdentity;
	}, function (f) {
	    return function (m) {
	        return f(m);
	    };
	});
	var eqIdentity = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordIdentity = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqIdentity(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var comonadIdentity = new Control_Comonad.Comonad(function () {
	    return extendIdentity;
	}, function (v) {
	    return v;
	});
	var commutativeRingIdentity = function (dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringIdentity(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingIdentity = function (dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingIdentity(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function (v) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)(v);
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);
	        };
	    });
	};
	var fieldIdentity = function (dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingIdentity(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedIdentity = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordIdentity(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var booleanAlgebraIdentity = function (dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraIdentity(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applyIdentity = new Control_Apply.Apply(function () {
	    return functorIdentity;
	}, function (v) {
	    return function (v1) {
	        return v(v1);
	    };
	});
	var bindIdentity = new Control_Bind.Bind(function () {
	    return applyIdentity;
	}, function (v) {
	    return function (f) {
	        return f(v);
	    };
	});
	var applicativeIdentity = new Control_Applicative.Applicative(function () {
	    return applyIdentity;
	}, Identity);
	var monadIdentity = new Control_Monad.Monad(function () {
	    return applicativeIdentity;
	}, function () {
	    return bindIdentity;
	});
	var altIdentity = new Control_Alt.Alt(function () {
	    return functorIdentity;
	}, function (x) {
	    return function (v) {
	        return x;
	    };
	});
	module.exports = {
	    Identity: Identity, 
	    runIdentity: runIdentity, 
	    eqIdentity: eqIdentity, 
	    ordIdentity: ordIdentity, 
	    boundedIdentity: boundedIdentity, 
	    heytingAlgebraIdentity: heytingAlgebraIdentity, 
	    booleanAlgebraIdentity: booleanAlgebraIdentity, 
	    semigroupIdenity: semigroupIdenity, 
	    monoidIdentity: monoidIdentity, 
	    semiringIdentity: semiringIdentity, 
	    euclideanRingIdentity: euclideanRingIdentity, 
	    ringIdentity: ringIdentity, 
	    commutativeRingIdentity: commutativeRingIdentity, 
	    fieldIdentity: fieldIdentity, 
	    showIdentity: showIdentity, 
	    functorIdentity: functorIdentity, 
	    invariantIdentity: invariantIdentity, 
	    altIdentity: altIdentity, 
	    applyIdentity: applyIdentity, 
	    applicativeIdentity: applicativeIdentity, 
	    bindIdentity: bindIdentity, 
	    monadIdentity: monadIdentity, 
	    extendIdentity: extendIdentity, 
	    comonadIdentity: comonadIdentity, 
	    foldableIdentity: foldableIdentity, 
	    traversableIdentity: traversableIdentity
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 120 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-partial/src/Partial/Unsafe.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.js */ 121);
	var Partial = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial.purs */ 122);
	var unsafeCrashWith = function (msg) {
	    return $foreign.unsafePartial(function (dictPartial) {
	        return Partial.crashWith(dictPartial)(msg);
	    });
	};
	module.exports = {
	    unsafeCrashWith: unsafeCrashWith, 
	    unsafePartial: $foreign.unsafePartial
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 121 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-partial/src/Partial/Unsafe.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Partial.Unsafe
	
	exports.unsafePartial = function (f) {
	  return f();
	};


/***/ },
/* 122 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-partial/src/Partial.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 *  | Some partial helper functions.
	 */
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial.js */ 123);
	
	/**
	 *  | A partial function which crashes on any input with a default message.
	 */
	var crash = function (dictPartial) {
	    return $foreign.crashWith(dictPartial)("Partial.crash: partial function");
	};
	module.exports = {
	    crash: crash, 
	    crashWith: $foreign.crashWith
	};


/***/ },
/* 123 */
/*!************************************************************!*\
  !*** ./bower_components/purescript-partial/src/Partial.js ***!
  \************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Partial
	
	exports.crashWith = function () {
	  return function (msg) {
	    throw new Error(msg);
	  };
	};


/***/ },
/* 124 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/MonadPlus.purs ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var MonadPlus = function (__superclass_Control$dotMonadZero$dotMonadZero_0) {
	    this["__superclass_Control.MonadZero.MonadZero_0"] = __superclass_Control$dotMonadZero$dotMonadZero_0;
	};
	var monadPlusArray = new MonadPlus(function () {
	    return Control_MonadZero.monadZeroArray;
	});
	module.exports = {
	    MonadPlus: MonadPlus, 
	    monadPlusArray: monadPlusArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 125 */
/*!******************************************************************************!*\
  !*** ./bower_components/purescript-parallel/src/Control/Parallel/Class.purs ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad_Cont_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs */ 126);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs */ 134);
	var Control_Monad_Reader_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs */ 137);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Ref = __webpack_require__(/*! ./bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs */ 139);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.purs */ 115);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Parallel = function (x) {
	    return x;
	};
	var MonadPar = function (__superclass_Control$dotMonad$dotMonad_0, par) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.par = par;
	};
	var MonadRace = function (__superclass_Control$dotParallel$dotClass$dotMonadPar_0, race, stall) {
	    this["__superclass_Control.Parallel.Class.MonadPar_0"] = __superclass_Control$dotParallel$dotClass$dotMonadPar_0;
	    this.race = race;
	    this.stall = stall;
	};
	var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeInterleaveEff;
	var stall = function (dict) {
	    return dict.stall;
	};
	var runParallel = function (v) {
	    return v;
	};
	var race = function (dict) {
	    return dict.race;
	};
	var parallel = Parallel;
	var par = function (dict) {
	    return dict.par;
	};
	var monadParReaderT = function (dictMonadPar) {
	    return new MonadPar(function () {
	        return Control_Monad_Reader_Trans.monadReaderT(dictMonadPar["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (r) {
	                    return par(dictMonadPar)(f)(v(r))(v1(r));
	                };
	            };
	        };
	    });
	};
	var monadRaceReaderT = function (dictMonadRace) {
	    return new MonadRace(function () {
	        return monadParReaderT(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return race(dictMonadRace)(v(r))(v1(r));
	            };
	        };
	    }, function (v) {
	        return stall(dictMonadRace);
	    });
	};
	var monadParExceptT = function (dictMonadPar) {
	    return new MonadPar(function () {
	        return Control_Monad_Except_Trans.monadExceptT(dictMonadPar["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (v) {
	            return function (v1) {
	                return par(dictMonadPar)(Control_Apply.lift2(Data_Either.applyEither)(f))(v)(v1);
	            };
	        };
	    });
	};
	var monadRaceExceptT = function (dictMonadRace) {
	    return new MonadRace(function () {
	        return monadParExceptT(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function (v) {
	        return function (v1) {
	            return race(dictMonadRace)(v)(v1);
	        };
	    }, stall(dictMonadRace));
	};
	var monadParContT = new MonadPar(function () {
	    return Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff);
	}, function (f) {
	    return function (ca) {
	        return function (cb) {
	            return function (k) {
	                return function __do() {
	                    var v = unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))();
	                    var v1 = unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))();
	                    Control_Monad_Cont_Trans.runContT(ca)(function (a) {
	                        return function __do() {
	                            var v2 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v1))();
	                            if (v2 instanceof Data_Maybe.Nothing) {
	                                return unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(new Data_Maybe.Just(a)))();
	                            };
	                            if (v2 instanceof Data_Maybe.Just) {
	                                return k(f(a)(v2.value0))();
	                            };
	                            throw new Error("Failed pattern match at Control.Parallel.Class line 75, column 7 - line 77, column 28: " + [ v2.constructor.name ]);
	                        };
	                    })();
	                    return Control_Monad_Cont_Trans.runContT(cb)(function (b) {
	                        return function __do() {
	                            var v2 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                            if (v2 instanceof Data_Maybe.Nothing) {
	                                return unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v1)(new Data_Maybe.Just(b)))();
	                            };
	                            if (v2 instanceof Data_Maybe.Just) {
	                                return k(f(v2.value0)(b))();
	                            };
	                            throw new Error("Failed pattern match at Control.Parallel.Class line 81, column 7 - line 83, column 28: " + [ v2.constructor.name ]);
	                        };
	                    })();
	                };
	            };
	        };
	    };
	});
	var monadRaceContT = new MonadRace(function () {
	    return monadParContT;
	}, function (c1) {
	    return function (c2) {
	        return function (k) {
	            return function __do() {
	                var v = unsafeWithRef(Control_Monad_Eff_Ref.newRef(false))();
	                Control_Monad_Cont_Trans.runContT(c1)(function (a) {
	                    return function __do() {
	                        var v1 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                        if (v1) {
	                            return Data_Unit.unit;
	                        };
	                        if (!v1) {
	                            unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(true))();
	                            return k(a)();
	                        };
	                        throw new Error("Failed pattern match at Control.Parallel.Class line 98, column 7 - line 102, column 14: " + [ v1.constructor.name ]);
	                    };
	                })();
	                return Control_Monad_Cont_Trans.runContT(c2)(function (a) {
	                    return function __do() {
	                        var v1 = unsafeWithRef(Control_Monad_Eff_Ref.readRef(v))();
	                        if (v1) {
	                            return Data_Unit.unit;
	                        };
	                        if (!v1) {
	                            unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v)(true))();
	                            return k(a)();
	                        };
	                        throw new Error("Failed pattern match at Control.Parallel.Class line 106, column 7 - line 110, column 14: " + [ v1.constructor.name ]);
	                    };
	                })();
	            };
	        };
	    };
	}, function (v) {
	    return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
	});
	var functorParallel = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function ($58) {
	            return parallel(Data_Functor.map(dictFunctor)(f)(runParallel($58)));
	        };
	    });
	};
	var applyParallel = function (dictMonadPar) {
	    return new Control_Apply.Apply(function () {
	        return functorParallel((((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, function (f) {
	        return function (a) {
	            return parallel(par(dictMonadPar)(Data_Function.apply)(runParallel(f))(runParallel(a)));
	        };
	    });
	};
	var applicativeParallel = function (dictMonadPar) {
	    return new Control_Applicative.Applicative(function () {
	        return applyParallel(dictMonadPar);
	    }, function ($59) {
	        return parallel(Control_Applicative.pure((dictMonadPar["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($59));
	    });
	};
	var parTraverse = function (dictMonadPar) {
	    return function (dictTraversable) {
	        return function (f) {
	            return function ($60) {
	                return runParallel(Data_Traversable.traverse(dictTraversable)(applicativeParallel(dictMonadPar))(function ($61) {
	                    return Parallel(f($61));
	                })($60));
	            };
	        };
	    };
	};
	var parTraverse_ = function (dictMonadPar) {
	    return function (dictFoldable) {
	        return function (f) {
	            return function ($62) {
	                return runParallel(Data_Foldable.traverse_(applicativeParallel(dictMonadPar))(dictFoldable)(function ($63) {
	                    return Parallel(f($63));
	                })($62));
	            };
	        };
	    };
	};
	var altParallel = function (dictMonadRace) {
	    return new Control_Alt.Alt(function () {
	        return functorParallel(((((dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, function (a) {
	        return function (b) {
	            return parallel(race(dictMonadRace)(runParallel(a))(runParallel(b)));
	        };
	    });
	};
	var plusParallel = function (dictMonadRace) {
	    return new Control_Plus.Plus(function () {
	        return altParallel(dictMonadRace);
	    }, parallel(stall(dictMonadRace)));
	};
	var alternativeParallel = function (dictMonadRace) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeParallel(dictMonadRace["__superclass_Control.Parallel.Class.MonadPar_0"]());
	    }, function () {
	        return plusParallel(dictMonadRace);
	    });
	};
	module.exports = {
	    MonadPar: MonadPar, 
	    MonadRace: MonadRace, 
	    par: par, 
	    parTraverse: parTraverse, 
	    parTraverse_: parTraverse_, 
	    parallel: parallel, 
	    race: race, 
	    runParallel: runParallel, 
	    stall: stall, 
	    monadParContT: monadParContT, 
	    monadParExceptT: monadParExceptT, 
	    monadParReaderT: monadParReaderT, 
	    monadRaceContT: monadRaceContT, 
	    monadRaceExceptT: monadRaceExceptT, 
	    monadRaceReaderT: monadRaceReaderT, 
	    functorParallel: functorParallel, 
	    applyParallel: applyParallel, 
	    applicativeParallel: applicativeParallel, 
	    altParallel: altParallel, 
	    plusParallel: plusParallel, 
	    alternativeParallel: alternativeParallel
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 126 */
/*!************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var ContT = function (x) {
	    return x;
	};
	var withContT = function (f) {
	    return function (v) {
	        return function (k) {
	            return v(f(k));
	        };
	    };
	};
	var runContT = function (v) {
	    return function (k) {
	        return v(k);
	    };
	};
	var monadTransContT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(k);
	        };
	    };
	});
	var mapContT = function (f) {
	    return function (v) {
	        return function (k) {
	            return f(v(k));
	        };
	    };
	};
	var functorContT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (k) {
	                return v(function (a) {
	                    return Data_Function.apply(k)(f(a));
	                });
	            };
	        };
	    });
	};
	var applyContT = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorContT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (k) {
	                return v(function (g) {
	                    return v1(function (a) {
	                        return k(g(a));
	                    });
	                });
	            };
	        };
	    });
	};
	var bindContT = function (dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyContT(dictBind["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return function (k$prime) {
	                return v(function (a) {
	                    var $32 = k(a);
	                    return $32(k$prime);
	                });
	            };
	        };
	    });
	};
	var applicativeContT = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyContT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function (a) {
	        return function (k) {
	            return k(a);
	        };
	    });
	};
	var monadContT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeContT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindContT(dictMonad["__superclass_Control.Bind.Bind_1"]());
	    });
	};
	var monadContContT = function (dictMonad) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadContT(dictMonad);
	    }, function (f) {
	        return function (k) {
	            var $34 = f(function (a) {
	                return function (v) {
	                    return k(a);
	                };
	            });
	            return $34(k);
	        };
	    });
	};
	var monadEffContT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadContT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($38) {
	        return Control_Monad_Trans.lift(monadTransContT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($38));
	    });
	};
	var monadReaderContT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadContT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransContT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return function (v) {
	            return function (k) {
	                return Control_Bind.bind((dictMonadReader["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Reader_Class.ask(dictMonadReader))(function (v1) {
	                    return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function ($39) {
	                        return Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](v1))(k($39));
	                    }));
	                });
	            };
	        };
	    });
	};
	var monadStateContT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadContT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function ($40) {
	        return Control_Monad_Trans.lift(monadTransContT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($40));
	    });
	};
	module.exports = {
	    ContT: ContT, 
	    mapContT: mapContT, 
	    runContT: runContT, 
	    withContT: withContT, 
	    monadContContT: monadContContT, 
	    functorContT: functorContT, 
	    applyContT: applyContT, 
	    applicativeContT: applicativeContT, 
	    bindContT: bindContT, 
	    monadContT: monadContT, 
	    monadTransContT: monadTransContT, 
	    monadEffContT: monadEffContT, 
	    monadReaderContT: monadReaderContT, 
	    monadStateContT: monadStateContT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 127 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var MonadReader = function (__superclass_Control$dotMonad$dotMonad_0, ask, local) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.ask = ask;
	    this.local = local;
	};
	var monadReaderFun = new MonadReader(function () {
	    return Control_Monad.monadFn;
	}, Control_Category.id(Control_Category.categoryFn), Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));
	var local = function (dict) {
	    return dict.local;
	};
	var ask = function (dict) {
	    return dict.ask;
	};
	var reader = function (dictMonadReader) {
	    return function (f) {
	        return Control_Bind.bindFlipped((dictMonadReader["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(function ($1) {
	            return Control_Applicative.pure((dictMonadReader["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(f($1));
	        })(ask(dictMonadReader));
	    };
	};
	module.exports = {
	    MonadReader: MonadReader, 
	    ask: ask, 
	    local: local, 
	    reader: reader, 
	    monadReaderFun: monadReaderFun
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 128 */
/*!*************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var MonadState = function (__superclass_Control$dotMonad$dotMonad_0, state) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.state = state;
	};
	var state = function (dict) {
	    return dict.state;
	};
	var put = function (dictMonadState) {
	    return function (s) {
	        return state(dictMonadState)(function (v) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, s);
	        });
	    };
	};
	var modify = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
	        });
	    };
	};
	var gets = function (dictMonadState) {
	    return function (f) {
	        return state(dictMonadState)(function (s) {
	            return new Data_Tuple.Tuple(f(s), s);
	        });
	    };
	};
	var get = function (dictMonadState) {
	    return state(dictMonadState)(function (s) {
	        return new Data_Tuple.Tuple(s, s);
	    });
	};
	module.exports = {
	    MonadState: MonadState, 
	    get: get, 
	    gets: gets, 
	    modify: modify, 
	    put: put, 
	    state: state
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 129 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-tuples/src/Data/Tuple.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Biapplicative = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Control/Biapplicative.purs */ 130);
	var Control_Biapply = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Control/Biapply.purs */ 131);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Lazy = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Lazy.purs */ 132);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Bifoldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Bifoldable.purs */ 89);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Bitraversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Bitraversable.purs */ 98);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Maybe_First = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/First.purs */ 103);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Tuple = (function () {
	    function Tuple(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Tuple.create = function (value0) {
	        return function (value1) {
	            return new Tuple(value0, value1);
	        };
	    };
	    return Tuple;
	})();
	var uncurry = function (f) {
	    return function (v) {
	        return f(v.value0)(v.value1);
	    };
	};
	var swap = function (v) {
	    return new Tuple(v.value1, v.value0);
	};
	var snd = function (v) {
	    return v.value1;
	};
	var showTuple = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (v) {
	            return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
	        });
	    };
	};
	var semiringTuple = function (dictSemiring) {
	    return function (dictSemiring1) {
	        return new Data_Semiring.Semiring(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
	    };
	};
	var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return new Tuple(v1.value0, v.value1);
	    };
	});
	var semigroupTuple = function (dictSemigroup) {
	    return function (dictSemigroup1) {
	        return new Data_Semigroup.Semigroup(function (v) {
	            return function (v1) {
	                return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var ringTuple = function (dictRing) {
	    return function (dictRing1) {
	        return new Data_Ring.Ring(function () {
	            return semiringTuple(dictRing["__superclass_Data.Semiring.Semiring_0"]())(dictRing1["__superclass_Data.Semiring.Semiring_0"]());
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
	            };
	        });
	    };
	};
	var monoidTuple = function (dictMonoid) {
	    return function (dictMonoid1) {
	        return new Data_Monoid.Monoid(function () {
	            return semigroupTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonoid1["__superclass_Data.Semigroup.Semigroup_0"]());
	        }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
	    };
	};
	var lookup = function (dictFoldable) {
	    return function (dictEq) {
	        return function (a) {
	            return function (f) {
	                return Data_Function.apply(Data_Maybe_First.runFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
	                    var $127 = Data_Eq.eq(dictEq)(a)(v.value0);
	                    if ($127) {
	                        return new Data_Maybe.Just(v.value1);
	                    };
	                    if (!$127) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    throw new Error("Failed pattern match at Data.Tuple line 189, column 58 - line 189, column 93: " + [ $127.constructor.name ]);
	                })(f));
	            };
	        };
	    };
	};
	var heytingAlgebraTuple = function (dictHeytingAlgebra) {
	    return function (dictHeytingAlgebra1) {
	        return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
	            return function (v1) {
	                return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
	            };
	        }, function (v) {
	            return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
	        }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
	    };
	};
	var functorTuple = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v.value1));
	    };
	});
	var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));
	var fst = function (v) {
	    return v.value0;
	};
	var lazyTuple = function (dictLazy) {
	    return function (dictLazy1) {
	        return new Control_Lazy.Lazy(function (f) {
	            return new Tuple(Data_Function.apply(Control_Lazy.defer(dictLazy))(function (v) {
	                return fst(f(Data_Unit.unit));
	            }), Data_Function.apply(Control_Lazy.defer(dictLazy1))(function (v) {
	                return snd(f(Data_Unit.unit));
	            }));
	        });
	    };
	};
	var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (v) {
	            return f(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(z)(v.value1);
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (v) {
	            return f(v.value1)(z);
	        };
	    };
	});
	var traversableTuple = new Data_Traversable.Traversable(function () {
	    return foldableTuple;
	}, function () {
	    return functorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (v) {
	            return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
	        };
	    };
	});
	var extendTuple = new Control_Extend.Extend(function () {
	    return functorTuple;
	}, function (f) {
	    return function (v) {
	        return new Tuple(v.value0, f(v));
	    };
	});
	var eqTuple = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (v) {
	            return function (v1) {
	                return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq1)(v.value1)(v1.value1);
	            };
	        });
	    };
	};
	var ordTuple = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqTuple(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (v) {
	            return function (v1) {
	                var $193 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                if ($193 instanceof Data_Ordering.EQ) {
	                    return Data_Ord.compare(dictOrd1)(v.value1)(v1.value1);
	                };
	                return $193;
	            };
	        });
	    };
	};
	var curry = function (f) {
	    return function (a) {
	        return function (b) {
	            return f(new Tuple(a, b));
	        };
	    };
	};
	var comonadTuple = new Control_Comonad.Comonad(function () {
	    return extendTuple;
	}, snd);
	var commutativeRingTuple = function (dictCommutativeRing) {
	    return function (dictCommutativeRing1) {
	        return new Data_CommutativeRing.CommutativeRing(function () {
	            return ringTuple(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]())(dictCommutativeRing1["__superclass_Data.Ring.Ring_0"]());
	        });
	    };
	};
	var boundedTuple = function (dictBounded) {
	    return function (dictBounded1) {
	        return new Data_Bounded.Bounded(function () {
	            return ordTuple(dictBounded["__superclass_Data.Ord.Ord_0"]())(dictBounded1["__superclass_Data.Ord.Ord_0"]());
	        }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
	    };
	};
	var booleanAlgebraTuple = function (dictBooleanAlgebra) {
	    return function (dictBooleanAlgebra1) {
	        return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	            return heytingAlgebraTuple(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]())(dictBooleanAlgebra1["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	        });
	    };
	};
	var bifunctorTuple = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Tuple(f(v.value0), g(v.value1));
	        };
	    };
	});
	var bifoldableTuple = new Data_Bifoldable.Bifoldable(function (dictMonoid) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(v.value0))(g(v.value1));
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return g(f(z)(v.value0))(v.value1);
	            };
	        };
	    };
	}, function (f) {
	    return function (g) {
	        return function (z) {
	            return function (v) {
	                return f(v.value0)(g(v.value1)(z));
	            };
	        };
	    };
	});
	var bitraversableTuple = new Data_Bitraversable.Bitraversable(function () {
	    return bifoldableTuple;
	}, function () {
	    return bifunctorTuple;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(v.value0))(v.value1);
	    };
	}, function (dictApplicative) {
	    return function (f) {
	        return function (g) {
	            return function (v) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Tuple.create)(f(v.value0)))(g(v.value1));
	            };
	        };
	    };
	});
	var biapplyTuple = new Control_Biapply.Biapply(function () {
	    return bifunctorTuple;
	}, function (v) {
	    return function (v1) {
	        return new Tuple(v.value0(v1.value0), v.value1(v1.value1));
	    };
	});
	var biapplicativeTuple = new Control_Biapplicative.Biapplicative(function () {
	    return biapplyTuple;
	}, Tuple.create);
	var applyTuple = function (dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorTuple;
	    }, function (v) {
	        return function (v1) {
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
	        };
	    });
	};
	var bindTuple = function (dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyTuple(dictSemigroup);
	    }, function (v) {
	        return function (f) {
	            var $242 = f(v.value1);
	            return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)($242.value0), $242.value1);
	        };
	    });
	};
	var applicativeTuple = function (dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
	};
	var monadTuple = function (dictMonoid) {
	    return new Control_Monad.Monad(function () {
	        return applicativeTuple(dictMonoid);
	    }, function () {
	        return bindTuple(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    });
	};
	module.exports = {
	    Tuple: Tuple, 
	    curry: curry, 
	    fst: fst, 
	    lookup: lookup, 
	    snd: snd, 
	    swap: swap, 
	    uncurry: uncurry, 
	    showTuple: showTuple, 
	    eqTuple: eqTuple, 
	    ordTuple: ordTuple, 
	    boundedTuple: boundedTuple, 
	    semigroupoidTuple: semigroupoidTuple, 
	    semigroupTuple: semigroupTuple, 
	    monoidTuple: monoidTuple, 
	    semiringTuple: semiringTuple, 
	    ringTuple: ringTuple, 
	    commutativeRingTuple: commutativeRingTuple, 
	    heytingAlgebraTuple: heytingAlgebraTuple, 
	    booleanAlgebraTuple: booleanAlgebraTuple, 
	    functorTuple: functorTuple, 
	    invariantTuple: invariantTuple, 
	    bifunctorTuple: bifunctorTuple, 
	    applyTuple: applyTuple, 
	    biapplyTuple: biapplyTuple, 
	    applicativeTuple: applicativeTuple, 
	    biapplicativeTuple: biapplicativeTuple, 
	    bindTuple: bindTuple, 
	    monadTuple: monadTuple, 
	    extendTuple: extendTuple, 
	    comonadTuple: comonadTuple, 
	    lazyTuple: lazyTuple, 
	    foldableTuple: foldableTuple, 
	    bifoldableTuple: bifoldableTuple, 
	    traversableTuple: traversableTuple, 
	    bitraversableTuple: bitraversableTuple
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 130 */
/*!*******************************************************************************!*\
  !*** ./bower_components/purescript-bifunctors/src/Control/Biapplicative.purs ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Biapply = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Control/Biapply.purs */ 131);
	var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
	    this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
	    this.bipure = bipure;
	};
	var bipure = function (dict) {
	    return dict.bipure;
	};
	module.exports = {
	    Biapplicative: Biapplicative, 
	    bipure: bipure
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 131 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-bifunctors/src/Control/Biapply.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Biapply = function (__superclass_Data$dotBifunctor$dotBifunctor_0, biapply) {
	    this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
	    this.biapply = biapply;
	};
	var biapply = function (dict) {
	    return dict.biapply;
	};
	var biapplyFirst = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(Data_Function["const"](Control_Category.id(Control_Category.categoryFn))))(a))(b);
	        };
	    };
	};
	var biapplySecond = function (dictBiapply) {
	    return function (a) {
	        return function (b) {
	            return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(Data_Function["const"])(Data_Function["const"]))(a))(b);
	        };
	    };
	};
	var bilift2 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
	                };
	            };
	        };
	    };
	};
	var bilift3 = function (dictBiapply) {
	    return function (f) {
	        return function (g) {
	            return function (a) {
	                return function (b) {
	                    return function (c) {
	                        return biapply(dictBiapply)(biapply(dictBiapply)(Control_Category.id(Control_Category.categoryFn)(Data_Bifunctor.bimap(dictBiapply["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
	                    };
	                };
	            };
	        };
	    };
	};
	module.exports = {
	    Biapply: Biapply, 
	    biapply: biapply, 
	    biapplyFirst: biapplyFirst, 
	    biapplySecond: biapplySecond, 
	    bilift2: bilift2, 
	    bilift3: bilift3
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 132 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-control/src/Control/Lazy.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Lazy = function (defer) {
	    this.defer = defer;
	};
	var defer = function (dict) {
	    return dict.defer;
	};
	var fix = function (dictLazy) {
	    return function (f) {
	        return defer(dictLazy)(function (v) {
	            return f(fix(dictLazy)(f));
	        });
	    };
	};
	module.exports = {
	    Lazy: Lazy, 
	    defer: defer, 
	    fix: fix
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 133 */
/*!*******************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var MonadTrans = function (lift) {
	    this.lift = lift;
	};
	var lift = function (dict) {
	    return dict.lift;
	};
	module.exports = {
	    MonadTrans: MonadTrans, 
	    lift: lift
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 134 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_RWS_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/RWS/Class.purs */ 135);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var ExceptT = function (x) {
	    return x;
	};
	var withExceptT = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            var mapLeft = function (v1) {
	                return function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return new Data_Either.Right(v2.value0);
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return new Data_Either.Left(v1(v2.value0));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 44, column 3 - line 44, column 32: " + [ v1.constructor.name, v2.constructor.name ]);
	                };
	            };
	            return Data_Function.apply(ExceptT)(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
	        };
	    };
	};
	var runExceptT = function (v) {
	    return v;
	};
	var monadTransExceptT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Either.Right(v));
	        });
	    };
	});
	var mapExceptT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorExceptT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
	    });
	};
	var except = function (dictApplicative) {
	    return function ($87) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)($87));
	    };
	};
	var applyExceptT = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorExceptT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            var f$prime = Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Control_Apply.apply(Data_Either.applyEither))(v);
	            var x$prime = Control_Apply.apply(dictApply)(f$prime)(v1);
	            return x$prime;
	        };
	    });
	};
	var bindExceptT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyExceptT((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
	            })(function (a) {
	                var $56 = k(a);
	                return $56;
	            }));
	        };
	    });
	};
	var applicativeExceptT = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyExceptT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function ($89) {
	        return ExceptT(Control_Applicative.pure(dictApplicative)(Data_Either.Right.create($89)));
	    });
	};
	var monadExceptT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeExceptT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindExceptT(dictMonad);
	    });
	};
	var monadContExceptT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadExceptT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Data_Function.apply(ExceptT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var $57 = f(function (a) {
	                return Data_Function.apply(ExceptT)(c(new Data_Either.Right(a)));
	            });
	            return $57;
	        }));
	    });
	};
	var monadEffExceptT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadExceptT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($90) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($90));
	    });
	};
	var monadErrorExceptT = function (dictMonad) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadExceptT(dictMonad);
	    }, function (v) {
	        return function (k) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
	                var $60 = k(a);
	                return $60;
	            })(function ($91) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
	            }));
	        };
	    }, function ($92) {
	        return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
	    });
	};
	var monadReaderExceptT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadExceptT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransExceptT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecExceptT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function ($93) {
	            return ExceptT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
	                    var $61 = f(a);
	                    return $61;
	                })())(function (m$prime) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                        if (m$prime instanceof Data_Either.Left) {
	                            return new Data_Either.Right(new Data_Either.Left(m$prime.value0));
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Either.Right(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Except.Trans line 77, column 9 - line 80, column 45: " + [ m$prime.constructor.name ]);
	                    })());
	                });
	            })($93));
	        };
	    });
	};
	var monadStateExceptT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadExceptT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadWriterExceptT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadExceptT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapExceptT(function (m) {
	        return Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(Data_Functor.map(Data_Either.functorEither)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapExceptT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                if (v instanceof Data_Either.Left) {
	                    return new Data_Tuple.Tuple(new Data_Either.Left(v.value0), Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return new Data_Tuple.Tuple(new Data_Either.Right(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Except.Trans line 133, column 5 - line 135, column 45: " + [ v.constructor.name ]);
	            })());
	        }));
	    }), function (wd) {
	        return Control_Monad_Trans.lift(monadTransExceptT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var monadRWSExceptT = function (dictMonadRWS) {
	    return new Control_Monad_RWS_Class.MonadRWS(function () {
	        return monadReaderExceptT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_0"]());
	    }, function () {
	        return monadStateExceptT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_2"]());
	    }, function () {
	        return monadWriterExceptT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_1"]());
	    });
	};
	var altExceptT = function (dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Alt.Alt(function () {
	            return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
	                    if (v2 instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v2.value0));
	                    };
	                    if (v2 instanceof Data_Either.Left) {
	                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v1)(function (v3) {
	                            if (v3 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v3.value0));
	                            };
	                            if (v3 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Except.Trans line 89, column 9 - line 91, column 49: " + [ v3.constructor.name ]);
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Except.Trans line 85, column 5 - line 91, column 49: " + [ v2.constructor.name ]);
	                });
	            };
	        });
	    };
	};
	var plusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Plus.Plus(function () {
	            return altExceptT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
	        }, Control_Monad_Error_Class.throwError(monadErrorExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
	    };
	};
	var alternativeExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeExceptT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return plusExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	var monadZeroExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeExceptT(dictMonoid)(dictMonad);
	        }, function () {
	            return monadExceptT(dictMonad);
	        });
	    };
	};
	var monadPlusExceptT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroExceptT(dictMonoid)(dictMonad);
	        });
	    };
	};
	module.exports = {
	    ExceptT: ExceptT, 
	    except: except, 
	    mapExceptT: mapExceptT, 
	    runExceptT: runExceptT, 
	    withExceptT: withExceptT, 
	    functorExceptT: functorExceptT, 
	    applyExceptT: applyExceptT, 
	    applicativeExceptT: applicativeExceptT, 
	    bindExceptT: bindExceptT, 
	    monadExceptT: monadExceptT, 
	    monadRecExceptT: monadRecExceptT, 
	    altExceptT: altExceptT, 
	    plusExceptT: plusExceptT, 
	    alternativeExceptT: alternativeExceptT, 
	    monadPlusExceptT: monadPlusExceptT, 
	    monadZeroExceptT: monadZeroExceptT, 
	    monadTransExceptT: monadTransExceptT, 
	    monadEffExceptT: monadEffExceptT, 
	    monadContExceptT: monadContExceptT, 
	    monadErrorExceptT: monadErrorExceptT, 
	    monadReaderExceptT: monadReaderExceptT, 
	    monadStateExceptT: monadStateExceptT, 
	    monadWriterExceptT: monadWriterExceptT, 
	    monadRWSExceptT: monadRWSExceptT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 135 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/RWS/Class.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var MonadRWS = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_0, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_2, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_1) {
	    this["__superclass_Control.Monad.Reader.Class.MonadReader_0"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_0;
	    this["__superclass_Control.Monad.State.Class.MonadState_2"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_2;
	    this["__superclass_Control.Monad.Writer.Class.MonadWriter_1"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_1;
	};
	module.exports = {
	    MonadRWS: MonadRWS
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 136 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var MonadWriter = function (__superclass_Control$dotMonad$dotMonad_0, listen, pass, writer) {
	    this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
	    this.listen = listen;
	    this.pass = pass;
	    this.writer = writer;
	};
	var writer = function (dict) {
	    return dict.writer;
	};
	var tell = function (dictMonadWriter) {
	    return function ($9) {
	        return writer(dictMonadWriter)(Data_Tuple.Tuple.create(Data_Unit.unit)($9));
	    };
	};
	var pass = function (dict) {
	    return dict.pass;
	};
	var listen = function (dict) {
	    return dict.listen;
	};
	var listens = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(listen(dictMonadWriter)(m))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v.value0, f(v.value1)));
	            });
	        };
	    };
	};
	var censor = function (dictMonadWriter) {
	    return function (f) {
	        return function (m) {
	            return pass(dictMonadWriter)(Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, f));
	            }));
	        };
	    };
	};
	module.exports = {
	    MonadWriter: MonadWriter, 
	    censor: censor, 
	    listen: listen, 
	    listens: listens, 
	    pass: pass, 
	    tell: tell, 
	    writer: writer
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 137 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Distributive = __webpack_require__(/*! ./bower_components/purescript-distributive/src/Data/Distributive.purs */ 138);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var ReaderT = function (x) {
	    return x;
	};
	var withReaderT = function (f) {
	    return function (v) {
	        return function ($48) {
	            return v(f($48));
	        };
	    };
	};
	var runReaderT = function (v) {
	    return v;
	};
	var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function ($49) {
	        return ReaderT(Data_Function["const"]($49));
	    };
	});
	var mapReaderT = function (f) {
	    return function (v) {
	        return function ($50) {
	            return f(v($50));
	        };
	    };
	};
	var functorReaderT = function (dictFunctor) {
	    return new Data_Functor.Functor(function ($51) {
	        return mapReaderT(Data_Functor.map(dictFunctor)($51));
	    });
	};
	var distributiveReaderT = function (dictDistributive) {
	    return new Data_Distributive.Distributive(function () {
	        return functorReaderT(dictDistributive["__superclass_Data.Functor.Functor_0"]());
	    }, function (dictFunctor) {
	        return function (f) {
	            return function ($52) {
	                return Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor)(Data_Functor.map(dictFunctor)(f)($52));
	            };
	        };
	    }, function (dictFunctor) {
	        return function (a) {
	            return function (e) {
	                return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
	                    return r(e);
	                })(a);
	            };
	        };
	    });
	};
	var applyReaderT = function (dictApply) {
	    return new Control_Apply.Apply(function () {
	        return functorReaderT(dictApply["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Apply.apply(dictApply)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var bindReaderT = function (dictBind) {
	    return new Control_Bind.Bind(function () {
	        return applyReaderT(dictBind["__superclass_Control.Apply.Apply_0"]());
	    }, function (v) {
	        return function (k) {
	            return function (r) {
	                return Control_Bind.bind(dictBind)(v(r))(function (a) {
	                    var $40 = k(a);
	                    return $40(r);
	                });
	            };
	        };
	    });
	};
	var applicativeReaderT = function (dictApplicative) {
	    return new Control_Applicative.Applicative(function () {
	        return applyReaderT(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	    }, function ($53) {
	        return ReaderT(Data_Function["const"](Control_Applicative.pure(dictApplicative)($53)));
	    });
	};
	var monadReaderT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeReaderT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return bindReaderT(dictMonad["__superclass_Control.Bind.Bind_1"]());
	    });
	};
	var monadContReaderT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadReaderT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (r) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $41 = f(function ($54) {
	                    return ReaderT(Data_Function["const"](c($54)));
	                });
	                return $41(r);
	            });
	        };
	    });
	};
	var monadEffReader = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadReaderT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($55) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($55));
	    });
	};
	var monadErrorReaderT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadReaderT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return function (r) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
	                    var $44 = h(e);
	                    return $44(r);
	                });
	            };
	        };
	    }, function ($56) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)($56));
	    });
	};
	var monadReaderReaderT = function (dictMonad) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadReaderT(dictMonad);
	    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()), withReaderT);
	};
	var monadRecReaderT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadReaderT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (k) {
	        return function (a) {
	            var k$prime = function (r) {
	                return function (a1) {
	                    var $45 = k(a1);
	                    return Control_Bind.bindFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(function ($57) {
	                        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.either(Data_Either.Left.create)(Data_Either.Right.create)($57));
	                    })($45(r));
	                };
	            };
	            return function (r) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
	            };
	        };
	    });
	};
	var monadStateReaderT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadReaderT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function ($58) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)($58));
	    });
	};
	var monadWriterReaderT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadReaderT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)), function ($59) {
	        return Control_Monad_Trans.lift(monadTransReaderT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)($59));
	    });
	};
	var altReaderT = function (dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorReaderT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return function (r) {
	                return Control_Alt.alt(dictAlt)(v(r))(v1(r));
	            };
	        };
	    });
	};
	var plusReaderT = function (dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altReaderT(dictPlus["__superclass_Control.Alt.Alt_0"]());
	    }, Data_Function["const"](Control_Plus.empty(dictPlus)));
	};
	var alternativeReaderT = function (dictAlternative) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeReaderT(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
	    }, function () {
	        return plusReaderT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	    });
	};
	var monadZeroReaderT = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeReaderT(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	    }, function () {
	        return monadReaderT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	    });
	};
	var monadPlusReaderT = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroReaderT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	    });
	};
	module.exports = {
	    ReaderT: ReaderT, 
	    mapReaderT: mapReaderT, 
	    runReaderT: runReaderT, 
	    withReaderT: withReaderT, 
	    functorReaderT: functorReaderT, 
	    applyReaderT: applyReaderT, 
	    applicativeReaderT: applicativeReaderT, 
	    altReaderT: altReaderT, 
	    plusReaderT: plusReaderT, 
	    alternativeReaderT: alternativeReaderT, 
	    bindReaderT: bindReaderT, 
	    monadReaderT: monadReaderT, 
	    monadZeroReaderT: monadZeroReaderT, 
	    monadPlusReaderT: monadPlusReaderT, 
	    monadTransReaderT: monadTransReaderT, 
	    monadEffReader: monadEffReader, 
	    monadContReaderT: monadContReaderT, 
	    monadErrorReaderT: monadErrorReaderT, 
	    monadReaderReaderT: monadReaderReaderT, 
	    monadStateReaderT: monadStateReaderT, 
	    monadWriterReaderT: monadWriterReaderT, 
	    distributiveReaderT: distributiveReaderT, 
	    monadRecReaderT: monadRecReaderT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 138 */
/*!*****************************************************************************!*\
  !*** ./bower_components/purescript-distributive/src/Data/Distributive.purs ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Distributive = function (__superclass_Data$dotFunctor$dotFunctor_0, collect, distribute) {
	    this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
	    this.collect = collect;
	    this.distribute = distribute;
	};
	var distributiveIdentity = new Distributive(function () {
	    return Data_Identity.functorIdentity;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($11) {
	            return Data_Identity.Identity(Data_Functor.map(dictFunctor)(function ($12) {
	                return Data_Identity.runIdentity(f($12));
	            })($11));
	        };
	    };
	}, function (dictFunctor) {
	    return function ($13) {
	        return Data_Identity.Identity(Data_Functor.map(dictFunctor)(Data_Identity.runIdentity)($13));
	    };
	});
	var distribute = function (dict) {
	    return dict.distribute;
	};
	var distributiveFunction = new Distributive(function () {
	    return Data_Functor.functorFn;
	}, function (dictFunctor) {
	    return function (f) {
	        return function ($14) {
	            return distribute(distributiveFunction)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($14));
	        };
	    };
	}, function (dictFunctor) {
	    return function (a) {
	        return function (e) {
	            return Data_Functor.map(dictFunctor)(function (v) {
	                return Data_Function.apply(v)(e);
	            })(a);
	        };
	    };
	});
	var cotraverse = function (dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($15) {
	                return Data_Functor.map(dictDistributive["__superclass_Data.Functor.Functor_0"]())(f)(distribute(dictDistributive)(dictFunctor)($15));
	            };
	        };
	    };
	};
	var collectDefault = function (dictDistributive) {
	    return function (dictFunctor) {
	        return function (f) {
	            return function ($16) {
	                return distribute(dictDistributive)(dictFunctor)(Data_Functor.map(dictFunctor)(f)($16));
	            };
	        };
	    };
	};
	var collect = function (dict) {
	    return dict.collect;
	};
	var distributeDefault = function (dictDistributive) {
	    return function (dictFunctor) {
	        return collect(dictDistributive)(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	module.exports = {
	    Distributive: Distributive, 
	    collect: collect, 
	    collectDefault: collectDefault, 
	    cotraverse: cotraverse, 
	    distribute: distribute, 
	    distributeDefault: distributeDefault, 
	    distributiveIdentity: distributiveIdentity, 
	    distributiveFunction: distributiveFunction
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 139 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-refs/src/Control/Monad/Eff/Ref.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-refs/src/Control/Monad/Eff/Ref.js */ 140);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var modifyRef = function (ref) {
	    return function (f) {
	        return $foreign["modifyRef'"](ref)(function (s) {
	            return {
	                state: f(s), 
	                value: Data_Unit.unit
	            };
	        });
	    };
	};
	module.exports = {
	    modifyRef: modifyRef, 
	    "modifyRef'": $foreign["modifyRef'"], 
	    newRef: $foreign.newRef, 
	    readRef: $foreign.readRef, 
	    writeRef: $foreign.writeRef
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 140 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-refs/src/Control/Monad/Eff/Ref.js ***!
  \***********************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Control.Monad.Eff.Ref
	
	exports.newRef = function (val) {
	  return function () {
	    return { value: val };
	  };
	};
	
	exports.readRef = function (ref) {
	  return function () {
	    return ref.value;
	  };
	};
	
	exports["modifyRef'"] = function (ref) {
	  return function (f) {
	    return function () {
	      var t = f(ref.value);
	      ref.value = t.state;
	      return t.value;
	    };
	  };
	};
	
	exports.writeRef = function (ref) {
	  return function (val) {
	    return function () {
	      ref.value = val;
	      return {};
	    };
	  };
	};


/***/ },
/* 141 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.js */ 142);
	module.exports = {
	    unsafeCoerce: $foreign.unsafeCoerce
	};


/***/ },
/* 142 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.js ***!
  \************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Unsafe.Coerce
	
	exports.unsafeCoerce = function (x) {
	  return x;
	};


/***/ },
/* 143 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Aff_Internal_1 = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.purs */ 83);
	var Control_Monad_Aff_Internal_1 = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Internal.purs */ 83);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var fromAVBox = Unsafe_Coerce.unsafeCoerce;
	var killVar = function (q) {
	    return function (e) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal_1._killVar)(Control_Monad_Aff.nonCanceler)(q)(e));
	    };
	};
	var makeVar = Data_Function.apply(fromAVBox)(Control_Monad_Aff_Internal_1._makeVar(Control_Monad_Aff.nonCanceler));
	var putVar = function (q) {
	    return function (a) {
	        return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn3(Control_Monad_Aff_Internal_1._putVar)(Control_Monad_Aff.nonCanceler)(q)(a));
	    };
	};
	var makeVar$prime = function (a) {
	    return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
	            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
	        });
	    });
	};
	var takeVar = function (q) {
	    return Data_Function.apply(fromAVBox)(Data_Function_Uncurried.runFn2(Control_Monad_Aff_Internal_1._takeVar)(Control_Monad_Aff.nonCanceler)(q));
	};
	var modifyVar = function (f) {
	    return function (v) {
	        return Control_Bind.bind(Control_Monad_Aff.bindAff)(takeVar(v))(function ($2) {
	            return putVar(v)(f($2));
	        });
	    };
	};
	module.exports = {
	    killVar: killVar, 
	    makeVar: makeVar, 
	    "makeVar'": makeVar$prime, 
	    modifyVar: modifyVar, 
	    putVar: putVar, 
	    takeVar: takeVar
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 144 */
/*!******************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM.purs ***!
  \******************************************************/
/***/ function(module, exports) {

	"use strict";
	module.exports = {};


/***/ },
/* 145 */
/*!***********************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML.purs ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML.js */ 146);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	module.exports = {
	    window: $foreign.window
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 146 */
/*!*********************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML.js ***!
  \*********************************************************/
/***/ function(module, exports) {

	/* global window */
	"use strict";
	
	exports.window = function () {
	  return window;
	};


/***/ },
/* 147 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Types.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.js */ 148);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Class = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Class.purs */ 161);
	var DOM_Event_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/Types.purs */ 171);
	var DOM_Node_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Types.purs */ 173);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var readHTMLVideoElement = Data_Foreign.unsafeReadTagged("HTMLVideoElement");
	var readHTMLUListElement = Data_Foreign.unsafeReadTagged("HTMLUListElement");
	var readHTMLTrackElement = Data_Foreign.unsafeReadTagged("HTMLTrackElement");
	var readHTMLTitleElement = Data_Foreign.unsafeReadTagged("HTMLTitleElement");
	var readHTMLTimeElement = Data_Foreign.unsafeReadTagged("HTMLTimeElement");
	var readHTMLTextAreaElement = Data_Foreign.unsafeReadTagged("HTMLTextAreaElement");
	var readHTMLTemplateElement = Data_Foreign.unsafeReadTagged("HTMLTemplateElement");
	var readHTMLTableSectionElement = Data_Foreign.unsafeReadTagged("HTMLTableSectionElement");
	var readHTMLTableRowElement = Data_Foreign.unsafeReadTagged("HTMLTableRowElement");
	var readHTMLTableHeaderCellElement = Data_Foreign.unsafeReadTagged("HTMLTableHeaderCellElement");
	var readHTMLTableElement = Data_Foreign.unsafeReadTagged("HTMLTableElement");
	var readHTMLTableDataCellElement = Data_Foreign.unsafeReadTagged("HTMLTableDataCellElement");
	var readHTMLTableColElement = Data_Foreign.unsafeReadTagged("HTMLTableColElement");
	var readHTMLTableCellElement = Data_Foreign.unsafeReadTagged("HTMLTableCellElement");
	var readHTMLTableCaptionElement = Data_Foreign.unsafeReadTagged("HTMLTableCaptionElement");
	var readHTMLStyleElement = Data_Foreign.unsafeReadTagged("HTMLStyleElement");
	var readHTMLSpanElement = Data_Foreign.unsafeReadTagged("HTMLSpanElement");
	var readHTMLSourceElement = Data_Foreign.unsafeReadTagged("HTMLSourceElement");
	var readHTMLSelectElement = Data_Foreign.unsafeReadTagged("HTMLSelectElement");
	var readHTMLScriptElement = Data_Foreign.unsafeReadTagged("HTMLScriptElement");
	var readHTMLQuoteElement = Data_Foreign.unsafeReadTagged("HTMLQuoteElement");
	var readHTMLProgressElement = Data_Foreign.unsafeReadTagged("HTMLProgressElement");
	var readHTMLPreElement = Data_Foreign.unsafeReadTagged("HTMLPreElement");
	var readHTMLParamElement = Data_Foreign.unsafeReadTagged("HTMLParamElement");
	var readHTMLParagraphElement = Data_Foreign.unsafeReadTagged("HTMLParagraphElement");
	var readHTMLOutputElement = Data_Foreign.unsafeReadTagged("HTMLOutputElement");
	var readHTMLOptionElement = Data_Foreign.unsafeReadTagged("HTMLOptionElement");
	var readHTMLOptGroupElement = Data_Foreign.unsafeReadTagged("HTMLOptGroupElement");
	var readHTMLObjectElement = Data_Foreign.unsafeReadTagged("HTMLObjectElement");
	var readHTMLOListElement = Data_Foreign.unsafeReadTagged("HTMLOListElement");
	var readHTMLModElement = Data_Foreign.unsafeReadTagged("HTMLModElement");
	var readHTMLMeterElement = Data_Foreign.unsafeReadTagged("HTMLMeterElement");
	var readHTMLMetaElement = Data_Foreign.unsafeReadTagged("HTMLMetaElement");
	var readHTMLMediaElement = Data_Foreign.unsafeReadTagged("HTMLMediaElement");
	var readHTMLMapElement = Data_Foreign.unsafeReadTagged("HTMLMapElement");
	var readHTMLLinkElement = Data_Foreign.unsafeReadTagged("HTMLLinkElement");
	var readHTMLLegendElement = Data_Foreign.unsafeReadTagged("HTMLLegendElement");
	var readHTMLLabelElement = Data_Foreign.unsafeReadTagged("HTMLLabelElement");
	var readHTMLLIElement = Data_Foreign.unsafeReadTagged("HTMLLIElement");
	var readHTMLKeygenElement = Data_Foreign.unsafeReadTagged("HTMLKeygenElement");
	var readHTMLInputElement = Data_Foreign.unsafeReadTagged("HTMLInputElement");
	var readHTMLImageElement = Data_Foreign.unsafeReadTagged("HTMLImageElement");
	var readHTMLIFrameElement = Data_Foreign.unsafeReadTagged("HTMLIFrameElement");
	var readHTMLHtmlElement = Data_Foreign.unsafeReadTagged("HTMLHtmlElement");
	var readHTMLHeadingElement = Data_Foreign.unsafeReadTagged("HTMLHeadingElement");
	var readHTMLHeadElement = Data_Foreign.unsafeReadTagged("HTMLHeadElement");
	var readHTMLHRElement = Data_Foreign.unsafeReadTagged("HTMLHRElement");
	var readHTMLFormElement = Data_Foreign.unsafeReadTagged("HTMLFormElement");
	var readHTMLFieldSetElement = Data_Foreign.unsafeReadTagged("HTMLFieldSetElement");
	var readHTMLEmbedElement = Data_Foreign.unsafeReadTagged("HTMLEmbedElement");
	var readHTMLElement = $foreign._readHTMLElement(function ($0) {
	    return Data_Either.Left.create(Data_Foreign.TypeMismatch.create("HTMLElement")($0));
	})(Data_Either.Right.create);
	var readHTMLDocument = Data_Foreign.unsafeReadTagged("HTMLDocument");
	var readHTMLDivElement = Data_Foreign.unsafeReadTagged("HTMLDivElement");
	var readHTMLDataListElement = Data_Foreign.unsafeReadTagged("HTMLDataListElement");
	var readHTMLDataElement = Data_Foreign.unsafeReadTagged("HTMLDataElement");
	var readHTMLDListElement = Data_Foreign.unsafeReadTagged("HTMLDListElement");
	var readHTMLCanvasElement = Data_Foreign.unsafeReadTagged("HTMLCanvasElement");
	var readHTMLButtonElement = Data_Foreign.unsafeReadTagged("HTMLButtonElement");
	var readHTMLBodyElement = Data_Foreign.unsafeReadTagged("HTMLBodyElement");
	var readHTMLBaseElement = Data_Foreign.unsafeReadTagged("HTMLBaseElement");
	var readHTMLBRElement = Data_Foreign.unsafeReadTagged("HTMLBRElement");
	var readHTMLAudioElement = Data_Foreign.unsafeReadTagged("HTMLAudioElement");
	var readHTMLAreaElement = Data_Foreign.unsafeReadTagged("HTMLAreaElement");
	var readHTMLAnchorElement = Data_Foreign.unsafeReadTagged("HTMLAnchorElement");
	var isForeignHTMLUListElement = new Data_Foreign_Class.IsForeign(readHTMLUListElement);
	var isForeignHTMLTrackElement = new Data_Foreign_Class.IsForeign(readHTMLTrackElement);
	var isForeignHTMLTitleElement = new Data_Foreign_Class.IsForeign(readHTMLTitleElement);
	var isForeignHTMLTimeElement = new Data_Foreign_Class.IsForeign(readHTMLTimeElement);
	var isForeignHTMLTextAreaElement = new Data_Foreign_Class.IsForeign(readHTMLTextAreaElement);
	var isForeignHTMLTemplateElement = new Data_Foreign_Class.IsForeign(readHTMLTemplateElement);
	var isForeignHTMLTableSectionElement = new Data_Foreign_Class.IsForeign(readHTMLTableSectionElement);
	var isForeignHTMLTableRowElement = new Data_Foreign_Class.IsForeign(readHTMLTableRowElement);
	var isForeignHTMLTableElement = new Data_Foreign_Class.IsForeign(readHTMLTableElement);
	var isForeignHTMLTableColElement = new Data_Foreign_Class.IsForeign(readHTMLTableColElement);
	var isForeignHTMLTableCaptionElement = new Data_Foreign_Class.IsForeign(readHTMLTableCaptionElement);
	var isForeignHTMLStyleElement = new Data_Foreign_Class.IsForeign(readHTMLStyleElement);
	var isForeignHTMLSpanElement = new Data_Foreign_Class.IsForeign(readHTMLSpanElement);
	var isForeignHTMLSourceElement = new Data_Foreign_Class.IsForeign(readHTMLSourceElement);
	var isForeignHTMLSelectElement = new Data_Foreign_Class.IsForeign(readHTMLSelectElement);
	var isForeignHTMLScriptElement = new Data_Foreign_Class.IsForeign(readHTMLScriptElement);
	var isForeignHTMLQuoteElement = new Data_Foreign_Class.IsForeign(readHTMLQuoteElement);
	var isForeignHTMLProgressElement = new Data_Foreign_Class.IsForeign(readHTMLProgressElement);
	var isForeignHTMLPreElement = new Data_Foreign_Class.IsForeign(readHTMLPreElement);
	var isForeignHTMLParamElement = new Data_Foreign_Class.IsForeign(readHTMLParamElement);
	var isForeignHTMLParagraphElement = new Data_Foreign_Class.IsForeign(readHTMLParagraphElement);
	var isForeignHTMLOutputElement = new Data_Foreign_Class.IsForeign(readHTMLOutputElement);
	var isForeignHTMLOptionElement = new Data_Foreign_Class.IsForeign(readHTMLOptionElement);
	var isForeignHTMLOptGroupElement = new Data_Foreign_Class.IsForeign(readHTMLOptGroupElement);
	var isForeignHTMLObjectElement = new Data_Foreign_Class.IsForeign(readHTMLObjectElement);
	var isForeignHTMLOListElement = new Data_Foreign_Class.IsForeign(readHTMLOListElement);
	var isForeignHTMLModElement = new Data_Foreign_Class.IsForeign(readHTMLModElement);
	var isForeignHTMLMeterElement = new Data_Foreign_Class.IsForeign(readHTMLMeterElement);
	var isForeignHTMLMetaElement = new Data_Foreign_Class.IsForeign(readHTMLMetaElement);
	var isForeignHTMLMapElement = new Data_Foreign_Class.IsForeign(readHTMLMapElement);
	var isForeignHTMLLinkElement = new Data_Foreign_Class.IsForeign(readHTMLLinkElement);
	var isForeignHTMLLegendElement = new Data_Foreign_Class.IsForeign(readHTMLLegendElement);
	var isForeignHTMLLabelElement = new Data_Foreign_Class.IsForeign(readHTMLLabelElement);
	var isForeignHTMLLIElement = new Data_Foreign_Class.IsForeign(readHTMLLIElement);
	var isForeignHTMLKeygenElement = new Data_Foreign_Class.IsForeign(readHTMLKeygenElement);
	var isForeignHTMLInputElement = new Data_Foreign_Class.IsForeign(readHTMLInputElement);
	var isForeignHTMLImageElement = new Data_Foreign_Class.IsForeign(readHTMLImageElement);
	var isForeignHTMLIFrameElement = new Data_Foreign_Class.IsForeign(readHTMLIFrameElement);
	var isForeignHTMLHtmlElement = new Data_Foreign_Class.IsForeign(readHTMLHtmlElement);
	var isForeignHTMLHeadingElement = new Data_Foreign_Class.IsForeign(readHTMLHeadingElement);
	var isForeignHTMLHeadElement = new Data_Foreign_Class.IsForeign(readHTMLHeadElement);
	var isForeignHTMLHRElement = new Data_Foreign_Class.IsForeign(readHTMLHRElement);
	var isForeignHTMLFormElement = new Data_Foreign_Class.IsForeign(readHTMLFormElement);
	var isForeignHTMLFieldSetElement = new Data_Foreign_Class.IsForeign(readHTMLFieldSetElement);
	var isForeignHTMLEmbedElement = new Data_Foreign_Class.IsForeign(readHTMLEmbedElement);
	var isForeignHTMLElement = new Data_Foreign_Class.IsForeign(readHTMLElement);
	var isForeignHTMLDocument = new Data_Foreign_Class.IsForeign(readHTMLDocument);
	var isForeignHTMLDivElement = new Data_Foreign_Class.IsForeign(readHTMLDivElement);
	var isForeignHTMLDataListElement = new Data_Foreign_Class.IsForeign(readHTMLDataListElement);
	var isForeignHTMLDataElement = new Data_Foreign_Class.IsForeign(readHTMLDataElement);
	var isForeignHTMLDListElement = new Data_Foreign_Class.IsForeign(readHTMLDListElement);
	var isForeignHTMLCanvasElement = new Data_Foreign_Class.IsForeign(readHTMLCanvasElement);
	var isForeignHTMLButtonElement = new Data_Foreign_Class.IsForeign(readHTMLButtonElement);
	var isForeignHTMLBodyElement = new Data_Foreign_Class.IsForeign(readHTMLBodyElement);
	var isForeignHTMLBaseElement = new Data_Foreign_Class.IsForeign(readHTMLBaseElement);
	var isForeignHTMLBRElement = new Data_Foreign_Class.IsForeign(readHTMLBRElement);
	var isForeignHTMLAreaElement = new Data_Foreign_Class.IsForeign(readHTMLAreaElement);
	var isForeignHTMLAnchorElement = new Data_Foreign_Class.IsForeign(readHTMLAnchorElement);
	var htmlVideoElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlUListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTrackElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTitleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTimeElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTextAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTemplateElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableSectionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableRowElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableHeaderCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableDataCellElementToHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableColElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCellElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlTableCaptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlStyleElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSpanElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSourceElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlSelectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlScriptElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlQuoteElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlProgressElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlPreElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParamElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlParagraphElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOutputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptionElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOptGroupElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlObjectElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlOListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlModElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMeterElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMetaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMediaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlMapElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLinkElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLegendElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLabelElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlLIElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlKeygenElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlInputElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlImageElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlIFrameElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHtmlElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadingElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHeadElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlHRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFormElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlFieldSetElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlEmbedElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlElementToElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToNode = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
	var htmlDivElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDataElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlDListElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlCanvasElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlButtonElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBodyElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBaseElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlBRElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAudioElementToHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAreaElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	var htmlAnchorElementToHTMLElement = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    htmlAnchorElementToHTMLElement: htmlAnchorElementToHTMLElement, 
	    htmlAreaElementToHTMLElement: htmlAreaElementToHTMLElement, 
	    htmlAudioElementToHTMLMediaElement: htmlAudioElementToHTMLMediaElement, 
	    htmlBRElementToHTMLElement: htmlBRElementToHTMLElement, 
	    htmlBaseElementToHTMLElement: htmlBaseElementToHTMLElement, 
	    htmlBodyElementToHTMLElement: htmlBodyElementToHTMLElement, 
	    htmlButtonElementToHTMLElement: htmlButtonElementToHTMLElement, 
	    htmlCanvasElementToHTMLElement: htmlCanvasElementToHTMLElement, 
	    htmlDListElementToHTMLElement: htmlDListElementToHTMLElement, 
	    htmlDataElementToHTMLElement: htmlDataElementToHTMLElement, 
	    htmlDataListElementToHTMLElement: htmlDataListElementToHTMLElement, 
	    htmlDivElementToHTMLElement: htmlDivElementToHTMLElement, 
	    htmlDocumentToDocument: htmlDocumentToDocument, 
	    htmlDocumentToEventTarget: htmlDocumentToEventTarget, 
	    htmlDocumentToNode: htmlDocumentToNode, 
	    htmlDocumentToNonElementParentNode: htmlDocumentToNonElementParentNode, 
	    htmlDocumentToParentNode: htmlDocumentToParentNode, 
	    htmlElementToElement: htmlElementToElement, 
	    htmlElementToEventTarget: htmlElementToEventTarget, 
	    htmlElementToNode: htmlElementToNode, 
	    htmlElementToNonDocumentTypeChildNode: htmlElementToNonDocumentTypeChildNode, 
	    htmlElementToParentNode: htmlElementToParentNode, 
	    htmlEmbedElementToHTMLElement: htmlEmbedElementToHTMLElement, 
	    htmlFieldSetElementToHTMLElement: htmlFieldSetElementToHTMLElement, 
	    htmlFormElementToHTMLElement: htmlFormElementToHTMLElement, 
	    htmlHRElementToHTMLElement: htmlHRElementToHTMLElement, 
	    htmlHeadElementToHTMLElement: htmlHeadElementToHTMLElement, 
	    htmlHeadingElementToHTMLElement: htmlHeadingElementToHTMLElement, 
	    htmlHtmlElementToHTMLElement: htmlHtmlElementToHTMLElement, 
	    htmlIFrameElementToHTMLElement: htmlIFrameElementToHTMLElement, 
	    htmlImageElementToHTMLElement: htmlImageElementToHTMLElement, 
	    htmlInputElementToHTMLElement: htmlInputElementToHTMLElement, 
	    htmlKeygenElementToHTMLElement: htmlKeygenElementToHTMLElement, 
	    htmlLIElementToHTMLElement: htmlLIElementToHTMLElement, 
	    htmlLabelElementToHTMLElement: htmlLabelElementToHTMLElement, 
	    htmlLegendElementToHTMLElement: htmlLegendElementToHTMLElement, 
	    htmlLinkElementToHTMLElement: htmlLinkElementToHTMLElement, 
	    htmlMapElementToHTMLElement: htmlMapElementToHTMLElement, 
	    htmlMediaElementToHTMLElement: htmlMediaElementToHTMLElement, 
	    htmlMetaElementToHTMLElement: htmlMetaElementToHTMLElement, 
	    htmlMeterElementToHTMLElement: htmlMeterElementToHTMLElement, 
	    htmlModElementToHTMLElement: htmlModElementToHTMLElement, 
	    htmlOListElementToHTMLElement: htmlOListElementToHTMLElement, 
	    htmlObjectElementToHTMLElement: htmlObjectElementToHTMLElement, 
	    htmlOptGroupElementToHTMLElement: htmlOptGroupElementToHTMLElement, 
	    htmlOptionElementToHTMLElement: htmlOptionElementToHTMLElement, 
	    htmlOutputElementToHTMLElement: htmlOutputElementToHTMLElement, 
	    htmlParagraphElementToHTMLElement: htmlParagraphElementToHTMLElement, 
	    htmlParamElementToHTMLElement: htmlParamElementToHTMLElement, 
	    htmlPreElementToHTMLElement: htmlPreElementToHTMLElement, 
	    htmlProgressElementToHTMLElement: htmlProgressElementToHTMLElement, 
	    htmlQuoteElementToHTMLElement: htmlQuoteElementToHTMLElement, 
	    htmlScriptElementToHTMLElement: htmlScriptElementToHTMLElement, 
	    htmlSelectElementToHTMLElement: htmlSelectElementToHTMLElement, 
	    htmlSourceElementToHTMLElement: htmlSourceElementToHTMLElement, 
	    htmlSpanElementToHTMLElement: htmlSpanElementToHTMLElement, 
	    htmlStyleElementToHTMLElement: htmlStyleElementToHTMLElement, 
	    htmlTableCaptionElementToHTMLElement: htmlTableCaptionElementToHTMLElement, 
	    htmlTableCellElementToHTMLElement: htmlTableCellElementToHTMLElement, 
	    htmlTableColElementToHTMLElement: htmlTableColElementToHTMLElement, 
	    htmlTableDataCellElementToHTMLTableCellElement: htmlTableDataCellElementToHTMLTableCellElement, 
	    htmlTableElementToHTMLElement: htmlTableElementToHTMLElement, 
	    htmlTableHeaderCellElementToHTMLTableCellElement: htmlTableHeaderCellElementToHTMLTableCellElement, 
	    htmlTableRowElementToHTMLElement: htmlTableRowElementToHTMLElement, 
	    htmlTableSectionElementToHTMLElement: htmlTableSectionElementToHTMLElement, 
	    htmlTemplateElementToHTMLElement: htmlTemplateElementToHTMLElement, 
	    htmlTextAreaElementToHTMLElement: htmlTextAreaElementToHTMLElement, 
	    htmlTimeElementToHTMLElement: htmlTimeElementToHTMLElement, 
	    htmlTitleElementToHTMLElement: htmlTitleElementToHTMLElement, 
	    htmlTrackElementToHTMLElement: htmlTrackElementToHTMLElement, 
	    htmlUListElementToHTMLElement: htmlUListElementToHTMLElement, 
	    htmlVideoElementToHTMLMediaElement: htmlVideoElementToHTMLMediaElement, 
	    readHTMLAnchorElement: readHTMLAnchorElement, 
	    readHTMLAreaElement: readHTMLAreaElement, 
	    readHTMLAudioElement: readHTMLAudioElement, 
	    readHTMLBRElement: readHTMLBRElement, 
	    readHTMLBaseElement: readHTMLBaseElement, 
	    readHTMLBodyElement: readHTMLBodyElement, 
	    readHTMLButtonElement: readHTMLButtonElement, 
	    readHTMLCanvasElement: readHTMLCanvasElement, 
	    readHTMLDListElement: readHTMLDListElement, 
	    readHTMLDataElement: readHTMLDataElement, 
	    readHTMLDataListElement: readHTMLDataListElement, 
	    readHTMLDivElement: readHTMLDivElement, 
	    readHTMLDocument: readHTMLDocument, 
	    readHTMLElement: readHTMLElement, 
	    readHTMLEmbedElement: readHTMLEmbedElement, 
	    readHTMLFieldSetElement: readHTMLFieldSetElement, 
	    readHTMLFormElement: readHTMLFormElement, 
	    readHTMLHRElement: readHTMLHRElement, 
	    readHTMLHeadElement: readHTMLHeadElement, 
	    readHTMLHeadingElement: readHTMLHeadingElement, 
	    readHTMLHtmlElement: readHTMLHtmlElement, 
	    readHTMLIFrameElement: readHTMLIFrameElement, 
	    readHTMLImageElement: readHTMLImageElement, 
	    readHTMLInputElement: readHTMLInputElement, 
	    readHTMLKeygenElement: readHTMLKeygenElement, 
	    readHTMLLIElement: readHTMLLIElement, 
	    readHTMLLabelElement: readHTMLLabelElement, 
	    readHTMLLegendElement: readHTMLLegendElement, 
	    readHTMLLinkElement: readHTMLLinkElement, 
	    readHTMLMapElement: readHTMLMapElement, 
	    readHTMLMediaElement: readHTMLMediaElement, 
	    readHTMLMetaElement: readHTMLMetaElement, 
	    readHTMLMeterElement: readHTMLMeterElement, 
	    readHTMLModElement: readHTMLModElement, 
	    readHTMLOListElement: readHTMLOListElement, 
	    readHTMLObjectElement: readHTMLObjectElement, 
	    readHTMLOptGroupElement: readHTMLOptGroupElement, 
	    readHTMLOptionElement: readHTMLOptionElement, 
	    readHTMLOutputElement: readHTMLOutputElement, 
	    readHTMLParagraphElement: readHTMLParagraphElement, 
	    readHTMLParamElement: readHTMLParamElement, 
	    readHTMLPreElement: readHTMLPreElement, 
	    readHTMLProgressElement: readHTMLProgressElement, 
	    readHTMLQuoteElement: readHTMLQuoteElement, 
	    readHTMLScriptElement: readHTMLScriptElement, 
	    readHTMLSelectElement: readHTMLSelectElement, 
	    readHTMLSourceElement: readHTMLSourceElement, 
	    readHTMLSpanElement: readHTMLSpanElement, 
	    readHTMLStyleElement: readHTMLStyleElement, 
	    readHTMLTableCaptionElement: readHTMLTableCaptionElement, 
	    readHTMLTableCellElement: readHTMLTableCellElement, 
	    readHTMLTableColElement: readHTMLTableColElement, 
	    readHTMLTableDataCellElement: readHTMLTableDataCellElement, 
	    readHTMLTableElement: readHTMLTableElement, 
	    readHTMLTableHeaderCellElement: readHTMLTableHeaderCellElement, 
	    readHTMLTableRowElement: readHTMLTableRowElement, 
	    readHTMLTableSectionElement: readHTMLTableSectionElement, 
	    readHTMLTemplateElement: readHTMLTemplateElement, 
	    readHTMLTextAreaElement: readHTMLTextAreaElement, 
	    readHTMLTimeElement: readHTMLTimeElement, 
	    readHTMLTitleElement: readHTMLTitleElement, 
	    readHTMLTrackElement: readHTMLTrackElement, 
	    readHTMLUListElement: readHTMLUListElement, 
	    readHTMLVideoElement: readHTMLVideoElement, 
	    windowToEventTarget: windowToEventTarget, 
	    isForeignHTMLDocument: isForeignHTMLDocument, 
	    isForeignHTMLElement: isForeignHTMLElement, 
	    isForeignHTMLHtmlElement: isForeignHTMLHtmlElement, 
	    isForeignHTMLHeadElement: isForeignHTMLHeadElement, 
	    isForeignHTMLTitleElement: isForeignHTMLTitleElement, 
	    isForeignHTMLBaseElement: isForeignHTMLBaseElement, 
	    isForeignHTMLLinkElement: isForeignHTMLLinkElement, 
	    isForeignHTMLMetaElement: isForeignHTMLMetaElement, 
	    isForeignHTMLStyleElement: isForeignHTMLStyleElement, 
	    isForeignHTMLBodyElement: isForeignHTMLBodyElement, 
	    isForeignHTMLHeadingElement: isForeignHTMLHeadingElement, 
	    isForeignHTMLParagraphElement: isForeignHTMLParagraphElement, 
	    isForeignHTMLHRElement: isForeignHTMLHRElement, 
	    isForeignHTMLPreElement: isForeignHTMLPreElement, 
	    isForeignHTMLQuoteElement: isForeignHTMLQuoteElement, 
	    isForeignHTMLOListElement: isForeignHTMLOListElement, 
	    isForeignHTMLUListElement: isForeignHTMLUListElement, 
	    isForeignHTMLLIElement: isForeignHTMLLIElement, 
	    isForeignHTMLDListElement: isForeignHTMLDListElement, 
	    isForeignHTMLDivElement: isForeignHTMLDivElement, 
	    isForeignHTMLAnchorElement: isForeignHTMLAnchorElement, 
	    isForeignHTMLDataElement: isForeignHTMLDataElement, 
	    isForeignHTMLTimeElement: isForeignHTMLTimeElement, 
	    isForeignHTMLSpanElement: isForeignHTMLSpanElement, 
	    isForeignHTMLBRElement: isForeignHTMLBRElement, 
	    isForeignHTMLModElement: isForeignHTMLModElement, 
	    isForeignHTMLImageElement: isForeignHTMLImageElement, 
	    isForeignHTMLIFrameElement: isForeignHTMLIFrameElement, 
	    isForeignHTMLEmbedElement: isForeignHTMLEmbedElement, 
	    isForeignHTMLObjectElement: isForeignHTMLObjectElement, 
	    isForeignHTMLParamElement: isForeignHTMLParamElement, 
	    isForeignHTMLSourceElement: isForeignHTMLSourceElement, 
	    isForeignHTMLTrackElement: isForeignHTMLTrackElement, 
	    isForeignHTMLMapElement: isForeignHTMLMapElement, 
	    isForeignHTMLAreaElement: isForeignHTMLAreaElement, 
	    isForeignHTMLTableElement: isForeignHTMLTableElement, 
	    isForeignHTMLTableCaptionElement: isForeignHTMLTableCaptionElement, 
	    isForeignHTMLTableColElement: isForeignHTMLTableColElement, 
	    isForeignHTMLTableSectionElement: isForeignHTMLTableSectionElement, 
	    isForeignHTMLTableRowElement: isForeignHTMLTableRowElement, 
	    isForeignHTMLFormElement: isForeignHTMLFormElement, 
	    isForeignHTMLLabelElement: isForeignHTMLLabelElement, 
	    isForeignHTMLInputElement: isForeignHTMLInputElement, 
	    isForeignHTMLButtonElement: isForeignHTMLButtonElement, 
	    isForeignHTMLSelectElement: isForeignHTMLSelectElement, 
	    isForeignHTMLDataListElement: isForeignHTMLDataListElement, 
	    isForeignHTMLOptGroupElement: isForeignHTMLOptGroupElement, 
	    isForeignHTMLOptionElement: isForeignHTMLOptionElement, 
	    isForeignHTMLTextAreaElement: isForeignHTMLTextAreaElement, 
	    isForeignHTMLKeygenElement: isForeignHTMLKeygenElement, 
	    isForeignHTMLOutputElement: isForeignHTMLOutputElement, 
	    isForeignHTMLProgressElement: isForeignHTMLProgressElement, 
	    isForeignHTMLMeterElement: isForeignHTMLMeterElement, 
	    isForeignHTMLFieldSetElement: isForeignHTMLFieldSetElement, 
	    isForeignHTMLLegendElement: isForeignHTMLLegendElement, 
	    isForeignHTMLScriptElement: isForeignHTMLScriptElement, 
	    isForeignHTMLTemplateElement: isForeignHTMLTemplateElement, 
	    isForeignHTMLCanvasElement: isForeignHTMLCanvasElement
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 148 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Types.js ***!
  \***************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	exports._readHTMLElement = function (failure) {
	  return function (success) {
	    return function (value) {
	      var tag = Object.prototype.toString.call(value);
	      if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
	        return success(value);
	      } else {
	        return failure(tag);
	      }
	    };
	  };
	};


/***/ },
/* 149 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.js */ 150);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_Int = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int.purs */ 151);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_String = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String.purs */ 157);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var TypeMismatch = (function () {
	    function TypeMismatch(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    TypeMismatch.create = function (value0) {
	        return function (value1) {
	            return new TypeMismatch(value0, value1);
	        };
	    };
	    return TypeMismatch;
	})();
	var ErrorAtIndex = (function () {
	    function ErrorAtIndex(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtIndex.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtIndex(value0, value1);
	        };
	    };
	    return ErrorAtIndex;
	})();
	var ErrorAtProperty = (function () {
	    function ErrorAtProperty(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ErrorAtProperty.create = function (value0) {
	        return function (value1) {
	            return new ErrorAtProperty(value0, value1);
	        };
	    };
	    return ErrorAtProperty;
	})();
	var JSONError = (function () {
	    function JSONError(value0) {
	        this.value0 = value0;
	    };
	    JSONError.create = function (value0) {
	        return new JSONError(value0);
	    };
	    return JSONError;
	})();
	var unsafeReadTagged = function (tag) {
	    return function (value) {
	        if ($foreign.tagOf(value) === tag) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
	        };
	        return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
	    };
	};
	var showForeignError = new Data_Show.Show(function (v) {
	    if (v instanceof TypeMismatch) {
	        return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
	    };
	    if (v instanceof ErrorAtIndex) {
	        return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof ErrorAtProperty) {
	        return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + Data_Show.show(showForeignError)(v.value1)));
	    };
	    if (v instanceof JSONError) {
	        return "JSON error: " + v.value0;
	    };
	    throw new Error("Failed pattern match at Data.Foreign line 53, column 3 - line 53, column 87: " + [ v.constructor.name ]);
	});
	var readString = unsafeReadTagged("String");
	var readNumber = unsafeReadTagged("Number");
	var readInt = function (value) {
	    var error = Data_Function.apply(Data_Either.Left.create)(new TypeMismatch("Int", $foreign.tagOf(value)));
	    var fromNumber = function ($30) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($30));
	    };
	    return Data_Either.either(Data_Function["const"](error))(fromNumber)(readNumber(value));
	};
	var readChar = function (value) {
	    var error = Data_Function.apply(Data_Either.Left.create)(new TypeMismatch("Char", $foreign.tagOf(value)));
	    var fromString = function ($31) {
	        return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_String.toChar($31));
	    };
	    return Data_Either.either(Data_Function["const"](error))(fromString)(readString(value));
	};
	var readBoolean = unsafeReadTagged("Boolean");
	var readArray = function (value) {
	    if ($foreign.isArray(value)) {
	        return Data_Function.apply(Control_Applicative.pure(Data_Either.applicativeEither))($foreign.unsafeFromForeign(value));
	    };
	    return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
	};
	var parseJSON = function (json) {
	    return Data_Function_Uncurried.runFn3($foreign.parseJSONImpl)(function ($32) {
	        return Data_Either.Left.create(JSONError.create($32));
	    })(Data_Either.Right.create)(json);
	};
	var eqForeignError = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof TypeMismatch && v1 instanceof TypeMismatch) {
	            return v.value0 === v1.value0 && v.value1 === v1.value1;
	        };
	        if (v instanceof ErrorAtIndex && v1 instanceof ErrorAtIndex) {
	            return v.value0 === v1.value0 && Data_Eq.eq(eqForeignError)(v.value1)(v1.value1);
	        };
	        if (v instanceof ErrorAtProperty && v1 instanceof ErrorAtProperty) {
	            return v.value0 === v1.value0 && Data_Eq.eq(eqForeignError)(v.value1)(v1.value1);
	        };
	        if (v instanceof JSONError && v1 instanceof JSONError) {
	            return v.value0 === v1.value0;
	        };
	        return false;
	    };
	});
	module.exports = {
	    TypeMismatch: TypeMismatch, 
	    ErrorAtIndex: ErrorAtIndex, 
	    ErrorAtProperty: ErrorAtProperty, 
	    JSONError: JSONError, 
	    parseJSON: parseJSON, 
	    readArray: readArray, 
	    readBoolean: readBoolean, 
	    readChar: readChar, 
	    readInt: readInt, 
	    readNumber: readNumber, 
	    readString: readString, 
	    unsafeReadTagged: unsafeReadTagged, 
	    showForeignError: showForeignError, 
	    eqForeignError: eqForeignError, 
	    isArray: $foreign.isArray, 
	    isNull: $foreign.isNull, 
	    isUndefined: $foreign.isUndefined, 
	    tagOf: $foreign.tagOf, 
	    toForeign: $foreign.toForeign, 
	    typeOf: $foreign.typeOf, 
	    unsafeFromForeign: $foreign.unsafeFromForeign
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 150 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign.js ***!
  \*****************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Foreign
	
	// jshint maxparams: 3
	exports.parseJSONImpl = function (left, right, str) {
	  try {
	    return right(JSON.parse(str));
	  } catch (e) {
	    return left(e.toString());
	  }
	};
	
	// jshint maxparams: 1
	exports.toForeign = function (value) {
	  return value;
	};
	
	exports.unsafeFromForeign = function (value) {
	  return value;
	};
	
	exports.typeOf = function (value) {
	  return typeof value;
	};
	
	exports.tagOf = function (value) {
	  return Object.prototype.toString.call(value).slice(8, -1);
	};
	
	exports.isNull = function (value) {
	  return value === null;
	};
	
	exports.isUndefined = function (value) {
	  return value === undefined;
	};
	
	exports.isArray = Array.isArray || function (value) {
	  return Object.prototype.toString.call(value) === "[object Array]";
	};


/***/ },
/* 151 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-integers/src/Data/Int.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int.js */ 152);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Int_Bits = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int/Bits.purs */ 153);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var $$Math = __webpack_require__(/*! ./bower_components/purescript-math/src/Math.purs */ 155);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Radix = function (x) {
	    return x;
	};
	var radix = function (n) {
	    if (n >= 2 && n <= 36) {
	        return new Data_Maybe.Just(n);
	    };
	    if (Data_Boolean.otherwise) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Int line 119, column 1 - line 120, column 38: " + [ n.constructor.name ]);
	};
	var odd = function (x) {
	    return Data_Int_Bits.and(x)(1) !== 0;
	};
	var octal = 8;
	var hexadecimal = 16;
	var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var fromString = fromStringAs(10);
	var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unsafeClamp = function (x) {
	    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
	        return Data_Bounded.top(Data_Bounded.boundedInt);
	    };
	    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
	        return Data_Bounded.bottom(Data_Bounded.boundedInt);
	    };
	    if (Data_Boolean.otherwise) {
	        return Partial_Unsafe.unsafePartial(function (dictPartial) {
	            return Data_Maybe.fromJust(dictPartial)(fromNumber(x));
	        });
	    };
	    throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 67, column 56: " + [ x.constructor.name ]);
	};
	var round = function ($3) {
	    return unsafeClamp($$Math.round($3));
	};
	var floor = function ($4) {
	    return unsafeClamp($$Math.floor($4));
	};
	var even = function (x) {
	    return Data_Int_Bits.and(x)(1) === 0;
	};
	var decimal = 10;
	var ceil = function ($5) {
	    return unsafeClamp($$Math.ceil($5));
	};
	var binary = 2;
	module.exports = {
	    binary: binary, 
	    ceil: ceil, 
	    decimal: decimal, 
	    even: even, 
	    floor: floor, 
	    fromNumber: fromNumber, 
	    fromString: fromString, 
	    fromStringAs: fromStringAs, 
	    hexadecimal: hexadecimal, 
	    octal: octal, 
	    odd: odd, 
	    radix: radix, 
	    round: round, 
	    toNumber: $foreign.toNumber, 
	    toStringAs: $foreign.toStringAs
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 152 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-integers/src/Data/Int.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Int
	
	exports.fromNumberImpl = function (just) {
	  return function (nothing) {
	    return function (n) {
	      /* jshint bitwise: false */
	      return (n | 0) === n ? just(n) : nothing;
	    };
	  };
	};
	
	exports.toNumber = function (n) {
	  return n;
	};
	
	exports.fromStringAsImpl = function (just) {
	  return function (nothing) {
	    return function (radix) {
	      var digits;
	      if (radix < 11) {
	        digits = "[0-" + (radix - 1).toString() + "]";
	      } else if (radix === 11) {
	        digits = "[0-9a]";
	      } else {
	        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
	      }
	      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
	
	      return function (s) {
	        /* jshint bitwise: false */
	        if (pattern.test(s)) {
	          var i = parseInt(s, radix);
	          return (i | 0) === i ? just(i) : nothing;
	        } else {
	          return nothing;
	        }
	      };
	    };
	  };
	};
	
	exports.toStringAs = function (radix) {
	  return function (i) {
	    return i.toString(radix);
	  };
	};


/***/ },
/* 153 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-integers/src/Data/Int/Bits.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 *  | This module defines bitwise operations for the `Int` type.
	 */
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int/Bits.js */ 154);
	module.exports = {
	    and: $foreign.and, 
	    complement: $foreign.complement, 
	    or: $foreign.or, 
	    shl: $foreign.shl, 
	    shr: $foreign.shr, 
	    xor: $foreign.xor, 
	    zshr: $foreign.zshr
	};


/***/ },
/* 154 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-integers/src/Data/Int/Bits.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Int.Bits
	
	exports.and = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 & n2;
	  };
	};
	
	exports.or = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 | n2;
	  };
	};
	
	exports.xor = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 ^ n2;
	  };
	};
	
	exports.shl = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 << n2;
	  };
	};
	
	exports.shr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >> n2;
	  };
	};
	
	exports.zshr = function (n1) {
	  return function (n2) {
	    /* jshint bitwise: false */
	    return n1 >>> n2;
	  };
	};
	
	exports.complement = function (n) {
	  /* jshint bitwise: false */
	  return ~n;
	};


/***/ },
/* 155 */
/*!********************************************************!*\
  !*** ./bower_components/purescript-math/src/Math.purs ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 *  | Wraps the math functions and constants from Javascript's built-in `Math` object.
	 *  | See [Math Reference at MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math).
	 */
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-math/src/Math.js */ 156);
	module.exports = {
	    abs: $foreign.abs, 
	    acos: $foreign.acos, 
	    asin: $foreign.asin, 
	    atan: $foreign.atan, 
	    atan2: $foreign.atan2, 
	    ceil: $foreign.ceil, 
	    cos: $foreign.cos, 
	    e: $foreign.e, 
	    exp: $foreign.exp, 
	    floor: $foreign.floor, 
	    ln10: $foreign.ln10, 
	    ln2: $foreign.ln2, 
	    log: $foreign.log, 
	    log10e: $foreign.log10e, 
	    log2e: $foreign.log2e, 
	    max: $foreign.max, 
	    min: $foreign.min, 
	    pi: $foreign.pi, 
	    pow: $foreign.pow, 
	    remainder: $foreign.remainder, 
	    round: $foreign.round, 
	    sin: $foreign.sin, 
	    sqrt: $foreign.sqrt, 
	    sqrt1_2: $foreign.sqrt1_2, 
	    sqrt2: $foreign.sqrt2, 
	    tan: $foreign.tan, 
	    trunc: $foreign.trunc
	};


/***/ },
/* 156 */
/*!******************************************************!*\
  !*** ./bower_components/purescript-math/src/Math.js ***!
  \******************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Math
	
	exports.abs = Math.abs;
	
	exports.acos = Math.acos;
	
	exports.asin = Math.asin;
	
	exports.atan = Math.atan;
	
	exports.atan2 = function (y) {
	  return function (x) {
	    return Math.atan2(y, x);
	  };
	};
	
	exports.ceil = Math.ceil;
	
	exports.cos = Math.cos;
	
	exports.exp = Math.exp;
	
	exports.floor = Math.floor;
	
	exports.trunc = Math.trunc || function (n) {
	  return n < 0 ? Math.ceil(n) : Math.floor(n);
	};
	
	exports.log = Math.log;
	
	exports.max = function (n1) {
	  return function (n2) {
	    return Math.max(n1, n2);
	  };
	};
	
	exports.min = function (n1) {
	  return function (n2) {
	    return Math.min(n1, n2);
	  };
	};
	
	exports.pow = function (n) {
	  return function (p) {
	    return Math.pow(n, p);
	  };
	};
	
	exports.remainder = function (n) {
	  return function (m) {
	    return n % m;
	  };
	};
	
	exports.round = Math.round;
	
	exports.sin = Math.sin;
	
	exports.sqrt = Math.sqrt;
	
	exports.tan = Math.tan;
	
	exports.e = Math.E;
	
	exports.ln2 = Math.LN2;
	
	exports.ln10 = Math.LN10;
	
	exports.log2e = Math.LOG2E;
	
	exports.log10e = Math.LOG10E;
	
	exports.pi = Math.PI;
	
	exports.sqrt1_2 = Math.SQRT1_2;
	
	exports.sqrt2 = Math.SQRT2;


/***/ },
/* 157 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/String.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String.js */ 158);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_String_Unsafe = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String/Unsafe.purs */ 159);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var uncons = function (v) {
	    if (v === "") {
	        return Data_Maybe.Nothing.value;
	    };
	    return new Data_Maybe.Just({
	        head: Data_String_Unsafe.charAt(0)(v), 
	        tail: $foreign.drop(1)(v)
	    });
	};
	var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var takeWhile = function (p) {
	    return function (s) {
	        return $foreign.take($foreign.count(p)(s))(s);
	    };
	};
	var $$null = function (s) {
	    return $foreign.length(s) === 0;
	};
	var localeCompare = $foreign._localeCompare(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
	var lastIndexOf$prime = $foreign["_lastIndexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var lastIndexOf = $foreign._lastIndexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripSuffix = function (suffix) {
	    return function (str) {
	        var $2 = lastIndexOf(suffix)(str);
	        if ($2 instanceof Data_Maybe.Just && $2.value0 === $foreign.length(str) - $foreign.length(suffix)) {
	            return Data_Function.apply(Data_Maybe.Just.create)($foreign.take($2.value0)(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var indexOf$prime = $foreign["_indexOf'"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var stripPrefix = function (prefix) {
	    return function (str) {
	        var $4 = indexOf(prefix)(str);
	        if ($4 instanceof Data_Maybe.Just && $4.value0 === 0) {
	            return Data_Function.apply(Data_Maybe.Just.create)($foreign.drop($foreign.length(prefix))(str));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var dropWhile = function (p) {
	    return function (s) {
	        return $foreign.drop($foreign.count(p)(s))(s);
	    };
	};
	var contains = function (x) {
	    return function (s) {
	        return Data_Maybe.isJust(indexOf(x)(s));
	    };
	};
	var charCodeAt = $foreign._charCodeAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	module.exports = {
	    charAt: charAt, 
	    charCodeAt: charCodeAt, 
	    contains: contains, 
	    dropWhile: dropWhile, 
	    indexOf: indexOf, 
	    "indexOf'": indexOf$prime, 
	    lastIndexOf: lastIndexOf, 
	    "lastIndexOf'": lastIndexOf$prime, 
	    localeCompare: localeCompare, 
	    "null": $$null, 
	    stripPrefix: stripPrefix, 
	    stripSuffix: stripSuffix, 
	    takeWhile: takeWhile, 
	    toChar: toChar, 
	    uncons: uncons, 
	    drop: $foreign.drop, 
	    fromCharArray: $foreign.fromCharArray, 
	    joinWith: $foreign.joinWith, 
	    length: $foreign.length, 
	    replace: $foreign.replace, 
	    singleton: $foreign.singleton, 
	    split: $foreign.split, 
	    take: $foreign.take, 
	    toCharArray: $foreign.toCharArray, 
	    toLower: $foreign.toLower, 
	    toUpper: $foreign.toUpper, 
	    trim: $foreign.trim
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 158 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/String.js ***!
  \****************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.String
	
	exports._charAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
	      };
	    };
	  };
	};
	
	exports.singleton = function (c) {
	  return c;
	};
	
	exports._charCodeAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (s) {
	        return i >= 0 && i < s.length ? just(s.charCodeAt(i)) : nothing;
	      };
	    };
	  };
	};
	
	exports._toChar = function (just) {
	  return function (nothing) {
	    return function (s) {
	      return s.length === 1 ? just(s) : nothing;
	    };
	  };
	};
	
	exports.fromCharArray = function (a) {
	  return a.join("");
	};
	
	exports._indexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.indexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};
	
	exports["_indexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.indexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};
	
	exports._lastIndexOf = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (s) {
	        var i = s.lastIndexOf(x);
	        return i === -1 ? nothing : just(i);
	      };
	    };
	  };
	};
	
	exports["_lastIndexOf'"] = function (just) {
	  return function (nothing) {
	    return function (x) {
	      return function (startAt) {
	        return function (s) {
	          if (startAt < 0 || startAt > s.length) return nothing;
	          var i = s.lastIndexOf(x, startAt);
	          return i === -1 ? nothing : just(i);
	        };
	      };
	    };
	  };
	};
	
	exports.length = function (s) {
	  return s.length;
	};
	
	exports._localeCompare = function (lt) {
	  return function (eq) {
	    return function (gt) {
	      return function (s1) {
	        return function (s2) {
	          var result = s1.localeCompare(s2);
	          return result < 0 ? lt : result > 0 ? gt : eq;
	        };
	      };
	    };
	  };
	};
	
	exports.replace = function (s1) {
	  return function (s2) {
	    return function (s3) {
	      return s3.replace(s1, s2);
	    };
	  };
	};
	
	exports.take = function (n) {
	  return function (s) {
	    return s.substr(0, n);
	  };
	};
	
	exports.drop = function (n) {
	  return function (s) {
	    return s.substring(n);
	  };
	};
	
	exports.count = function (p) {
	  return function (s) {
	    for (var i = 0; i < s.length && p(s.charAt(i)); i++); {}
	    return i;
	  };
	};
	
	exports.split = function (sep) {
	  return function (s) {
	    return s.split(sep);
	  };
	};
	
	exports.toCharArray = function (s) {
	  return s.split("");
	};
	
	exports.toLower = function (s) {
	  return s.toLowerCase();
	};
	
	exports.toUpper = function (s) {
	  return s.toUpperCase();
	};
	
	exports.trim = function (s) {
	  return s.trim();
	};
	
	exports.joinWith = function (s) {
	  return function (xs) {
	    return xs.join(s);
	  };
	};


/***/ },
/* 159 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/String/Unsafe.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 *  | Unsafe string and character functions.
	 */
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String/Unsafe.js */ 160);
	module.exports = {
	    "char": $foreign["char"], 
	    charAt: $foreign.charAt, 
	    charCodeAt: $foreign.charCodeAt
	};


/***/ },
/* 160 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/String/Unsafe.js ***!
  \***********************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.String.Unsafe
	
	exports.charCodeAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charCodeAt(i);
	    throw new Error("Data.String.Unsafe.charCodeAt: Invalid index.");
	  };
	};
	
	exports.charAt = function (i) {
	  return function (s) {
	    if (i >= 0 && i < s.length) return s.charAt(i);
	    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
	  };
	};
	
	exports.char = function (s) {
	  if (s.length === 1) return s.charAt(0);
	  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
	};


/***/ },
/* 161 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/Class.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Index = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Index.purs */ 166);
	var Data_Foreign_Null = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Null.purs */ 168);
	var Data_Foreign_NullOrUndefined = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/NullOrUndefined.purs */ 169);
	var Data_Foreign_Undefined = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Undefined.purs */ 170);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var IsForeign = function (read) {
	    this.read = read;
	};
	var stringIsForeign = new IsForeign(Data_Foreign.readString);
	var read = function (dict) {
	    return dict.read;
	};
	var readJSON = function (dictIsForeign) {
	    return function (json) {
	        return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(dictIsForeign));
	    };
	};
	var readWith = function (dictIsForeign) {
	    return function (f) {
	        return function (value) {
	            return Data_Either.either(function ($8) {
	                return Data_Either.Left.create(f($8));
	            })(Data_Either.Right.create)(read(dictIsForeign)(value));
	        };
	    };
	};
	var readProp = function (dictIsForeign) {
	    return function (dictIndex) {
	        return function (prop) {
	            return function (value) {
	                return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.ix(dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Foreign_Index.errorAt(dictIndex)(prop)));
	            };
	        };
	    };
	};
	var undefinedIsForeign = function (dictIsForeign) {
	    return new IsForeign(Data_Foreign_Undefined.readUndefined(read(dictIsForeign)));
	};
	var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
	var nullOrUndefinedIsForeign = function (dictIsForeign) {
	    return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(dictIsForeign)));
	};
	var nullIsForeign = function (dictIsForeign) {
	    return new IsForeign(Data_Foreign_Null.readNull(read(dictIsForeign)));
	};
	var intIsForeign = new IsForeign(Data_Foreign.readInt);
	var foreignIsForeign = new IsForeign(Control_Applicative.pure(Data_Either.applicativeEither));
	var charIsForeign = new IsForeign(Data_Foreign.readChar);
	var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
	var arrayIsForeign = function (dictIsForeign) {
	    return new IsForeign(function (value) {
	        var readElement = function (i) {
	            return function (value1) {
	                return readWith(dictIsForeign)(Data_Foreign.ErrorAtIndex.create(i))(value1);
	            };
	        };
	        var readElements = function (arr) {
	            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
	        };
	        return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
	    });
	};
	module.exports = {
	    IsForeign: IsForeign, 
	    read: read, 
	    readJSON: readJSON, 
	    readProp: readProp, 
	    readWith: readWith, 
	    foreignIsForeign: foreignIsForeign, 
	    stringIsForeign: stringIsForeign, 
	    charIsForeign: charIsForeign, 
	    booleanIsForeign: booleanIsForeign, 
	    numberIsForeign: numberIsForeign, 
	    intIsForeign: intIsForeign, 
	    arrayIsForeign: arrayIsForeign, 
	    nullIsForeign: nullIsForeign, 
	    undefinedIsForeign: undefinedIsForeign, 
	    nullOrUndefinedIsForeign: nullOrUndefinedIsForeign
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 162 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-arrays/src/Data/Array.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.js */ 163);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Lazy = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Lazy.purs */ 132);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Unfoldable = __webpack_require__(/*! ./bower_components/purescript-unfoldable/src/Data/Unfoldable.purs */ 164);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
	var updateAt = $foreign._updateAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var unzip = $foreign["uncons'"](function (v) {
	    return new Data_Tuple.Tuple([  ], [  ]);
	})(function (v) {
	    return function (ts) {
	        var $39 = unzip(ts);
	        return new Data_Tuple.Tuple($foreign.cons(v.value0)($39.value0), $foreign.cons(v.value1)($39.value1));
	    };
	});
	var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (xs) {
	        return new Data_Maybe.Just({
	            head: x, 
	            tail: xs
	        });
	    };
	});
	var toUnfoldable = function (dictUnfoldable) {
	    return Data_Function.apply(Data_Unfoldable.unfoldr(dictUnfoldable))($foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (h) {
	        return function (t) {
	            return new Data_Maybe.Just(new Data_Tuple.Tuple(h, t));
	        };
	    }));
	};
	var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
	    return function (xs) {
	        return new Data_Maybe.Just(xs);
	    };
	});
	var span = function (p) {
	    var go = function (__copy_acc) {
	        return function (__copy_xs) {
	            var acc = __copy_acc;
	            var xs = __copy_xs;
	            tco: while (true) {
	                var $45 = uncons(xs);
	                if ($45 instanceof Data_Maybe.Just && p($45.value0.head)) {
	                    var __tco_acc = $foreign.cons($45.value0.head)(acc);
	                    acc = __tco_acc;
	                    xs = $45.value0.tail;
	                    continue tco;
	                };
	                return {
	                    init: $foreign.reverse(acc), 
	                    rest: xs
	                };
	            };
	        };
	    };
	    return go([  ]);
	};
	var takeWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).init;
	    };
	};
	var sortBy = function (comp) {
	    return function (xs) {
	        var comp$prime = function (x) {
	            return function (y) {
	                var $49 = comp(x)(y);
	                if ($49 instanceof Data_Ordering.GT) {
	                    return 1;
	                };
	                if ($49 instanceof Data_Ordering.EQ) {
	                    return 0;
	                };
	                if ($49 instanceof Data_Ordering.LT) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.Array line 427, column 15 - line 432, column 1: " + [ $49.constructor.name ]);
	            };
	        };
	        return $foreign.sortImpl(comp$prime)(xs);
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var singleton = function (a) {
	    return [ a ];
	};
	var $$null = function (xs) {
	    return $foreign.length(xs) === 0;
	};
	var nubBy = function (eq) {
	    return function (xs) {
	        var $50 = uncons(xs);
	        if ($50 instanceof Data_Maybe.Just) {
	            return $foreign.cons($50.value0.head)(nubBy(eq)($foreign.filter(function (y) {
	                return !eq($50.value0.head)(y);
	            })($50.value0.tail)));
	        };
	        if ($50 instanceof Data_Maybe.Nothing) {
	            return [  ];
	        };
	        throw new Error("Failed pattern match at Data.Array line 516, column 3 - line 518, column 18: " + [ $50.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())($foreign.cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())([  ]));
	        };
	    };
	};
	var insertAt = $foreign._insertAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var init = function (xs) {
	    if ($$null(xs)) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (Data_Boolean.otherwise) {
	        return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1)(xs));
	    };
	    throw new Error("Failed pattern match at Data.Array line 226, column 1 - line 228, column 55: " + [ xs.constructor.name ]);
	};
	var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var last = function (xs) {
	    return index(xs)($foreign.length(xs) - 1);
	};
	var modifyAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                return updateAt(i)(f(x))(xs);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	var head = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
	    return function (v) {
	        return new Data_Maybe.Just(x);
	    };
	});
	var groupBy = function (op) {
	    var go = function (__copy_acc) {
	        return function (__copy_xs) {
	            var acc = __copy_acc;
	            var xs = __copy_xs;
	            tco: while (true) {
	                var $55 = uncons(xs);
	                if ($55 instanceof Data_Maybe.Just) {
	                    var sp = span(op($55.value0.head))($55.value0.tail);
	                    var __tco_acc = $foreign.cons($foreign.cons($55.value0.head)(sp.init))(acc);
	                    acc = __tco_acc;
	                    xs = sp.rest;
	                    continue tco;
	                };
	                if ($55 instanceof Data_Maybe.Nothing) {
	                    return $foreign.reverse(acc);
	                };
	                throw new Error("Failed pattern match at Data.Array line 502, column 15 - line 506, column 27: " + [ $55.constructor.name ]);
	            };
	        };
	    };
	    return go([  ]);
	};
	var group = function (dictEq) {
	    return function (xs) {
	        return groupBy(Data_Eq.eq(dictEq))(xs);
	    };
	};
	var group$prime = function (dictOrd) {
	    return function ($69) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($69));
	    };
	};
	var fromFoldable = function (dictFoldable) {
	    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
	};
	var foldM = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            return $foreign["uncons'"](function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	            })(function (b) {
	                return function (bs) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(a)(b))(function (a$prime) {
	                        return foldM(dictMonad)(f)(a$prime)(bs);
	                    });
	                };
	            });
	        };
	    };
	};
	var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var insertBy = function (cmp) {
	    return function (x) {
	        return function (ys) {
	            var i = Data_Maybe.maybe(0)(function (v) {
	                return v + 1 | 0;
	            })(findLastIndex(function (y) {
	                return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
	            })(ys));
	            return Partial_Unsafe.unsafePartial(function (dictPartial) {
	                return Data_Maybe.fromJust(dictPartial)(insertAt(i)(x)(ys));
	            });
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var intersectBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return $foreign.filter(function (x) {
	                return Data_Maybe.isJust(findIndex(eq(x))(ys));
	            })(xs);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var filterM = function (dictMonad) {
	    return function (p) {
	        return $foreign["uncons'"](function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())([  ]);
	        })(function (x) {
	            return function (xs) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(p(x))(function (v) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                            if (v) {
	                                return $foreign.cons(x)(v1);
	                            };
	                            if (!v) {
	                                return v1;
	                            };
	                            throw new Error("Failed pattern match at Data.Array line 402, column 3 - line 402, column 34: " + [ v.constructor.name ]);
	                        })());
	                    });
	                });
	            };
	        });
	    };
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    return function (xs) {
	        return (span(p)(xs)).rest;
	    };
	};
	var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2.length === 0) {
	                return [  ];
	            };
	            return Data_Maybe.maybe(v2)(function (i) {
	                return Data_Function.apply(Partial_Unsafe.unsafePartial)(function (dictPartial) {
	                    return Data_Maybe.fromJust(dictPartial)(deleteAt(i)(v2));
	                });
	            })(findIndex(v(v1))(v2));
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return function (xs) {
	        return function (ys) {
	            if ($$null(xs)) {
	                return [  ];
	            };
	            if (Data_Boolean.otherwise) {
	                return $foreign["uncons'"](Data_Function["const"](xs))(function (z) {
	                    return function (zs) {
	                        return difference(dictEq)($$delete(dictEq)(z)(xs))(zs);
	                    };
	                })(ys);
	            };
	            throw new Error("Failed pattern match at Data.Array line 548, column 1 - line 550, column 67: " + [ xs.constructor.name, ys.constructor.name ]);
	        };
	    };
	};
	var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
	var mapMaybe = function (f) {
	    return concatMap(function ($70) {
	        return Data_Maybe.maybe([  ])(singleton)(f($70));
	    });
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var alterAt = function (i) {
	    return function (f) {
	        return function (xs) {
	            var go = function (x) {
	                var $67 = f(x);
	                if ($67 instanceof Data_Maybe.Nothing) {
	                    return deleteAt(i)(xs);
	                };
	                if ($67 instanceof Data_Maybe.Just) {
	                    return updateAt(i)($67.value0)(xs);
	                };
	                throw new Error("Failed pattern match at Data.Array line 360, column 10 - line 362, column 32: " + [ $67.constructor.name ]);
	            };
	            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
	        };
	    };
	};
	module.exports = {
	    alterAt: alterAt, 
	    catMaybes: catMaybes, 
	    concatMap: concatMap, 
	    "delete": $$delete, 
	    deleteAt: deleteAt, 
	    deleteBy: deleteBy, 
	    difference: difference, 
	    dropWhile: dropWhile, 
	    elemIndex: elemIndex, 
	    elemLastIndex: elemLastIndex, 
	    filterM: filterM, 
	    findIndex: findIndex, 
	    findLastIndex: findLastIndex, 
	    foldM: foldM, 
	    fromFoldable: fromFoldable, 
	    group: group, 
	    "group'": group$prime, 
	    groupBy: groupBy, 
	    head: head, 
	    index: index, 
	    init: init, 
	    insert: insert, 
	    insertAt: insertAt, 
	    insertBy: insertBy, 
	    intersect: intersect, 
	    intersectBy: intersectBy, 
	    last: last, 
	    many: many, 
	    mapMaybe: mapMaybe, 
	    modifyAt: modifyAt, 
	    nub: nub, 
	    nubBy: nubBy, 
	    "null": $$null, 
	    singleton: singleton, 
	    some: some, 
	    sort: sort, 
	    sortBy: sortBy, 
	    span: span, 
	    tail: tail, 
	    takeWhile: takeWhile, 
	    toUnfoldable: toUnfoldable, 
	    uncons: uncons, 
	    union: union, 
	    unionBy: unionBy, 
	    unzip: unzip, 
	    updateAt: updateAt, 
	    zip: zip, 
	    zipWithA: zipWithA, 
	    concat: $foreign.concat, 
	    cons: $foreign.cons, 
	    drop: $foreign.drop, 
	    filter: $foreign.filter, 
	    length: $foreign.length, 
	    partition: $foreign.partition, 
	    range: $foreign.range, 
	    reverse: $foreign.reverse, 
	    slice: $foreign.slice, 
	    snoc: $foreign.snoc, 
	    take: $foreign.take, 
	    zipWith: $foreign.zipWith
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 163 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-arrays/src/Data/Array.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Array
	
	//------------------------------------------------------------------------------
	// Array creation --------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.range = function (start) {
	  return function (end) {
	    var step = start > end ? -1 : 1;
	    var result = [];
	    for (var i = start, n = 0; i !== end; i += step) {
	      result[n++] = i;
	    }
	    result[n] = i;
	    return result;
	  };
	};
	
	exports.fromFoldableImpl = (function () {
	  // jshint maxparams: 2
	  function Cons(head, tail) {
	    this.head = head;
	    this.tail = tail;
	  }
	  var emptyList = {};
	
	  function curryCons(head) {
	    return function (tail) {
	      return new Cons(head, tail);
	    };
	  }
	
	  function listToArray(list) {
	    var result = [];
	    var count = 0;
	    while (list !== emptyList) {
	      result[count++] = list.head;
	      list = list.tail;
	    }
	    return result;
	  }
	
	  return function (foldr) {
	    return function (xs) {
	      return listToArray(foldr(curryCons)(emptyList)(xs));
	    };
	  };
	})();
	
	//------------------------------------------------------------------------------
	// Array size ------------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.length = function (xs) {
	  return xs.length;
	};
	
	//------------------------------------------------------------------------------
	// Extending arrays ------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.cons = function (e) {
	  return function (l) {
	    return [e].concat(l);
	  };
	};
	
	exports.snoc = function (l) {
	  return function (e) {
	    var l1 = l.slice();
	    l1.push(e);
	    return l1;
	  };
	};
	
	//------------------------------------------------------------------------------
	// Non-indexed reads -----------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports["uncons'"] = function (empty) {
	  return function (next) {
	    return function (xs) {
	      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
	    };
	  };
	};
	
	//------------------------------------------------------------------------------
	// Indexed operations ----------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.indexImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
	      };
	    };
	  };
	};
	
	exports.findIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = 0, l = xs.length; i < l; i++) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};
	
	exports.findLastIndexImpl = function (just) {
	  return function (nothing) {
	    return function (f) {
	      return function (xs) {
	        for (var i = xs.length - 1; i >= 0; i--) {
	          if (f(xs[i])) return just(i);
	        }
	        return nothing;
	      };
	    };
	  };
	};
	
	exports._insertAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i > l.length) return nothing;
	          var l1 = l.slice();
	          l1.splice(i, 0, a);
	          return just(l1);
	        };
	      };
	    };
	  };
	};
	
	exports._deleteAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (l) {
	        if (i < 0 || i >= l.length) return nothing;
	        var l1 = l.slice();
	        l1.splice(i, 1);
	        return just(l1);
	      };
	    };
	  };
	};
	
	exports._updateAt = function (just) {
	  return function (nothing) {
	    return function (i) {
	      return function (a) {
	        return function (l) {
	          if (i < 0 || i >= l.length) return nothing;
	          var l1 = l.slice();
	          l1[i] = a;
	          return just(l1);
	        };
	      };
	    };
	  };
	};
	
	//------------------------------------------------------------------------------
	// Transformations -------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.reverse = function (l) {
	  return l.slice().reverse();
	};
	
	exports.concat = function (xss) {
	  var result = [];
	  for (var i = 0, l = xss.length; i < l; i++) {
	    var xs = xss[i];
	    for (var j = 0, m = xs.length; j < m; j++) {
	      result.push(xs[j]);
	    }
	  }
	  return result;
	};
	
	exports.filter = function (f) {
	  return function (xs) {
	    return xs.filter(f);
	  };
	};
	
	exports.partition = function (f) {
	  return function (xs) {
	    var yes = [];
	    var no  = [];
	    for (var i = 0; i < xs.length; i++) {
	      var x = xs[i];
	      if (f(x))
	        yes.push(x);
	      else
	        no.push(x);
	    }
	    return { yes: yes, no: no };
	  };
	};
	
	//------------------------------------------------------------------------------
	// Sorting ---------------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.sortImpl = function (f) {
	  return function (l) {
	    // jshint maxparams: 2
	    return l.slice().sort(function (x, y) {
	      return f(x)(y);
	    });
	  };
	};
	
	//------------------------------------------------------------------------------
	// Subarrays -------------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.slice = function (s) {
	  return function (e) {
	    return function (l) {
	      return l.slice(s, e);
	    };
	  };
	};
	
	exports.take = function (n) {
	  return function (l) {
	    return n < 1 ? [] : l.slice(0, n);
	  };
	};
	
	exports.drop = function (n) {
	  return function (l) {
	    return n < 1 ? l : l.slice(n);
	  };
	};
	
	//------------------------------------------------------------------------------
	// Zipping ---------------------------------------------------------------------
	//------------------------------------------------------------------------------
	
	exports.zipWith = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      var result = new Array(l);
	      for (var i = 0; i < l; i++) {
	        result[i] = f(xs[i])(ys[i]);
	      }
	      return result;
	    };
	  };
	};


/***/ },
/* 164 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-unfoldable/src/Data/Unfoldable.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-unfoldable/src/Data/Unfoldable.js */ 165);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Unfoldable = function (unfoldr) {
	    this.unfoldr = unfoldr;
	};
	var unfoldr = function (dict) {
	    return dict.unfoldr;
	};
	var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Partial_Unsafe.unsafePartial(function (dictPartial) {
	    return Data_Maybe.fromJust(dictPartial);
	}))(Data_Tuple.fst)(Data_Tuple.snd));
	var replicate = function (dictUnfoldable) {
	    return function (n) {
	        return function (v) {
	            var step = function (i) {
	                var $7 = i <= 0;
	                if ($7) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (!$7) {
	                    return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1));
	                };
	                throw new Error("Failed pattern match at Data.Unfoldable line 58, column 7 - line 59, column 34: " + [ $7.constructor.name ]);
	            };
	            return unfoldr(dictUnfoldable)(step)(n);
	        };
	    };
	};
	var replicateA = function (dictApplicative) {
	    return function (dictUnfoldable) {
	        return function (dictTraversable) {
	            return function (n) {
	                return function (m) {
	                    return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
	                };
	            };
	        };
	    };
	};
	var singleton = function (dictUnfoldable) {
	    return replicate(dictUnfoldable)(1);
	};
	var none = function (dictUnfoldable) {
	    return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
	};
	module.exports = {
	    Unfoldable: Unfoldable, 
	    none: none, 
	    replicate: replicate, 
	    replicateA: replicateA, 
	    singleton: singleton, 
	    unfoldr: unfoldr, 
	    unfoldableArray: unfoldableArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 165 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-unfoldable/src/Data/Unfoldable.js ***!
  \***********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Unfoldable
	
	exports.unfoldrArrayImpl = function (isNothing) {
	  return function (fromJust) {
	    return function (fst) {
	      return function (snd) {
	        return function (f) {
	          return function (b) {
	            var result = [];
	            while (true) {
	              var maybe = f(b);
	              if (isNothing(maybe)) return result;
	              var tuple = fromJust(maybe);
	              result.push(fst(tuple));
	              b = snd(tuple);
	            }
	          };
	        };
	      };
	    };
	  };
	};


/***/ },
/* 166 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/Index.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Index.js */ 167);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
	    this.errorAt = errorAt;
	    this.hasOwnProperty = hasOwnProperty;
	    this.hasProperty = hasProperty;
	    this.ix = ix;
	};
	var unsafeReadProp = function (k) {
	    return function (value) {
	        return Data_Function_Uncurried.runFn4($foreign.unsafeReadPropImpl)(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))))(Control_Applicative.pure(Data_Either.applicativeEither))(k)(value);
	    };
	};
	var prop = unsafeReadProp;
	var ix = function (dict) {
	    return dict.ix;
	};
	var index = unsafeReadProp;
	var hasPropertyImpl = function (v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return false;
	        };
	        if (Data_Foreign.isUndefined(value)) {
	            return false;
	        };
	        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
	            return Data_Function_Uncurried.runFn2($foreign.unsafeHasProperty)(v)(value);
	        };
	        return false;
	    };
	};
	var hasProperty = function (dict) {
	    return dict.hasProperty;
	};
	var hasOwnPropertyImpl = function (v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return false;
	        };
	        if (Data_Foreign.isUndefined(value)) {
	            return false;
	        };
	        if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
	            return Data_Function_Uncurried.runFn2($foreign.unsafeHasOwnProperty)(v)(value);
	        };
	        return false;
	    };
	};
	var indexInt = new Index(Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(index));
	var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
	var hasOwnProperty = function (dict) {
	    return dict.hasOwnProperty;
	};
	var errorAt = function (dict) {
	    return dict.errorAt;
	};
	module.exports = {
	    Index: Index, 
	    errorAt: errorAt, 
	    hasOwnProperty: hasOwnProperty, 
	    hasProperty: hasProperty, 
	    index: index, 
	    ix: ix, 
	    prop: prop, 
	    indexString: indexString, 
	    indexInt: indexInt
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 167 */
/*!***********************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/Index.js ***!
  \***********************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Foreign.Index
	
	// jshint maxparams: 4
	exports.unsafeReadPropImpl = function (f, s, key, value) {
	  return value == null ? f : s(value[key]);
	};
	
	// jshint maxparams: 2
	exports.unsafeHasOwnProperty = function (prop, value) {
	  return Object.prototype.hasOwnProperty.call(value, prop);
	};
	
	exports.unsafeHasProperty = function (prop, value) {
	  return prop in value;
	};


/***/ },
/* 168 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/Null.purs ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Null = function (x) {
	    return x;
	};
	var unNull = function (v) {
	    return v;
	};
	var readNull = function (v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return Null(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    Null: Null, 
	    readNull: readNull, 
	    unNull: unNull
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 169 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/NullOrUndefined.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var NullOrUndefined = function (x) {
	    return x;
	};
	var unNullOrUndefined = function (v) {
	    return v;
	};
	var readNullOrUndefined = function (v) {
	    return function (value) {
	        if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return NullOrUndefined(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    NullOrUndefined: NullOrUndefined, 
	    readNullOrUndefined: readNullOrUndefined, 
	    unNullOrUndefined: unNullOrUndefined
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 170 */
/*!*****************************************************************************!*\
  !*** ./bower_components/purescript-foreign/src/Data/Foreign/Undefined.purs ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Undefined = function (x) {
	    return x;
	};
	var unUndefined = function (v) {
	    return v;
	};
	var readUndefined = function (v) {
	    return function (value) {
	        if (Data_Foreign.isUndefined(value)) {
	            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
	        };
	        return Data_Functor.map(Data_Either.functorEither)(function ($5) {
	            return Undefined(Data_Maybe.Just.create($5));
	        })(v(value));
	    };
	};
	module.exports = {
	    Undefined: Undefined, 
	    readUndefined: readUndefined, 
	    unUndefined: unUndefined
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 171 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Event/Types.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/Types.js */ 172);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Class = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Class.purs */ 161);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var EventType = function (x) {
	    return x;
	};
	var wheelEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var uiEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var touchEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var readWheelEvent = Data_Foreign.unsafeReadTagged("WheelEvent");
	var readUIEvent = Data_Foreign.unsafeReadTagged("UIEvent");
	var readTouchEvent = Data_Foreign.unsafeReadTagged("TouchEvent");
	var readProgressEvent = Data_Foreign.unsafeReadTagged("ProgressEvent");
	var readMouseEvent = Data_Foreign.unsafeReadTagged("MouseEvent");
	var readKeyboardEvent = Data_Foreign.unsafeReadTagged("KeyboardEvent");
	var readInputEvent = Data_Foreign.unsafeReadTagged("InputEvent");
	var readFocusEvent = Data_Foreign.unsafeReadTagged("FocusEvent");
	var readEventTarget = $foreign._readEventTarget(Data_Either.Left.create)(Data_Either.Right.create);
	var readCustomEvent = Data_Foreign.unsafeReadTagged("CustomEvent");
	var readCompositionEvent = Data_Foreign.unsafeReadTagged("CompositionEvent");
	var progressEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var mouseEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var keyboardEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var isForeignWheelEvent = new Data_Foreign_Class.IsForeign(readWheelEvent);
	var isForeignUIEvent = new Data_Foreign_Class.IsForeign(readUIEvent);
	var isForeignTouchEvent = new Data_Foreign_Class.IsForeign(readTouchEvent);
	var isForeignProgressEvent = new Data_Foreign_Class.IsForeign(readProgressEvent);
	var isForeignMouseEvent = new Data_Foreign_Class.IsForeign(readMouseEvent);
	var isForeignKeyboardEvent = new Data_Foreign_Class.IsForeign(readKeyboardEvent);
	var isForeignInputEvent = new Data_Foreign_Class.IsForeign(readInputEvent);
	var isForeignFocusEvent = new Data_Foreign_Class.IsForeign(readFocusEvent);
	var isForeignEventTarget = new Data_Foreign_Class.IsForeign(readEventTarget);
	var isForeignCustomEvent = new Data_Foreign_Class.IsForeign(readCustomEvent);
	var isForeignCompositionEvent = new Data_Foreign_Class.IsForeign(readCompositionEvent);
	var inputEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var focusEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var eqEventType = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordEventType = new Data_Ord.Ord(function () {
	    return eqEventType;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordString)(x)(y);
	    };
	});
	var customEventToEvent = Unsafe_Coerce.unsafeCoerce;
	var compositionEventToEvent = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    EventType: EventType, 
	    compositionEventToEvent: compositionEventToEvent, 
	    customEventToEvent: customEventToEvent, 
	    focusEventToEvent: focusEventToEvent, 
	    inputEventToEvent: inputEventToEvent, 
	    keyboardEventToEvent: keyboardEventToEvent, 
	    mouseEventToEvent: mouseEventToEvent, 
	    progressEventToEvent: progressEventToEvent, 
	    readCompositionEvent: readCompositionEvent, 
	    readCustomEvent: readCustomEvent, 
	    readEventTarget: readEventTarget, 
	    readFocusEvent: readFocusEvent, 
	    readInputEvent: readInputEvent, 
	    readKeyboardEvent: readKeyboardEvent, 
	    readMouseEvent: readMouseEvent, 
	    readProgressEvent: readProgressEvent, 
	    readTouchEvent: readTouchEvent, 
	    readUIEvent: readUIEvent, 
	    readWheelEvent: readWheelEvent, 
	    touchEventToEvent: touchEventToEvent, 
	    uiEventToEvent: uiEventToEvent, 
	    wheelEventToEvent: wheelEventToEvent, 
	    eqEventType: eqEventType, 
	    ordEventType: ordEventType, 
	    isForeignEventTarget: isForeignEventTarget, 
	    isForeignCustomEvent: isForeignCustomEvent, 
	    isForeignUIEvent: isForeignUIEvent, 
	    isForeignFocusEvent: isForeignFocusEvent, 
	    isForeignMouseEvent: isForeignMouseEvent, 
	    isForeignWheelEvent: isForeignWheelEvent, 
	    isForeignTouchEvent: isForeignTouchEvent, 
	    isForeignInputEvent: isForeignInputEvent, 
	    isForeignKeyboardEvent: isForeignKeyboardEvent, 
	    isForeignCompositionEvent: isForeignCompositionEvent, 
	    isForeignProgressEvent: isForeignProgressEvent
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 172 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Event/Types.js ***!
  \****************************************************************/
/***/ function(module, exports) {

	/* global EventTarget */
	"use strict";
	
	exports._readEventTarget = function (left) {
	  return function (right) {
	    return function (foreign) {
	      return foreign instanceof EventTarget ? left("Value is not an EventTarget") : right(foreign);
	    };
	  };
	};


/***/ },
/* 173 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/Types.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var DOM_Event_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/Types.purs */ 171);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var ElementId = function (x) {
	    return x;
	};
	var textToNode = Unsafe_Coerce.unsafeCoerce;
	var processingInstructionToNode = Unsafe_Coerce.unsafeCoerce;
	var elementToParentNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	var elementToNode = Unsafe_Coerce.unsafeCoerce;
	var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentTypeToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentToNode = Unsafe_Coerce.unsafeCoerce;
	var documentToEventTarget = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
	var documentFragmentToNode = Unsafe_Coerce.unsafeCoerce;
	var commentToNode = Unsafe_Coerce.unsafeCoerce;
	var characterDataToNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    ElementId: ElementId, 
	    characterDataToNonDocumentTypeChildNode: characterDataToNonDocumentTypeChildNode, 
	    commentToNode: commentToNode, 
	    documentFragmentToNode: documentFragmentToNode, 
	    documentFragmentToNonElementParentNode: documentFragmentToNonElementParentNode, 
	    documentFragmentToParentNode: documentFragmentToParentNode, 
	    documentToEventTarget: documentToEventTarget, 
	    documentToNode: documentToNode, 
	    documentToNonElementParentNode: documentToNonElementParentNode, 
	    documentToParentNode: documentToParentNode, 
	    documentTypeToNode: documentTypeToNode, 
	    elementToEventTarget: elementToEventTarget, 
	    elementToNode: elementToNode, 
	    elementToNonDocumentTypeChildNode: elementToNonDocumentTypeChildNode, 
	    elementToParentNode: elementToParentNode, 
	    processingInstructionToNode: processingInstructionToNode, 
	    textToNode: textToNode
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 174 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Window.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Window.js */ 175);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	module.exports = {
	    document: $foreign.document, 
	    innerHeight: $foreign.innerHeight, 
	    innerWidth: $foreign.innerWidth, 
	    location: $foreign.location, 
	    navigator: $foreign.navigator
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 175 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Window.js ***!
  \****************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	exports.document = function (window) {
	  return function () {
	    return window.document;
	  };
	};
	
	exports.navigator = function (window) {
	  return function () {
	    return window.navigator;
	  };
	};
	
	exports.location = function (window) {
	  return function () {
	    return window.location;
	  };
	};
	
	exports.innerWidth = function (window) {
	  return function () {
	    return window.innerWidth;
	  };
	};
	
	exports.innerHeight = function (window) {
	  return function () {
	    return window.innerHeight;
	  };
	};


/***/ },
/* 176 */
/*!*************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen.purs ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_Component = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component.purs */ 177);
	var Halogen_Driver = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Driver.purs */ 228);
	var Halogen_Effects = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Effects.purs */ 235);
	var Halogen_Query = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query.purs */ 227);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 177 */
/*!***********************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Component.purs ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Monad_ST = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.purs */ 117);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Array_ST = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array/ST.purs */ 189);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Lazy = __webpack_require__(/*! ./bower_components/purescript-lazy/src/Data/Lazy.purs */ 191);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Map = __webpack_require__(/*! ./bower_components/purescript-maps/src/Data/Map.purs */ 193);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Halogen_Component_ChildPath = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/ChildPath.purs */ 194);
	var Halogen_Component_Hook = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/Hook.purs */ 200);
	var Halogen_Component_Tree = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/Tree.purs */ 215);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_Query = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query.purs */ 227);
	var Halogen_Query_EventSource = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs */ 208);
	var Halogen_Query_HalogenF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs */ 201);
	var Halogen_Query_StateF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/StateF.purs */ 213);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Coroutine_Stalling = __webpack_require__(/*! ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs */ 212);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Component = function (x) {
	    return x;
	};
	var SlotConstructor = (function () {
	    function SlotConstructor(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SlotConstructor.create = function (value0) {
	        return function (value1) {
	            return new SlotConstructor(value0, value1);
	        };
	    };
	    return SlotConstructor;
	})();
	var ChildF = (function () {
	    function ChildF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    ChildF.create = function (value0) {
	        return function (value1) {
	            return new ChildF(value0, value1);
	        };
	    };
	    return ChildF;
	})();
	var ParentState = function (x) {
	    return x;
	};
	var runChildF = function (v) {
	    return v.value1;
	};
	var renderComponent = function (v) {
	    return v.render;
	};
	var queryComponent = function (v) {
	    return v["eval"];
	};
	var parentState = function (st) {
	    return {
	        parent: st, 
	        children: Data_Map.empty
	    };
	};
	var mapStateFParent = Halogen_Query_StateF.mapState(function (v) {
	    return v.parent;
	})(function (f) {
	    return function (v) {
	        return {
	            parent: f(v.parent), 
	            children: v.children
	        };
	    };
	});
	var mergeParentStateF = function ($186) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.StateHF.create(mapStateFParent($186)));
	};
	var mapStateFChild = function (dictOrd) {
	    return function (p) {
	        return Halogen_Query_StateF.mapState(function (v) {
	            return Data_Function.apply(Partial_Unsafe.unsafePartial(function (dictPartial) {
	                return Data_Maybe.fromJust(dictPartial);
	            }))(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
	                return v1.state;
	            })(Data_Map.lookup(dictOrd)(p)(v.children)));
	        })(function (f) {
	            return function (v) {
	                return {
	                    parent: v.parent, 
	                    children: Data_Map.update(dictOrd)(function (child) {
	                        return new Data_Maybe.Just({
	                            component: child.component, 
	                            state: f(child.state), 
	                            memo: Data_Maybe.Nothing.value
	                        });
	                    })(p)(v.children)
	                };
	            };
	        });
	    };
	};
	var liftQuery = Halogen_Query.liftH;
	var liftChildF = function (dictFunctor) {
	    return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(Control_Category.id(Control_Category.categoryFn))(Data_Functor_Coproduct.right)(Control_Category.id(Control_Category.categoryFn)));
	};
	var queryParent = function (dictFunctor) {
	    return function (f) {
	        return function ($187) {
	            return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(function (h) {
	                if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                    return mergeParentStateF(h.value0);
	                };
	                if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.SubscribeHF(Control_Monad_Free_Trans.interpret(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(Data_Functor_Coproduct.left))(Halogen_Query_EventSource.runEventSource(Halogen_Query_EventSource.fromParentEventSource(h.value0))), h.value1));
	                };
	                if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                    return liftChildF(dictFunctor)(h.value0);
	                };
	                if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderHF(h.value0, h.value1));
	                };
	                if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                    return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderPendingHF(h.value0));
	                };
	                if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.HaltHF.value);
	                };
	                throw new Error("Failed pattern match at Halogen.Component line 487, column 5 - line 494, column 29: " + [ h.constructor.name ]);
	            })(f($187));
	        };
	    };
	};
	var lifecycleComponent = function (spec) {
	    var renderTree = function (html) {
	        return Halogen_Component_Tree["mkTree'"]({
	            slot: Data_Unit.unit, 
	            html: Data_Lazy.defer(function (v) {
	                return Unsafe_Coerce.unsafeCoerce(html);
	            }), 
	            eq: function (v) {
	                return function (v1) {
	                    return false;
	                };
	            }, 
	            thunk: false
	        });
	    };
	    return {
	        render: function (s) {
	            return {
	                state: s, 
	                hooks: [  ], 
	                tree: renderTree(spec.render(s))
	            };
	        }, 
	        "eval": spec["eval"], 
	        initializer: spec.initializer, 
	        finalizers: function (s) {
	            return Data_Maybe.maybe([  ])(function (i) {
	                return [ Halogen_Component_Hook.finalized(spec["eval"])(s)(i) ];
	            })(spec.finalizer);
	        }
	    };
	};
	var interpret = function (dictFunctor) {
	    return function (nat) {
	        return function (v) {
	            var render$prime = function (st) {
	                var $101 = v.render(st);
	                return {
	                    state: $101.state, 
	                    hooks: Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.rmapHook(dictFunctor)(nat))($101.hooks), 
	                    tree: $101.tree
	                };
	            };
	            return {
	                render: render$prime, 
	                "eval": function ($188) {
	                    return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.hoistHalogenF(dictFunctor)(nat))(v["eval"]($188));
	                }, 
	                initializer: v.initializer, 
	                finalizers: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.mapFinalized(dictFunctor)(nat)))(v.finalizers)
	            };
	        };
	    };
	};
	var initializeComponent = function (v) {
	    return v.initializer;
	};
	var functorChildF = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return new ChildF(v.value0, Data_Functor.map(dictFunctor)(f)(v.value1));
	        };
	    });
	};
	var finalizeComponent = function (v) {
	    return v.finalizers;
	};
	var parentFinalizers = function ($$eval) {
	    return function (fin) {
	        return function (v) {
	            var parentFin = function (i) {
	                return [ Halogen_Component_Hook.finalized($$eval)(parentState(v.parent))(Data_Functor_Coproduct.left(i)) ];
	            };
	            var childFin = function (child) {
	                return finalizeComponent(child.component)(child.state);
	            };
	            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Foldable.foldMap(Data_Map.foldableMap)(Data_Monoid.monoidArray)(childFin)(v.children))(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Data_Monoid.monoidArray)(parentFin)(fin));
	        };
	    };
	};
	var renderParent = function (dictOrd) {
	    return function (render) {
	        return function (v) {
	            var installChild = function (v1) {
	                return function (v2) {
	                    var update = function (hs) {
	                        return function (c) {
	                            return {
	                                children: Data_Map.insert(dictOrd)(v1.value0)(c)(v2.children), 
	                                removed: Data_Map["delete"](dictOrd)(v1.value0)(v2.removed), 
	                                hooks: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v2.hooks)(hs)
	                            };
	                        };
	                    };
	                    var renderChild = function (v3) {
	                        return function (v4) {
	                            if (v4.memo instanceof Data_Maybe.Just) {
	                                return new Data_Tuple.Tuple(Data_Function.apply(Halogen_HTML_Core.Slot.create)(Halogen_Component_Tree.thunkTree(v4.memo.value0)), update([  ])(v4));
	                            };
	                            var r = renderComponent(v4.component)(v4.state);
	                            var adapt = function (a) {
	                                return Data_Functor_Coproduct.right(new ChildF(v1.value0, a));
	                            };
	                            var hooks$prime = Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.lmapHook(adapt))(Data_Maybe.maybe(r.hooks)(Data_Function.flip(Data_Array.cons)(r.hooks))(v3));
	                            var tree = Halogen_Component_Tree.graftTree(adapt)(Data_Function["const"](v1.value0))(r.tree);
	                            return Data_Function.apply(Data_Tuple.Tuple.create(new Halogen_HTML_Core.Slot(tree)))(update(hooks$prime)({
	                                component: v4.component, 
	                                state: r.state, 
	                                memo: new Data_Maybe.Just(tree)
	                            }));
	                        };
	                    };
	                    var $122 = Data_Map.lookup(dictOrd)(v1.value0)(v.children);
	                    if ($122 instanceof Data_Maybe.Just) {
	                        return renderChild(Data_Maybe.Nothing.value)($122.value0);
	                    };
	                    if ($122 instanceof Data_Maybe.Nothing) {
	                        var def$prime = v1.value1(Data_Unit.unit);
	                        var hook = Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_Hook.PostRender.create)(initializeComponent(def$prime.component));
	                        return renderChild(hook)({
	                            component: def$prime.component, 
	                            state: def$prime.initialState, 
	                            memo: Data_Maybe.Nothing.value
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Component line 442, column 5 - line 454, column 16: " + [ $122.constructor.name ]);
	                };
	            };
	            var install = function (v1) {
	                return function (st) {
	                    if (v1 instanceof Halogen_HTML_Core.Text) {
	                        return new Data_Tuple.Tuple(new Halogen_HTML_Core.Text(v1.value0), st);
	                    };
	                    if (v1 instanceof Halogen_HTML_Core.Slot) {
	                        return installChild(v1.value0)(st);
	                    };
	                    if (v1 instanceof Halogen_HTML_Core.Element) {
	                        return Data_Function.apply(Control_Monad_Eff.runPure)(function __do() {
	                            var v2 = Data_Array_ST.emptySTArray();
	                            var v3 = {
	                                value: st
	                            };
	                            Control_Monad_Eff.foreachE(v1.value3)(function (el) {
	                                return function __do() {
	                                    var $136 = install(el)(v3.value);
	                                    Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Data_Array_ST.pushSTArray(v2)($136.value0))();
	                                    return Data_Function.apply(Data_Functor["void"](Control_Monad_Eff.functorEff))(Control_Monad_ST.writeSTRef(v3)($136.value1))();
	                                };
	                            })();
	                            return Data_Function.apply(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(new Data_Tuple.Tuple(Data_Function.apply(Halogen_HTML_Core.Element.create(v1.value0)(v1.value1)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_HTML_Core.functorProp)(Data_Functor_Coproduct.left))(v1.value2)))(Unsafe_Coerce.unsafeCoerce(v2)), v3.value))();
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Component line 404, column 1 - line 477, column 14: " + [ v1.constructor.name, st.constructor.name ]);
	                };
	            };
	            var init = {
	                children: Data_Map.empty, 
	                removed: v.children, 
	                hooks: [  ]
	            };
	            var finalizeChild = function (child) {
	                return Data_Function.apply(Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.Finalized.create))(finalizeComponent(child.component)(child.state));
	            };
	            var $144 = install(render(v.parent))(init);
	            return {
	                state: {
	                    parent: v.parent, 
	                    children: $144.value1.children
	                }, 
	                hooks: Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Foldable.foldMap(Data_Map.foldableMap)(Data_Monoid.monoidArray)(finalizeChild)($144.value1.removed))($144.value1.hooks), 
	                tree: Data_Function.apply(Halogen_Component_Tree.mkTree(dictOrd["__superclass_Data.Eq.Eq_0"]()))(Data_Lazy.defer(function (v1) {
	                    return $144.value0;
	                }))
	            };
	        };
	    };
	};
	var emptyResult = function (state) {
	    return {
	        state: state, 
	        hooks: [  ], 
	        tree: Halogen_Component_Tree.emptyTree
	    };
	};
	var transform = function (dictFunctor) {
	    return function (reviewS) {
	        return function (previewS) {
	            return function (reviewQ) {
	                return function (previewQ) {
	                    return function (v) {
	                        var render$prime = function (st) {
	                            var $153 = v.render(st);
	                            return {
	                                state: reviewS($153.state), 
	                                hooks: Data_Functor.map(Data_Functor.functorArray)(Halogen_Component_Hook.lmapHook(reviewQ))($153.hooks), 
	                                tree: Halogen_Component_Tree.graftTree(reviewQ)(Control_Category.id(Control_Category.categoryFn))($153.tree)
	                            };
	                        };
	                        var modifyState = function (f) {
	                            return function (s$prime) {
	                                return Data_Maybe.maybe(s$prime)(function ($189) {
	                                    return reviewS(f($189));
	                                })(previewS(s$prime));
	                            };
	                        };
	                        var go = function (v1) {
	                            if (v1 instanceof Halogen_Query_HalogenF.StateHF && v1.value0 instanceof Halogen_Query_StateF.Get) {
	                                return Control_Bind.bindFlipped(Control_Monad_Free.freeBind)(function ($190) {
	                                    return Control_Monad_Free.liftF(Data_Maybe.maybe(Halogen_Query_HalogenF.HaltHF.value)(function (st$prime) {
	                                        return new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Get(function ($191) {
	                                            return v1.value0.value0(Data_Function["const"](st$prime)($191));
	                                        }));
	                                    })(previewS($190)));
	                                })(Halogen_Query.get);
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.StateHF && v1.value0 instanceof Halogen_Query_StateF.Modify) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Modify(modifyState(v1.value0.value0), v1.value0.value1)));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.SubscribeHF(Control_Monad_Free_Trans.interpret(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(reviewQ))(Halogen_Query_EventSource.runEventSource(v1.value0)), v1.value1));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.QueryHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.QueryHF(v1.value0));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.RenderHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderHF(v1.value0, v1.value1));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                                return Data_Function.apply(Control_Monad_Free.liftF)(new Halogen_Query_HalogenF.RenderPendingHF(v1.value0));
	                            };
	                            if (v1 instanceof Halogen_Query_HalogenF.HaltHF) {
	                                return Control_Monad_Free.liftF(Halogen_Query_HalogenF.HaltHF.value);
	                            };
	                            throw new Error("Failed pattern match at Halogen.Component line 554, column 3 - line 555, column 90: " + [ v1.constructor.name ]);
	                        };
	                        return {
	                            render: function (st) {
	                                return Data_Maybe.maybe(emptyResult(st))(render$prime)(previewS(st));
	                            }, 
	                            "eval": function ($192) {
	                                return Data_Maybe.maybe(Control_Monad_Free.liftF(Halogen_Query_HalogenF.HaltHF.value))(function ($193) {
	                                    return Control_Monad_Free.foldFree(Control_Monad_Free.freeMonadRec)(go)(v["eval"]($193));
	                                })(previewQ($192));
	                            }, 
	                            initializer: Data_Functor.map(Data_Maybe.functorMaybe)(reviewQ)(v.initializer), 
	                            finalizers: function ($194) {
	                                return Data_Maybe.maybe([  ])(v.finalizers)(previewS($194));
	                            }
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var transformChild = function (dictFunctor) {
	    return function (i) {
	        return transform(dictFunctor)(Halogen_Component_ChildPath.injState(i))(Halogen_Component_ChildPath.prjState(i))(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component_ChildPath.prjQuery(i));
	    };
	};
	var component = function (spec) {
	    return lifecycleComponent({
	        render: spec.render, 
	        "eval": spec["eval"], 
	        initializer: Data_Maybe.Nothing.value, 
	        finalizer: Data_Maybe.Nothing.value
	    });
	};
	var childSlots = function (dictFunctor) {
	    return function (dictOrd) {
	        return Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Data_Map.keys(v.children));
	        });
	    };
	};
	var bracketQuery = function (f) {
	    return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderPendingHF(Control_Category.id(Control_Category.categoryFn))))(function (v) {
	        return Control_Bind.bind(Control_Monad_Free.freeBind)((function () {
	            if (v instanceof Data_Maybe.Just && v.value0 instanceof Halogen_Query_HalogenF.Pending) {
	                return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderHF(Data_Maybe.Nothing.value, Data_Unit.unit));
	            };
	            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(Data_Unit.unit);
	        })())(function () {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(f)(function (v1) {
	                return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderPendingHF(Control_Category.id(Control_Category.categoryFn))))(function (v2) {
	                    return Control_Bind.bind(Control_Monad_Free.freeBind)(Data_Foldable.for_(Control_Monad_Free.freeApplicative)(Data_Foldable.foldableMaybe)(v)(function (v3) {
	                        return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.RenderHF(new Data_Maybe.Just(Halogen_Query_HalogenF.Deferred.value), Data_Unit.unit));
	                    }))(function () {
	                        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v1);
	                    });
	                });
	            });
	        });
	    });
	};
	var mkQueries$prime = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (dictOrd1) {
	            return function (i) {
	                return function (q) {
	                    var mkChildQuery = function (v) {
	                        return Data_Traversable["for"](Control_Monad_Free.freeApplicative)(Data_Traversable.traversableMaybe)(Halogen_Component_ChildPath.prjSlot(i)(v.value0))(function (p) {
	                            return Data_Functor.map(Control_Monad_Free.freeFunctor)(Data_Tuple.Tuple.create(p))(Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(mapStateFChild(dictOrd)(v.value0))(ChildF.create(v.value0))(Control_Category.id(Control_Category.categoryFn)))(queryComponent(v.value1.component)(Halogen_Component_ChildPath.injQuery(i)(q))));
	                        });
	                    };
	                    return bracketQuery(Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	                        return Data_Functor.map(Control_Monad_Free.freeFunctor)(function ($195) {
	                            return Data_Map.fromList(dictOrd1)(Data_List.catMaybes($195));
	                        })(Data_Traversable.traverse(Data_List.traversableList)(Control_Monad_Free.freeApplicative)(mkChildQuery)(Data_Map.toList(v.children)));
	                    }));
	                };
	            };
	        };
	    };
	};
	var mkQueries = function (dictFunctor) {
	    return function (dictOrd) {
	        return mkQueries$prime(dictFunctor)(dictOrd)(dictOrd)(new Halogen_Component_ChildPath.ChildPath(function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return Control_Category.id(Control_Category.categoryFn);
	            };
	        }));
	    };
	};
	var queryAll = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (q) {
	            return liftQuery(mkQueries(dictFunctor)(dictOrd)(q));
	        };
	    };
	};
	var queryAll$prime = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (dictOrd1) {
	            return function (i) {
	                return function (q) {
	                    return liftQuery(mkQueries$prime(dictFunctor)(dictOrd1)(dictOrd)(i)(q));
	                };
	            };
	        };
	    };
	};
	var mkQuery = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (p) {
	            return function (q) {
	                return bracketQuery(Control_Bind.bind(Control_Monad_Free.freeBind)(Halogen_Query.get)(function (v) {
	                    return Data_Traversable["for"](Control_Monad_Free.freeApplicative)(Data_Traversable.traversableMaybe)(Data_Map.lookup(dictOrd)(p)(v.children))(function (child) {
	                        return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(mapStateFChild(dictOrd)(p))(ChildF.create(p))(Control_Category.id(Control_Category.categoryFn)))(queryComponent(child.component)(q));
	                    });
	                }));
	            };
	        };
	    };
	};
	var mkQuery$prime = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (i) {
	            return function (p) {
	                return function (q) {
	                    return mkQuery(dictFunctor)(dictOrd)(Halogen_Component_ChildPath.injSlot(i)(p))(Halogen_Component_ChildPath.injQuery(i)(q));
	                };
	            };
	        };
	    };
	};
	var query$prime = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (i) {
	            return function (p) {
	                return function (q) {
	                    return liftQuery(mkQuery$prime(dictFunctor)(dictOrd)(i)(p)(q));
	                };
	            };
	        };
	    };
	};
	var query = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (p) {
	            return function (q) {
	                return liftQuery(mkQuery(dictFunctor)(dictOrd)(p)(q));
	            };
	        };
	    };
	};
	var queryChild = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (v) {
	            return Control_Bind.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.transformHF(dictFunctor)(Control_Category.id(Control_Category.categoryFn))(Data_Functor_Coproduct.right)(Control_Category.id(Control_Category.categoryFn)))(mkQuery(dictFunctor)(dictOrd)(v.value0)(v.value1)))(Data_Maybe.maybe(Control_Monad_Free.liftF(Halogen_Query_HalogenF.HaltHF.value))(Control_Applicative.pure(Control_Monad_Free.freeApplicative)));
	        };
	    };
	};
	var lifecycleParentComponent = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (spec) {
	            var $$eval = Data_Functor_Coproduct.coproduct(queryParent(dictFunctor)(spec["eval"]))((function () {
	                if (spec.peek instanceof Data_Maybe.Nothing) {
	                    return queryChild(dictFunctor)(dictOrd);
	                };
	                if (spec.peek instanceof Data_Maybe.Just) {
	                    return function (q) {
	                        return Control_Apply.applyFirst(Control_Monad_Free.freeApply)(queryChild(dictFunctor)(dictOrd)(q))(queryParent(dictFunctor)(spec.peek.value0)(q));
	                    };
	                };
	                throw new Error("Failed pattern match at Halogen.Component line 205, column 10 - line 207, column 58: " + [ spec.peek.constructor.name ]);
	            })());
	            return {
	                render: renderParent(dictOrd)(spec.render), 
	                "eval": $$eval, 
	                initializer: Data_Functor.map(Data_Maybe.functorMaybe)(Data_Functor_Coproduct.left)(spec.initializer), 
	                finalizers: parentFinalizers($$eval)(spec.finalizer)
	            };
	        };
	    };
	};
	var parentComponent = function (dictFunctor) {
	    return function (dictOrd) {
	        return function (spec) {
	            return lifecycleParentComponent(dictFunctor)(dictOrd)({
	                render: spec.render, 
	                "eval": spec["eval"], 
	                peek: spec.peek, 
	                initializer: Data_Maybe.Nothing.value, 
	                finalizer: Data_Maybe.Nothing.value
	            });
	        };
	    };
	};
	module.exports = {
	    ChildF: ChildF, 
	    SlotConstructor: SlotConstructor, 
	    childSlots: childSlots, 
	    component: component, 
	    finalizeComponent: finalizeComponent, 
	    initializeComponent: initializeComponent, 
	    interpret: interpret, 
	    lifecycleComponent: lifecycleComponent, 
	    lifecycleParentComponent: lifecycleParentComponent, 
	    liftQuery: liftQuery, 
	    mkQueries: mkQueries, 
	    "mkQueries'": mkQueries$prime, 
	    mkQuery: mkQuery, 
	    "mkQuery'": mkQuery$prime, 
	    parentComponent: parentComponent, 
	    parentState: parentState, 
	    query: query, 
	    "query'": query$prime, 
	    queryAll: queryAll, 
	    "queryAll'": queryAll$prime, 
	    queryComponent: queryComponent, 
	    renderComponent: renderComponent, 
	    runChildF: runChildF, 
	    transform: transform, 
	    transformChild: transformChild, 
	    functorChildF: functorChildF
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 178 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-free/src/Control/Monad/Free.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Data_CatList = __webpack_require__(/*! ./bower_components/purescript-catenable-lists/src/Data/CatList.purs */ 179);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Inject = __webpack_require__(/*! ./bower_components/purescript-inject/src/Data/Inject.purs */ 185);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var ExpF = function (x) {
	    return x;
	};
	var Free = (function () {
	    function Free(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Free.create = function (value0) {
	        return function (value1) {
	            return new Free(value0, value1);
	        };
	    };
	    return Free;
	})();
	var Return = (function () {
	    function Return(value0) {
	        this.value0 = value0;
	    };
	    Return.create = function (value0) {
	        return new Return(value0);
	    };
	    return Return;
	})();
	var Bind = (function () {
	    function Bind(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Bind.create = function (value0) {
	        return function (value1) {
	            return new Bind(value0, value1);
	        };
	    };
	    return Bind;
	})();
	var toView = function (__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        var runExpF = function (v2) {
	            return v2;
	        };
	        var concatF = function (v2) {
	            return function (r) {
	                return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
	            };
	        };
	        if (v.value0 instanceof Return) {
	            var $19 = Data_CatList.uncons(v.value1);
	            if ($19 instanceof Data_Maybe.Nothing) {
	                return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
	            };
	            if ($19 instanceof Data_Maybe.Just) {
	                var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($19.value0.value0)(v.value0.value0))($19.value0.value1));
	                v = __tco_v;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free line 145, column 7 - line 149, column 64: " + [ $19.constructor.name ]);
	        };
	        if (v.value0 instanceof Bind) {
	            return new Bind(v.value0.value0, function (a) {
	                return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
	            });
	        };
	        throw new Error("Failed pattern match at Control.Monad.Free line 143, column 3 - line 151, column 56: " + [ v.value0.constructor.name ]);
	    };
	};
	var runFreeM = function (dictFunctor) {
	    return function (dictMonadRec) {
	        return function (k) {
	            var go = function (f) {
	                var $28 = toView(f);
	                if ($28 instanceof Return) {
	                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($28.value0));
	                };
	                if ($28 instanceof Bind) {
	                    return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(k(Data_Functor.map(dictFunctor)($28.value1)($28.value0)));
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free line 131, column 10 - line 133, column 37: " + [ $28.constructor.name ]);
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	        };
	    };
	};
	var runFree = function (dictFunctor) {
	    return function (k) {
	        return function ($40) {
	            return Data_Identity.runIdentity(runFreeM(dictFunctor)(Control_Monad_Rec_Class.monadRecIdentity)(function ($41) {
	                return Data_Identity.Identity(k($41));
	            })($40));
	        };
	    };
	};
	var fromView = function (f) {
	    return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
	};
	var suspendF = function (dictApplicative) {
	    return function (f) {
	        return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(Control_Applicative.pure(dictApplicative)(f)), Unsafe_Coerce.unsafeCoerce));
	    };
	};
	var freeMonad = new Control_Monad.Monad(function () {
	    return freeApplicative;
	}, function () {
	    return freeBind;
	});
	var freeFunctor = new Data_Functor.Functor(function (k) {
	    return function (f) {
	        return Control_Bind.bindFlipped(freeBind)(function ($42) {
	            return Control_Applicative.pure(freeApplicative)(k($42));
	        })(f);
	    };
	});
	var freeBind = new Control_Bind.Bind(function () {
	    return freeApply;
	}, function (v) {
	    return function (k) {
	        return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
	    };
	});
	var freeApply = new Control_Apply.Apply(function () {
	    return freeFunctor;
	}, Control_Monad.ap(freeMonad));
	var freeApplicative = new Control_Applicative.Applicative(function () {
	    return freeApply;
	}, function ($43) {
	    return fromView(Return.create($43));
	});
	var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
	    return freeMonad;
	}, function (k) {
	    return function (a) {
	        return Control_Bind.bind(freeBind)(k(a))(Data_Either.either(Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k))(Control_Applicative.pure(freeApplicative)));
	    };
	});
	var liftF = function (f) {
	    return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($44) {
	        return Control_Applicative.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($44));
	    }));
	};
	var freeMonadTrans = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return liftF;
	});
	var liftFI = function (dictInject) {
	    return function (fa) {
	        return liftF(Data_Inject.inj(dictInject)(fa));
	    };
	};
	var foldFree = function (dictMonadRec) {
	    return function (k) {
	        var go = function (f) {
	            var $36 = toView(f);
	            if ($36 instanceof Return) {
	                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($36.value0));
	            };
	            if ($36 instanceof Bind) {
	                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($45) {
	                    return Data_Either.Left.create($36.value1($45));
	                })(k($36.value0));
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free line 111, column 10 - line 113, column 37: " + [ $36.constructor.name ]);
	        };
	        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	    };
	};
	var hoistFree = function (k) {
	    return foldFree(freeMonadRec)(function ($46) {
	        return liftF(k($46));
	    });
	};
	var injF = function (dictInject) {
	    return hoistFree(Data_Inject.inj(dictInject));
	};
	module.exports = {
	    foldFree: foldFree, 
	    hoistFree: hoistFree, 
	    injF: injF, 
	    liftF: liftF, 
	    liftFI: liftFI, 
	    runFree: runFree, 
	    runFreeM: runFreeM, 
	    suspendF: suspendF, 
	    freeFunctor: freeFunctor, 
	    freeBind: freeBind, 
	    freeApplicative: freeApplicative, 
	    freeApply: freeApply, 
	    freeMonad: freeMonad, 
	    freeMonadTrans: freeMonadTrans, 
	    freeMonadRec: freeMonadRec
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 179 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-catenable-lists/src/Data/CatList.purs ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_CatQueue = __webpack_require__(/*! ./bower_components/purescript-catenable-lists/src/Data/CatQueue.purs */ 180);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var CatNil = (function () {
	    function CatNil() {
	
	    };
	    CatNil.value = new CatNil();
	    return CatNil;
	})();
	var CatCons = (function () {
	    function CatCons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CatCons.create = function (value0) {
	        return function (value1) {
	            return new CatCons(value0, value1);
	        };
	    };
	    return CatCons;
	})();
	var showCatList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof CatNil) {
	            return "CatNil";
	        };
	        if (v instanceof CatCons) {
	            return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 113, column 3 - line 114, column 3: " + [ v.constructor.name ]);
	    });
	};
	var $$null = function (v) {
	    if (v instanceof CatNil) {
	        return true;
	    };
	    return false;
	};
	var link = function (v) {
	    return function (cat) {
	        if (v instanceof CatNil) {
	            return cat;
	        };
	        if (v instanceof CatCons) {
	            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
	        };
	        throw new Error("Failed pattern match at Data.CatList line 88, column 1 - line 88, column 22: " + [ v.constructor.name, cat.constructor.name ]);
	    };
	};
	var foldr = function (k) {
	    return function (b) {
	        return function (q) {
	            var foldl = function (__copy_v) {
	                return function (__copy_c) {
	                    return function (__copy_v1) {
	                        var v = __copy_v;
	                        var c = __copy_c;
	                        var v1 = __copy_v1;
	                        tco: while (true) {
	                            if (v1 instanceof Data_List.Nil) {
	                                return c;
	                            };
	                            if (v1 instanceof Data_List.Cons) {
	                                var __tco_v = v;
	                                var __tco_c = v(c)(v1.value0);
	                                var __tco_v1 = v1.value1;
	                                v = __tco_v;
	                                c = __tco_c;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            throw new Error("Failed pattern match at Data.CatList line 103, column 3 - line 103, column 22: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
	                        };
	                    };
	                };
	            };
	            var go = function (__copy_xs) {
	                return function (__copy_ys) {
	                    var xs = __copy_xs;
	                    var ys = __copy_ys;
	                    tco: while (true) {
	                        var $22 = Data_CatQueue.uncons(xs);
	                        if ($22 instanceof Data_Maybe.Nothing) {
	                            return foldl(function (x) {
	                                return function (i) {
	                                    return i(x);
	                                };
	                            })(b)(ys);
	                        };
	                        if ($22 instanceof Data_Maybe.Just) {
	                            var __tco_ys = new Data_List.Cons(k($22.value0.value0), ys);
	                            xs = $22.value0.value1;
	                            ys = __tco_ys;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.CatList line 98, column 14 - line 100, column 67: " + [ $22.constructor.name ]);
	                    };
	                };
	            };
	            return go(q)(Data_List.Nil.value);
	        };
	    };
	};
	var uncons = function (v) {
	    if (v instanceof CatNil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof CatCons) {
	        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
	            var $27 = Data_CatQueue["null"](v.value1);
	            if ($27) {
	                return CatNil.value;
	            };
	            if (!$27) {
	                return foldr(link)(CatNil.value)(v.value1);
	            };
	            throw new Error("Failed pattern match at Data.CatList line 80, column 39 - line 80, column 89: " + [ $27.constructor.name ]);
	        })()));
	    };
	    throw new Error("Failed pattern match at Data.CatList line 79, column 1 - line 79, column 24: " + [ v.constructor.name ]);
	};
	var empty = CatNil.value;
	var append = function (v) {
	    return function (v1) {
	        if (v1 instanceof CatNil) {
	            return v;
	        };
	        if (v instanceof CatNil) {
	            return v1;
	        };
	        return link(v)(v1);
	    };
	};
	var cons = function (a) {
	    return function (cat) {
	        return append(new CatCons(a, Data_CatQueue.empty))(cat);
	    };
	};
	var semigroupCatList = new Data_Semigroup.Semigroup(append);
	var monoidCatList = new Data_Monoid.Monoid(function () {
	    return semigroupCatList;
	}, CatNil.value);
	var snoc = function (cat) {
	    return function (a) {
	        return append(cat)(new CatCons(a, Data_CatQueue.empty));
	    };
	};
	module.exports = {
	    CatNil: CatNil, 
	    CatCons: CatCons, 
	    append: append, 
	    cons: cons, 
	    empty: empty, 
	    "null": $$null, 
	    snoc: snoc, 
	    uncons: uncons, 
	    semigroupCatList: semigroupCatList, 
	    monoidCatList: monoidCatList, 
	    showCatList: showCatList
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 180 */
/*!****************************************************************************!*\
  !*** ./bower_components/purescript-catenable-lists/src/Data/CatQueue.purs ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var CatQueue = (function () {
	    function CatQueue(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CatQueue.create = function (value0) {
	        return function (value1) {
	            return new CatQueue(value0, value1);
	        };
	    };
	    return CatQueue;
	})();
	var uncons = function (__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        if (v.value0 instanceof Data_List.Nil && v.value1 instanceof Data_List.Nil) {
	            return Data_Maybe.Nothing.value;
	        };
	        if (v.value0 instanceof Data_List.Nil) {
	            var __tco_v = new CatQueue(Data_List.reverse(v.value1), Data_List.Nil.value);
	            v = __tco_v;
	            continue tco;
	        };
	        if (v.value0 instanceof Data_List.Cons) {
	            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
	        };
	        throw new Error("Failed pattern match at Data.CatQueue line 51, column 1 - line 51, column 36: " + [ v.constructor.name ]);
	    };
	};
	var snoc = function (v) {
	    return function (a) {
	        return new CatQueue(v.value0, new Data_List.Cons(a, v.value1));
	    };
	};
	var showCatQueue = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(CatQueue " + (Data_Show.show(Data_List.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List.showList(dictShow))(v.value1) + ")")));
	    });
	};
	var $$null = function (v) {
	    if (v.value0 instanceof Data_List.Nil && v.value1 instanceof Data_List.Nil) {
	        return true;
	    };
	    return false;
	};
	var empty = new CatQueue(Data_List.Nil.value, Data_List.Nil.value);
	module.exports = {
	    CatQueue: CatQueue, 
	    empty: empty, 
	    "null": $$null, 
	    snoc: snoc, 
	    uncons: uncons, 
	    showCatQueue: showCatQueue
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 181 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-lists/src/Data/List.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Lazy = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Lazy.purs */ 132);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Generic = __webpack_require__(/*! ./bower_components/purescript-generics/src/Data/Generic.purs */ 182);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Unfoldable = __webpack_require__(/*! ./bower_components/purescript-unfoldable/src/Data/Unfoldable.purs */ 164);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Nil = (function () {
	    function Nil() {
	
	    };
	    Nil.value = new Nil();
	    return Nil;
	})();
	var Cons = (function () {
	    function Cons(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Cons.create = function (value0) {
	        return function (value1) {
	            return new Cons(value0, value1);
	        };
	    };
	    return Cons;
	})();
	var updateAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Cons) {
	                return new Data_Maybe.Just(new Cons(v1, v2.value1));
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(updateAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var uncons = function (v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just({
	            head: v.value0, 
	            tail: v.value1
	        });
	    };
	    throw new Error("Failed pattern match at Data.List line 251, column 1 - line 251, column 21: " + [ v.constructor.name ]);
	};
	var toUnfoldable = function (dictUnfoldable) {
	    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
	            return new Data_Tuple.Tuple(rec.head, rec.tail);
	        })(uncons(xs));
	    });
	};
	var tail = function (v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just(v.value1);
	    };
	    throw new Error("Failed pattern match at Data.List line 232, column 1 - line 232, column 19: " + [ v.constructor.name ]);
	};
	var span = function (v) {
	    return function (v1) {
	        if (v1 instanceof Cons && v(v1.value0)) {
	            var $138 = span(v)(v1.value1);
	            return {
	                init: new Cons(v1.value0, $138.init), 
	                rest: $138.rest
	            };
	        };
	        return {
	            init: Nil.value, 
	            rest: v1
	        };
	    };
	};
	var singleton = function (a) {
	    return new Cons(a, Nil.value);
	};
	var sortBy = function (cmp) {
	    var merge = function (v) {
	        return function (v1) {
	            if (v instanceof Cons && v1 instanceof Cons) {
	                if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
	                    return new Cons(v1.value0, merge(v)(v1.value1));
	                };
	                if (Data_Boolean.otherwise) {
	                    return new Cons(v.value0, merge(v.value1)(v1));
	                };
	            };
	            if (v instanceof Nil) {
	                return v1;
	            };
	            if (v1 instanceof Nil) {
	                return v;
	            };
	            throw new Error("Failed pattern match at Data.List line 456, column 3 - line 458, column 40: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	    var mergePairs = function (v) {
	        if (v instanceof Cons && v.value1 instanceof Cons) {
	            return new Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
	        };
	        return v;
	    };
	    var mergeAll = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Cons && v.value1 instanceof Nil) {
	                return v.value0;
	            };
	            var __tco_v = mergePairs(v);
	            v = __tco_v;
	            continue tco;
	        };
	    };
	    var sequences = function (v) {
	        if (v instanceof Cons && v.value1 instanceof Cons) {
	            if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
	                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
	            };
	            if (Data_Boolean.otherwise) {
	                return ascending(v.value1.value0)(Cons.create(v.value0))(v.value1.value1);
	            };
	        };
	        return singleton(v);
	    };
	    var descending = function (__copy_a) {
	        return function (__copy_as) {
	            return function (__copy_v) {
	                var a = __copy_a;
	                var as = __copy_as;
	                var v = __copy_v;
	                tco: while (true) {
	                    if (v instanceof Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                        var __tco_a = v.value0;
	                        var __tco_as = new Cons(a, as);
	                        var __tco_v = v.value1;
	                        a = __tco_a;
	                        as = __tco_as;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    return new Cons(new Cons(a, as), sequences(v));
	                };
	            };
	        };
	    };
	    var ascending = function (a) {
	        return function (as) {
	            return function (v) {
	                if (v instanceof Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
	                    return ascending(v.value0)(function (ys) {
	                        return as(new Cons(a, ys));
	                    })(v.value1);
	                };
	                return new Cons(Data_Function.apply(as)(singleton(a)), sequences(v));
	            };
	        };
	    };
	    return function ($385) {
	        return mergeAll(sequences($385));
	    };
	};
	var sort = function (dictOrd) {
	    return function (xs) {
	        return sortBy(Data_Ord.compare(dictOrd))(xs);
	    };
	};
	var showList = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        if (v instanceof Nil) {
	            return "Nil";
	        };
	        if (v instanceof Cons) {
	            return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(showList(dictShow))(v.value1) + ")")));
	        };
	        throw new Error("Failed pattern match at Data.List line 696, column 3 - line 697, column 3: " + [ v.constructor.name ]);
	    });
	};
	var semigroupList = new Data_Semigroup.Semigroup(function (v) {
	    return function (ys) {
	        if (v instanceof Nil) {
	            return ys;
	        };
	        if (v instanceof Cons) {
	            return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
	        };
	        throw new Error("Failed pattern match at Data.List line 719, column 3 - line 719, column 21: " + [ v.constructor.name, ys.constructor.name ]);
	    };
	});
	var reverse = (function () {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return acc;
	                };
	                if (v instanceof Cons) {
	                    var __tco_acc = new Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                throw new Error("Failed pattern match at Data.List line 346, column 1 - line 349, column 42: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Nil.value);
	})();
	var snoc = function (xs) {
	    return function (x) {
	        return reverse(new Cons(x, reverse(xs)));
	    };
	};
	var take = (function () {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            return function (__copy_v1) {
	                var acc = __copy_acc;
	                var v = __copy_v;
	                var v1 = __copy_v1;
	                tco: while (true) {
	                    if (v === 0) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Nil) {
	                        return reverse(acc);
	                    };
	                    if (v1 instanceof Cons) {
	                        var __tco_acc = new Cons(v1.value0, acc);
	                        var __tco_v = v - 1;
	                        var __tco_v1 = v1.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 474, column 1 - line 478, column 52: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
	                };
	            };
	        };
	    };
	    return go(Nil.value);
	})();
	var takeWhile = function (p) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Cons && p(v.value0)) {
	                    var __tco_acc = new Cons(v.value0, acc);
	                    var __tco_v = v.value1;
	                    acc = __tco_acc;
	                    v = __tco_v;
	                    continue tco;
	                };
	                return reverse(acc);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
	    return function (b) {
	        var go = function (__copy_source) {
	            return function (__copy_memo) {
	                var source = __copy_source;
	                var memo = __copy_memo;
	                tco: while (true) {
	                    var $192 = f(source);
	                    if ($192 instanceof Data_Maybe.Nothing) {
	                        return reverse(memo);
	                    };
	                    if ($192 instanceof Data_Maybe.Just) {
	                        var __tco_memo = new Cons($192.value0.value0, memo);
	                        source = $192.value0.value1;
	                        memo = __tco_memo;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 743, column 24 - line 745, column 57: " + [ $192.constructor.name ]);
	                };
	            };
	        };
	        return go(b)(Nil.value);
	    };
	});
	var zipWith = function (f) {
	    return function (xs) {
	        return function (ys) {
	            var go = function (v) {
	                return function (v1) {
	                    return function (acc) {
	                        if (v instanceof Nil) {
	                            return acc;
	                        };
	                        if (v1 instanceof Nil) {
	                            return acc;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            return Data_Function.apply(go(v.value1)(v1.value1))(new Cons(f(v.value0)(v1.value0), acc));
	                        };
	                        throw new Error("Failed pattern match at Data.List line 638, column 1 - line 642, column 63: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
	                    };
	                };
	            };
	            return Data_Function.apply(reverse)(go(xs)(ys)(Nil.value));
	        };
	    };
	};
	var zip = zipWith(Data_Tuple.Tuple.create);
	var range = function (start) {
	    return function (end) {
	        if (start === end) {
	            return singleton(start);
	        };
	        if (Data_Boolean.otherwise) {
	            var go = function (__copy_s) {
	                return function (__copy_e) {
	                    return function (__copy_step) {
	                        return function (__copy_rest) {
	                            var s = __copy_s;
	                            var e = __copy_e;
	                            var step = __copy_step;
	                            var rest = __copy_rest;
	                            tco: while (true) {
	                                if (s === e) {
	                                    return new Cons(s, rest);
	                                };
	                                if (Data_Boolean.otherwise) {
	                                    var __tco_s = s + step | 0;
	                                    var __tco_e = e;
	                                    var __tco_step = step;
	                                    var __tco_rest = new Cons(s, rest);
	                                    s = __tco_s;
	                                    e = __tco_e;
	                                    step = __tco_step;
	                                    rest = __tco_rest;
	                                    continue tco;
	                                };
	                                throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
	                            };
	                        };
	                    };
	                };
	            };
	            return go(end)(start)((function () {
	                var $209 = start > end;
	                if ($209) {
	                    return 1;
	                };
	                if (!$209) {
	                    return -1;
	                };
	                throw new Error("Failed pattern match at Data.List line 139, column 45 - line 139, column 74: " + [ $209.constructor.name ]);
	            })())(Nil.value);
	        };
	        throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 68: " + [ start.constructor.name, end.constructor.name ]);
	    };
	};
	var $$null = function (v) {
	    if (v instanceof Nil) {
	        return true;
	    };
	    return false;
	};
	var monoidList = new Data_Monoid.Monoid(function () {
	    return semigroupList;
	}, Nil.value);
	var mapWithIndex = function (f) {
	    return function (lst) {
	        var go = function (v) {
	            return function (v1) {
	                return function (acc) {
	                    if (v1 instanceof Nil) {
	                        return acc;
	                    };
	                    if (v1 instanceof Cons) {
	                        return Data_Function.apply(go(v + 1 | 0)(v1.value1))(new Cons(f(v1.value0)(v), acc));
	                    };
	                    throw new Error("Failed pattern match at Data.List line 412, column 1 - line 415, column 56: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
	                };
	            };
	        };
	        return Data_Function.apply(reverse)(go(0)(lst)(Nil.value));
	    };
	};
	var mapMaybe = function (f) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Cons) {
	                    var $218 = f(v.value0);
	                    if ($218 instanceof Data_Maybe.Nothing) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if ($218 instanceof Data_Maybe.Just) {
	                        var __tco_acc = new Cons($218.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 400, column 5 - line 402, column 35: " + [ $218.constructor.name ]);
	                };
	                throw new Error("Failed pattern match at Data.List line 396, column 1 - line 402, column 35: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var some = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
	                return many(dictAlternative)(dictLazy)(v);
	            }));
	        };
	    };
	};
	var many = function (dictAlternative) {
	    return function (dictLazy) {
	        return function (v) {
	            return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Nil.value));
	        };
	    };
	};
	var last = function (__copy_v) {
	    var v = __copy_v;
	    tco: while (true) {
	        if (v instanceof Cons && v.value1 instanceof Nil) {
	            return new Data_Maybe.Just(v.value0);
	        };
	        if (v instanceof Cons) {
	            var __tco_v = v.value1;
	            v = __tco_v;
	            continue tco;
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var insertBy = function (v) {
	    return function (x) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return new Cons(x, Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                var $231 = v(x)(v1.value0);
	                if ($231 instanceof Data_Ordering.GT) {
	                    return new Cons(v1.value0, insertBy(v)(x)(v1.value1));
	                };
	                return new Cons(x, v1);
	            };
	            throw new Error("Failed pattern match at Data.List line 203, column 1 - line 203, column 30: " + [ v.constructor.name, x.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var insertAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0) {
	                return new Data_Maybe.Just(new Cons(v1, v2));
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(insertAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var insert = function (dictOrd) {
	    return insertBy(Data_Ord.compare(dictOrd));
	};
	var init = function (v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    var go = function (v1) {
	        return function (acc) {
	            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
	                return acc;
	            };
	            if (v1 instanceof Cons) {
	                return Data_Function.apply(go(v1.value1))(new Cons(v1.value0, acc));
	            };
	            return acc;
	        };
	    };
	    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(reverse)(go(v)(Nil.value)));
	};
	var index = function (__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v instanceof Nil) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Cons && v1 === 0) {
	                return new Data_Maybe.Just(v.value0);
	            };
	            if (v instanceof Cons) {
	                var __tco_v = v.value1;
	                var __tco_v1 = v1 - 1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 262, column 1 - line 262, column 22: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var head = function (v) {
	    if (v instanceof Nil) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Cons) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    throw new Error("Failed pattern match at Data.List line 217, column 1 - line 217, column 19: " + [ v.constructor.name ]);
	};
	var transpose = function (v) {
	    if (v instanceof Nil) {
	        return Nil.value;
	    };
	    if (v instanceof Cons && v.value0 instanceof Nil) {
	        return transpose(v.value1);
	    };
	    if (v instanceof Cons && v.value0 instanceof Cons) {
	        return new Cons(new Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
	    };
	    throw new Error("Failed pattern match at Data.List line 675, column 1 - line 675, column 20: " + [ v.constructor.name ]);
	};
	var groupBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            var $264 = span(v(v1.value0))(v1.value1);
	            return new Cons(new Cons(v1.value0, $264.init), groupBy(v)($264.rest));
	        };
	        throw new Error("Failed pattern match at Data.List line 548, column 1 - line 548, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var group = function (dictEq) {
	    return groupBy(Data_Eq.eq(dictEq));
	};
	var group$prime = function (dictOrd) {
	    return function ($386) {
	        return group(dictOrd["__superclass_Data.Eq.Eq_0"]())(sort(dictOrd)($386));
	    };
	};
	var genericList = function (dictGeneric) {
	    return new Data_Generic.Generic(function (v) {
	        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Nil" && v.value1.length === 0)) {
	            return new Data_Maybe.Just(Nil.value);
	        };
	        if (v instanceof Data_Generic.SProd && (v.value0 === "Data.List.Cons" && v.value1.length === 2)) {
	            return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Cons.create))(Data_Generic.fromSpine(dictGeneric)(v.value1[0](Data_Unit.unit))))(Data_Generic.fromSpine(genericList(dictGeneric))(v.value1[1](Data_Unit.unit)));
	        };
	        return Data_Maybe.Nothing.value;
	    }, function ($dollarq) {
	        return new Data_Generic.SigProd("Data.List.List", [ {
	            sigConstructor: "Data.List.Nil", 
	            sigValues: [  ]
	        }, {
	            sigConstructor: "Data.List.Cons", 
	            sigValues: [ function ($dollarq1) {
	                return Data_Generic.toSignature(dictGeneric)(Data_Generic.anyProxy);
	            }, function ($dollarq1) {
	                return Data_Generic.toSignature(genericList(dictGeneric))(Data_Generic.anyProxy);
	            } ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Nil) {
	            return new Data_Generic.SProd("Data.List.Nil", [  ]);
	        };
	        if (v instanceof Cons) {
	            return new Data_Generic.SProd("Data.List.Cons", [ function ($dollarq) {
	                return Data_Generic.toSpine(dictGeneric)(v.value0);
	            }, function ($dollarq) {
	                return Data_Generic.toSpine(genericList(dictGeneric))(v.value1);
	            } ]);
	        };
	        throw new Error("Failed pattern match: " + [ v.constructor.name ]);
	    });
	};
	var functorList = new Data_Functor.Functor(function (f) {
	    return function (lst) {
	        var go = function (v) {
	            return function (acc) {
	                if (v instanceof Nil) {
	                    return acc;
	                };
	                if (v instanceof Cons) {
	                    return Data_Function.apply(go(v.value1))(new Cons(f(v.value0), acc));
	                };
	                throw new Error("Failed pattern match at Data.List line 726, column 3 - line 729, column 48: " + [ v.constructor.name, acc.constructor.name ]);
	            };
	        };
	        return Data_Function.apply(reverse)(go(lst)(Nil.value));
	    };
	});
	var fromFoldable = function (dictFoldable) {
	    return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
	};
	var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return Data_Foldable.foldl(foldableList)(function (acc) {
	            return function ($387) {
	                return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($387));
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	}, (function () {
	    var go = function (__copy_v) {
	        return function (__copy_b) {
	            return function (__copy_v1) {
	                var v = __copy_v;
	                var b = __copy_b;
	                var v1 = __copy_v1;
	                tco: while (true) {
	                    if (v1 instanceof Nil) {
	                        return b;
	                    };
	                    if (v1 instanceof Cons) {
	                        var __tco_v = v;
	                        var __tco_b = v(b)(v1.value0);
	                        var __tco_v1 = v1.value1;
	                        v = __tco_v;
	                        b = __tco_b;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.List line 734, column 3 - line 737, column 49: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
	                };
	            };
	        };
	    };
	    return go;
	})(), function (v) {
	    return function (b) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return b;
	            };
	            if (v1 instanceof Cons) {
	                return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 732, column 3 - line 732, column 20: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var length = Data_Foldable.foldl(foldableList)(function (acc) {
	    return function (v) {
	        return acc + 1 | 0;
	    };
	})(0);
	var traversableList = new Data_Traversable.Traversable(function () {
	    return foldableList;
	}, function () {
	    return functorList;
	}, function (dictApplicative) {
	    return function (v) {
	        if (v instanceof Nil) {
	            return Control_Applicative.pure(dictApplicative)(Nil.value);
	        };
	        if (v instanceof Cons) {
	            return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v.value0))(Data_Traversable.sequence(traversableList)(dictApplicative)(v.value1));
	        };
	        throw new Error("Failed pattern match at Data.List line 750, column 3 - line 750, column 26: " + [ v.constructor.name ]);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return Control_Applicative.pure(dictApplicative)(Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Cons.create)(v(v1.value0)))(Data_Traversable.traverse(traversableList)(dictApplicative)(v)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 748, column 3 - line 748, column 28: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	});
	var zipWithA = function (dictApplicative) {
	    return function (f) {
	        return function (xs) {
	            return function (ys) {
	                return Data_Traversable.sequence(traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
	            };
	        };
	    };
	};
	var unzip = Data_Foldable.foldr(foldableList)(function (v) {
	    return function (v1) {
	        return new Data_Tuple.Tuple(new Cons(v.value0, v1.value0), new Cons(v.value1, v1.value1));
	    };
	})(new Data_Tuple.Tuple(Nil.value, Nil.value));
	var foldM = function (dictMonad) {
	    return function (v) {
	        return function (a) {
	            return function (v1) {
	                if (v1 instanceof Nil) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(a);
	                };
	                if (v1 instanceof Cons) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(a)(v1.value0))(function (a$prime) {
	                        return foldM(dictMonad)(v)(a$prime)(v1.value1);
	                    });
	                };
	                throw new Error("Failed pattern match at Data.List line 686, column 1 - line 686, column 23: " + [ v.constructor.name, a.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	};
	var findIndex = function (fn) {
	    var go = function (__copy_v) {
	        return function (__copy_v1) {
	            var v = __copy_v;
	            var v1 = __copy_v1;
	            tco: while (true) {
	                if (v1 instanceof Cons) {
	                    if (fn(v1.value0)) {
	                        return new Data_Maybe.Just(v);
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_v = v + 1 | 0;
	                        var __tco_v1 = v1.value1;
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                };
	                if (v1 instanceof Nil) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.List line 282, column 3 - line 283, column 47: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	    return go(0);
	};
	var findLastIndex = function (fn) {
	    return function (xs) {
	        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
	            return length(xs) - 1 - v;
	        })(findIndex(fn)(reverse(xs)));
	    };
	};
	var filterM = function (dictMonad) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Nil) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Nil.value);
	            };
	            if (v1 instanceof Cons) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(v1.value0))(function (v2) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(filterM(dictMonad)(v)(v1.value1))(function (v3) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                            if (v2) {
	                                return new Cons(v1.value0, v3);
	                            };
	                            if (!v2) {
	                                return v3;
	                            };
	                            throw new Error("Failed pattern match at Data.List line 389, column 3 - line 389, column 37: " + [ v2.constructor.name ]);
	                        })());
	                    });
	                });
	            };
	            throw new Error("Failed pattern match at Data.List line 385, column 1 - line 385, column 25: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var filter = function (p) {
	    var go = function (__copy_acc) {
	        return function (__copy_v) {
	            var acc = __copy_acc;
	            var v = __copy_v;
	            tco: while (true) {
	                if (v instanceof Nil) {
	                    return reverse(acc);
	                };
	                if (v instanceof Cons) {
	                    if (p(v.value0)) {
	                        var __tco_acc = new Cons(v.value0, acc);
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                    if (Data_Boolean.otherwise) {
	                        var __tco_acc = acc;
	                        var __tco_v = v.value1;
	                        acc = __tco_acc;
	                        v = __tco_v;
	                        continue tco;
	                    };
	                };
	                throw new Error("Failed pattern match at Data.List line 369, column 1 - line 374, column 28: " + [ acc.constructor.name, v.constructor.name ]);
	            };
	        };
	    };
	    return go(Nil.value);
	};
	var intersectBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v1 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v2 instanceof Nil) {
	                return Nil.value;
	            };
	            return filter(function (x) {
	                return Data_Foldable.any(foldableList)(Data_BooleanAlgebra.booleanAlgebraBoolean)(v(x))(v2);
	            })(v1);
	        };
	    };
	};
	var intersect = function (dictEq) {
	    return intersectBy(Data_Eq.eq(dictEq));
	};
	var nubBy = function (v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            return new Cons(v1.value0, nubBy(v)(filter(function (y) {
	                return !v(v1.value0)(y);
	            })(v1.value1)));
	        };
	        throw new Error("Failed pattern match at Data.List line 567, column 1 - line 567, column 22: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var nub = function (dictEq) {
	    return nubBy(Data_Eq.eq(dictEq));
	};
	var eqList = function (dictEq) {
	    return new Data_Eq.Eq(function (xs) {
	        return function (ys) {
	            var go = function (v) {
	                return function (v1) {
	                    return function (v2) {
	                        if (!v2) {
	                            return false;
	                        };
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            return v2;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            return Data_Function.apply(go(v.value1)(v1.value1))(v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0));
	                        };
	                        return false;
	                    };
	                };
	            };
	            return go(xs)(ys)(true);
	        };
	    });
	};
	var ordList = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqList(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (xs) {
	        return function (ys) {
	            var go = function (__copy_v) {
	                return function (__copy_v1) {
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    tco: while (true) {
	                        if (v instanceof Nil && v1 instanceof Nil) {
	                            return Data_Ordering.EQ.value;
	                        };
	                        if (v instanceof Nil) {
	                            return Data_Ordering.LT.value;
	                        };
	                        if (v1 instanceof Nil) {
	                            return Data_Ordering.GT.value;
	                        };
	                        if (v instanceof Cons && v1 instanceof Cons) {
	                            var $343 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);
	                            if ($343 instanceof Data_Ordering.EQ) {
	                                var __tco_v = v.value1;
	                                var __tco_v1 = v1.value1;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            return $343;
	                        };
	                        throw new Error("Failed pattern match at Data.List line 708, column 3 - line 716, column 23: " + [ v.constructor.name, v1.constructor.name ]);
	                    };
	                };
	            };
	            return go(xs)(ys);
	        };
	    });
	};
	var elemLastIndex = function (dictEq) {
	    return function (x) {
	        return findLastIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var elemIndex = function (dictEq) {
	    return function (x) {
	        return findIndex(function (v) {
	            return Data_Eq.eq(dictEq)(v)(x);
	        });
	    };
	};
	var dropWhile = function (p) {
	    var go = function (__copy_v) {
	        var v = __copy_v;
	        tco: while (true) {
	            if (v instanceof Cons && p(v.value0)) {
	                var __tco_v = v.value1;
	                v = __tco_v;
	                continue tco;
	            };
	            return v;
	        };
	    };
	    return go;
	};
	var drop = function (__copy_v) {
	    return function (__copy_v1) {
	        var v = __copy_v;
	        var v1 = __copy_v1;
	        tco: while (true) {
	            if (v === 0) {
	                return v1;
	            };
	            if (v1 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v1 instanceof Cons) {
	                var __tco_v = v - 1;
	                var __tco_v1 = v1.value1;
	                v = __tco_v;
	                v1 = __tco_v1;
	                continue tco;
	            };
	            throw new Error("Failed pattern match at Data.List line 493, column 1 - line 493, column 15: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var slice = function (start) {
	    return function (end) {
	        return function (xs) {
	            return take(end - start)(drop(start)(xs));
	        };
	    };
	};
	var deleteBy = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Nil) {
	                return Nil.value;
	            };
	            if (v2 instanceof Cons && v(v1)(v2.value0)) {
	                return v2.value1;
	            };
	            if (v2 instanceof Cons) {
	                return new Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
	            };
	            throw new Error("Failed pattern match at Data.List line 594, column 1 - line 594, column 23: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var unionBy = function (eq) {
	    return function (xs) {
	        return function (ys) {
	            return Data_Semigroup.append(semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Data_Function.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
	        };
	    };
	};
	var union = function (dictEq) {
	    return unionBy(Data_Eq.eq(dictEq));
	};
	var deleteAt = function (v) {
	    return function (v1) {
	        if (v === 0 && v1 instanceof Cons) {
	            return new Data_Maybe.Just(v1.value1);
	        };
	        if (v1 instanceof Cons) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v1.value0))(deleteAt(v - 1)(v1.value1));
	        };
	        return Data_Maybe.Nothing.value;
	    };
	};
	var $$delete = function (dictEq) {
	    return deleteBy(Data_Eq.eq(dictEq));
	};
	var difference = function (dictEq) {
	    return Data_Foldable.foldl(foldableList)(Data_Function.flip($$delete(dictEq)));
	};
	var concatMap = function (v) {
	    return function (v1) {
	        if (v1 instanceof Nil) {
	            return Nil.value;
	        };
	        if (v1 instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(v(v1.value0))(concatMap(v)(v1.value1));
	        };
	        throw new Error("Failed pattern match at Data.List line 362, column 1 - line 362, column 22: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
	var applyList = new Control_Apply.Apply(function () {
	    return functorList;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof Nil) {
	            return Nil.value;
	        };
	        if (v instanceof Cons) {
	            return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
	        };
	        throw new Error("Failed pattern match at Data.List line 754, column 3 - line 754, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var bindList = new Control_Bind.Bind(function () {
	    return applyList;
	}, Data_Function.flip(concatMap));
	var concat = function (v) {
	    return Control_Bind.bind(bindList)(v)(Control_Category.id(Control_Category.categoryFn));
	};
	var applicativeList = new Control_Applicative.Applicative(function () {
	    return applyList;
	}, function (a) {
	    return new Cons(a, Nil.value);
	});
	var monadList = new Control_Monad.Monad(function () {
	    return applicativeList;
	}, function () {
	    return bindList;
	});
	var alterAt = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v === 0 && v2 instanceof Cons) {
	                return Data_Function.apply(Data_Maybe.Just.create)((function () {
	                    var $379 = v1(v2.value0);
	                    if ($379 instanceof Data_Maybe.Nothing) {
	                        return v2.value1;
	                    };
	                    if ($379 instanceof Data_Maybe.Just) {
	                        return new Cons($379.value0, v2.value1);
	                    };
	                    throw new Error("Failed pattern match at Data.List line 331, column 27 - line 334, column 26: " + [ $379.constructor.name ]);
	                })());
	            };
	            if (v2 instanceof Cons) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Cons.create(v2.value0))(alterAt(v - 1)(v1)(v2.value1));
	            };
	            return Data_Maybe.Nothing.value;
	        };
	    };
	};
	var modifyAt = function (n) {
	    return function (f) {
	        return alterAt(n)(function ($388) {
	            return Data_Maybe.Just.create(f($388));
	        });
	    };
	};
	var altList = new Control_Alt.Alt(function () {
	    return functorList;
	}, Data_Semigroup.append(semigroupList));
	var plusList = new Control_Plus.Plus(function () {
	    return altList;
	}, Nil.value);
	var alternativeList = new Control_Alternative.Alternative(function () {
	    return applicativeList;
	}, function () {
	    return plusList;
	});
	var monadZeroList = new Control_MonadZero.MonadZero(function () {
	    return alternativeList;
	}, function () {
	    return monadList;
	});
	var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
	    return monadZeroList;
	});
	module.exports = {
	    Nil: Nil, 
	    Cons: Cons, 
	    alterAt: alterAt, 
	    catMaybes: catMaybes, 
	    concat: concat, 
	    concatMap: concatMap, 
	    "delete": $$delete, 
	    deleteAt: deleteAt, 
	    deleteBy: deleteBy, 
	    difference: difference, 
	    drop: drop, 
	    dropWhile: dropWhile, 
	    elemIndex: elemIndex, 
	    elemLastIndex: elemLastIndex, 
	    filter: filter, 
	    filterM: filterM, 
	    findIndex: findIndex, 
	    findLastIndex: findLastIndex, 
	    foldM: foldM, 
	    fromFoldable: fromFoldable, 
	    group: group, 
	    "group'": group$prime, 
	    groupBy: groupBy, 
	    head: head, 
	    index: index, 
	    init: init, 
	    insert: insert, 
	    insertAt: insertAt, 
	    insertBy: insertBy, 
	    intersect: intersect, 
	    intersectBy: intersectBy, 
	    last: last, 
	    length: length, 
	    many: many, 
	    mapMaybe: mapMaybe, 
	    mapWithIndex: mapWithIndex, 
	    modifyAt: modifyAt, 
	    nub: nub, 
	    nubBy: nubBy, 
	    "null": $$null, 
	    range: range, 
	    reverse: reverse, 
	    singleton: singleton, 
	    slice: slice, 
	    snoc: snoc, 
	    some: some, 
	    sort: sort, 
	    sortBy: sortBy, 
	    span: span, 
	    tail: tail, 
	    take: take, 
	    takeWhile: takeWhile, 
	    toUnfoldable: toUnfoldable, 
	    transpose: transpose, 
	    uncons: uncons, 
	    union: union, 
	    unionBy: unionBy, 
	    unzip: unzip, 
	    updateAt: updateAt, 
	    zip: zip, 
	    zipWith: zipWith, 
	    zipWithA: zipWithA, 
	    genericList: genericList, 
	    showList: showList, 
	    eqList: eqList, 
	    ordList: ordList, 
	    semigroupList: semigroupList, 
	    monoidList: monoidList, 
	    functorList: functorList, 
	    foldableList: foldableList, 
	    unfoldableList: unfoldableList, 
	    traversableList: traversableList, 
	    applyList: applyList, 
	    applicativeList: applicativeList, 
	    bindList: bindList, 
	    monadList: monadList, 
	    altList: altList, 
	    plusList: plusList, 
	    alternativeList: alternativeList, 
	    monadZeroList: monadZeroList, 
	    monadPlusList: monadPlusList
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 182 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-generics/src/Data/Generic.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-generics/src/Data/Generic.js */ 183);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_String = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String.purs */ 157);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Type_Proxy = __webpack_require__(/*! ./bower_components/purescript-proxy/src/Type/Proxy.purs */ 184);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var SProd = (function () {
	    function SProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SProd.create = function (value0) {
	        return function (value1) {
	            return new SProd(value0, value1);
	        };
	    };
	    return SProd;
	})();
	var SRecord = (function () {
	    function SRecord(value0) {
	        this.value0 = value0;
	    };
	    SRecord.create = function (value0) {
	        return new SRecord(value0);
	    };
	    return SRecord;
	})();
	var SNumber = (function () {
	    function SNumber(value0) {
	        this.value0 = value0;
	    };
	    SNumber.create = function (value0) {
	        return new SNumber(value0);
	    };
	    return SNumber;
	})();
	var SBoolean = (function () {
	    function SBoolean(value0) {
	        this.value0 = value0;
	    };
	    SBoolean.create = function (value0) {
	        return new SBoolean(value0);
	    };
	    return SBoolean;
	})();
	var SInt = (function () {
	    function SInt(value0) {
	        this.value0 = value0;
	    };
	    SInt.create = function (value0) {
	        return new SInt(value0);
	    };
	    return SInt;
	})();
	var SString = (function () {
	    function SString(value0) {
	        this.value0 = value0;
	    };
	    SString.create = function (value0) {
	        return new SString(value0);
	    };
	    return SString;
	})();
	var SChar = (function () {
	    function SChar(value0) {
	        this.value0 = value0;
	    };
	    SChar.create = function (value0) {
	        return new SChar(value0);
	    };
	    return SChar;
	})();
	var SArray = (function () {
	    function SArray(value0) {
	        this.value0 = value0;
	    };
	    SArray.create = function (value0) {
	        return new SArray(value0);
	    };
	    return SArray;
	})();
	var SUnit = (function () {
	    function SUnit() {
	
	    };
	    SUnit.value = new SUnit();
	    return SUnit;
	})();
	var SigProd = (function () {
	    function SigProd(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SigProd.create = function (value0) {
	        return function (value1) {
	            return new SigProd(value0, value1);
	        };
	    };
	    return SigProd;
	})();
	var SigRecord = (function () {
	    function SigRecord(value0) {
	        this.value0 = value0;
	    };
	    SigRecord.create = function (value0) {
	        return new SigRecord(value0);
	    };
	    return SigRecord;
	})();
	var SigNumber = (function () {
	    function SigNumber() {
	
	    };
	    SigNumber.value = new SigNumber();
	    return SigNumber;
	})();
	var SigBoolean = (function () {
	    function SigBoolean() {
	
	    };
	    SigBoolean.value = new SigBoolean();
	    return SigBoolean;
	})();
	var SigInt = (function () {
	    function SigInt() {
	
	    };
	    SigInt.value = new SigInt();
	    return SigInt;
	})();
	var SigString = (function () {
	    function SigString() {
	
	    };
	    SigString.value = new SigString();
	    return SigString;
	})();
	var SigChar = (function () {
	    function SigChar() {
	
	    };
	    SigChar.value = new SigChar();
	    return SigChar;
	})();
	var SigArray = (function () {
	    function SigArray(value0) {
	        this.value0 = value0;
	    };
	    SigArray.create = function (value0) {
	        return new SigArray(value0);
	    };
	    return SigArray;
	})();
	var SigUnit = (function () {
	    function SigUnit() {
	
	    };
	    SigUnit.value = new SigUnit();
	    return SigUnit;
	})();
	var Generic = function (fromSpine, toSignature, toSpine) {
	    this.fromSpine = fromSpine;
	    this.toSignature = toSignature;
	    this.toSpine = toSpine;
	};
	var toSpine = function (dict) {
	    return dict.toSpine;
	};
	var toSignature = function (dict) {
	    return dict.toSignature;
	};
	var showArray = function (f) {
	    return function (xs) {
	        return "[ " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_Functor.map(Data_Functor.functorArray)(f)(xs)) + " ]");
	    };
	};
	var orderingToInt = function (v) {
	    if (v instanceof Data_Ordering.EQ) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.LT) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return -1;
	    };
	    throw new Error("Failed pattern match at Data.Generic line 427, column 17 - line 430, column 10: " + [ v.constructor.name ]);
	};
	var genericUnit = new Generic(function (v) {
	    if (v instanceof SUnit) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigUnit.value;
	}, function (v) {
	    return SUnit.value;
	});
	var genericString = new Generic(function (v) {
	    if (v instanceof SString) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigString.value;
	}, SString.create);
	var genericOrdering = new Generic(function (v) {
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.LT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.EQ" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof SProd && (v.value0 === "Data.Ordering.GT" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return new SigProd("Data.Ordering.Ordering", [ {
	        sigConstructor: "Data.Ordering.LT", 
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.EQ", 
	        sigValues: [  ]
	    }, {
	        sigConstructor: "Data.Ordering.GT", 
	        sigValues: [  ]
	    } ]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new SProd("Data.Ordering.LT", [  ]);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new SProd("Data.Ordering.EQ", [  ]);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new SProd("Data.Ordering.GT", [  ]);
	    };
	    throw new Error("Failed pattern match at Data.Generic line 150, column 13 - line 153, column 38: " + [ v.constructor.name ]);
	});
	var genericNumber = new Generic(function (v) {
	    if (v instanceof SNumber) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigNumber.value;
	}, SNumber.create);
	var genericInt = new Generic(function (v) {
	    if (v instanceof SInt) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigInt.value;
	}, SInt.create);
	var genericChar = new Generic(function (v) {
	    if (v instanceof SChar) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigChar.value;
	}, SChar.create);
	var genericBool = new Generic(function (v) {
	    if (v instanceof SBoolean) {
	        return new Data_Maybe.Just(v.value0);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    return SigBoolean.value;
	}, SBoolean.create);
	var fromSpine = function (dict) {
	    return dict.fromSpine;
	};
	var force = function (f) {
	    return f(Data_Unit.unit);
	};
	var genericArray = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SArray) {
	            return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function ($237) {
	                return fromSpine(dictGeneric)(force($237));
	            })(v.value0);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var lowerProxy = function (v) {
	            return (Type_Proxy["Proxy"]).value;
	        };
	        return new SigArray(function (v) {
	            return toSignature(dictGeneric)(lowerProxy(x));
	        });
	    }, function ($238) {
	        return SArray.create(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	            return function (v) {
	                return toSpine(dictGeneric)(x);
	            };
	        })($238));
	    });
	};
	var genericEither = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Either.Left" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	            };
	            if (v instanceof SProd && (v.value0 === "Data.Either.Right" && v.value1.length === 1)) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(fromSpine(dictGeneric1)(force(v.value1[0])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var rproxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            var lproxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            return new SigProd("Data.Either.Either", [ {
	                sigConstructor: "Data.Either.Left", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(lproxy(x));
	                } ]
	            }, {
	                sigConstructor: "Data.Either.Right", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric1)(rproxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return new SProd("Data.Either.Left", [ function (v1) {
	                    return toSpine(dictGeneric)(v.value0);
	                } ]);
	            };
	            if (v instanceof Data_Either.Right) {
	                return new SProd("Data.Either.Right", [ function (v1) {
	                    return toSpine(dictGeneric1)(v.value0);
	                } ]);
	            };
	            throw new Error("Failed pattern match at Data.Generic line 128, column 3 - line 128, column 64: " + [ v.constructor.name ]);
	        });
	    };
	};
	var genericMaybe = function (dictGeneric) {
	    return new Generic(function (v) {
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Just" && v.value1.length === 1)) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(fromSpine(dictGeneric)(force(v.value1[0])));
	        };
	        if (v instanceof SProd && (v.value0 === "Data.Maybe.Nothing" && v.value1.length === 0)) {
	            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Maybe.Nothing.value);
	        };
	        return Data_Maybe.Nothing.value;
	    }, function (x) {
	        var mbProxy = function (v) {
	            return (Type_Proxy["Proxy"]).value;
	        };
	        return new SigProd("Data.Maybe.Maybe", [ {
	            sigConstructor: "Data.Maybe.Just", 
	            sigValues: [ function (v) {
	                return toSignature(dictGeneric)(mbProxy(x));
	            } ]
	        }, {
	            sigConstructor: "Data.Maybe.Nothing", 
	            sigValues: [  ]
	        } ]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Just) {
	            return new SProd("Data.Maybe.Just", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            } ]);
	        };
	        if (v instanceof Data_Maybe.Nothing) {
	            return new SProd("Data.Maybe.Nothing", [  ]);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 108, column 3 - line 108, column 63: " + [ v.constructor.name ]);
	    });
	};
	var genericShowPrec = function (v) {
	    return function (v1) {
	        if (v1 instanceof SProd) {
	            if (Data_Array["null"](v1.value1)) {
	                return v1.value0;
	            };
	            if (Data_Boolean.otherwise) {
	                var showParen = function (v2) {
	                    return function (x) {
	                        if (!v2) {
	                            return x;
	                        };
	                        if (v2) {
	                            return "(" + (x + ")");
	                        };
	                        throw new Error("Failed pattern match at Data.Generic line 356, column 7 - line 356, column 28: " + [ v2.constructor.name, x.constructor.name ]);
	                    };
	                };
	                return Data_Function.apply(showParen(v > 10))(v1.value0 + (" " + Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                    return genericShowPrec(11)(force(x));
	                })(v1.value1))));
	            };
	        };
	        if (v1 instanceof SRecord) {
	            var showLabelPart = function (x) {
	                return x.recLabel + (": " + genericShowPrec(0)(force(x.recValue)));
	            };
	            return "{" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(showLabelPart)(v1.value0)) + "}");
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Show.show(Data_Show.showBoolean)(v1.value0);
	        };
	        if (v1 instanceof SInt) {
	            return Data_Show.show(Data_Show.showInt)(v1.value0);
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Show.show(Data_Show.showNumber)(v1.value0);
	        };
	        if (v1 instanceof SString) {
	            return Data_Show.show(Data_Show.showString)(v1.value0);
	        };
	        if (v1 instanceof SChar) {
	            return Data_Show.show(Data_Show.showChar)(v1.value0);
	        };
	        if (v1 instanceof SArray) {
	            return "[" + (Data_String.joinWith(", ")(Data_Functor.map(Data_Functor.functorArray)(function (x) {
	                return genericShowPrec(0)(force(x));
	            })(v1.value0)) + "]");
	        };
	        if (v1 instanceof SUnit) {
	            return "unit";
	        };
	        throw new Error("Failed pattern match at Data.Generic line 350, column 1 - line 358, column 1: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var gShow = function (dictGeneric) {
	    return function ($239) {
	        return genericShowPrec(0)(toSpine(dictGeneric)($239));
	    };
	};
	var genericTuple = function (dictGeneric) {
	    return function (dictGeneric1) {
	        return new Generic(function (v) {
	            if (v instanceof SProd && (v.value0 === "Data.Tuple.Tuple" && v.value1.length === 2)) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(fromSpine(dictGeneric)(force(v.value1[0]))))(fromSpine(dictGeneric1)(force(v.value1[1])));
	            };
	            return Data_Maybe.Nothing.value;
	        }, function (x) {
	            var sndProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            var fstProxy = function (v) {
	                return (Type_Proxy["Proxy"]).value;
	            };
	            return new SigProd("Data.Tuple.Tuple", [ {
	                sigConstructor: "Data.Tuple.Tuple", 
	                sigValues: [ function (v) {
	                    return toSignature(dictGeneric)(fstProxy(x));
	                }, function (v) {
	                    return toSignature(dictGeneric1)(sndProxy(x));
	                } ]
	            } ]);
	        }, function (v) {
	            return new SProd("Data.Tuple.Tuple", [ function (v1) {
	                return toSpine(dictGeneric)(v.value0);
	            }, function (v1) {
	                return toSpine(dictGeneric1)(v.value1);
	            } ]);
	        });
	    };
	};
	var isValidSpine = function (v) {
	    return function (v1) {
	        if (v instanceof SigBoolean && v1 instanceof SBoolean) {
	            return true;
	        };
	        if (v instanceof SigNumber && v1 instanceof SNumber) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SArray) {
	            return Data_Foldable.all(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean)(function ($240) {
	                return isValidSpine(force(v.value0))(force($240));
	            })(v1.value0);
	        };
	        if (v instanceof SigProd && v1 instanceof SProd) {
	            var $147 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                return alt.sigConstructor === v1.value0;
	            })(v.value1);
	            if ($147 instanceof Data_Maybe.Nothing) {
	                return false;
	            };
	            if ($147 instanceof Data_Maybe.Just) {
	                return Data_Function.apply(Data_Foldable.and(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean))(Data_Array.zipWith(function (sig) {
	                    return function (spine) {
	                        return isValidSpine(force(sig))(force(spine));
	                    };
	                })($147.value0.sigValues)(v1.value1));
	            };
	            throw new Error("Failed pattern match at Data.Generic line 327, column 3 - line 333, column 15: " + [ $147.constructor.name ]);
	        };
	        if (v instanceof SigRecord && v1 instanceof SRecord) {
	            return Data_Function.apply(Data_Foldable.and(Data_Foldable.foldableArray)(Data_BooleanAlgebra.booleanAlgebraBoolean))(Data_Array.zipWith(function (sig) {
	                return function (val) {
	                    return isValidSpine(force(sig.recValue))(force(val.recValue));
	                };
	            })(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v.value0))(Data_Array.sortBy(function (a) {
	                return function (b) {
	                    return Data_Ord.compare(Data_Ord.ordString)(a.recLabel)(b.recLabel);
	                };
	            })(v1.value0)));
	        };
	        if (v instanceof SigUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	};
	var showSignature = function (sig) {
	    var needsParen = function (s) {
	        if (s instanceof SigProd) {
	            return true;
	        };
	        if (s instanceof SigRecord) {
	            return true;
	        };
	        if (s instanceof SigNumber) {
	            return false;
	        };
	        if (s instanceof SigBoolean) {
	            return false;
	        };
	        if (s instanceof SigInt) {
	            return false;
	        };
	        if (s instanceof SigString) {
	            return false;
	        };
	        if (s instanceof SigChar) {
	            return false;
	        };
	        if (s instanceof SigArray) {
	            return true;
	        };
	        if (s instanceof SigUnit) {
	            return false;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 293, column 18 - line 302, column 21: " + [ s.constructor.name ]);
	    };
	    var paren = function (s) {
	        if (needsParen(s)) {
	            return "(" + (showSignature(s) + ")");
	        };
	        if (Data_Boolean.otherwise) {
	            return showSignature(s);
	        };
	        throw new Error("Failed pattern match at Data.Generic line 275, column 1 - line 302, column 21: " + [ s.constructor.name ]);
	    };
	    return Data_Function.apply(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString))((function () {
	        if (sig instanceof SigProd) {
	            return [ "SigProd ", Data_Show.show(Data_Show.showString)(sig.value0), " ", showArray(showDataConstructor)(sig.value1) ];
	        };
	        if (sig instanceof SigRecord) {
	            return [ "SigRecord ", showArray(showLabel)(sig.value0) ];
	        };
	        if (sig instanceof SigNumber) {
	            return [ "SigNumber" ];
	        };
	        if (sig instanceof SigBoolean) {
	            return [ "SigBoolean" ];
	        };
	        if (sig instanceof SigInt) {
	            return [ "SigInt" ];
	        };
	        if (sig instanceof SigString) {
	            return [ "SigString" ];
	        };
	        if (sig instanceof SigChar) {
	            return [ "SigChar" ];
	        };
	        if (sig instanceof SigArray) {
	            return [ "SigArray ", paren(force(sig.value0)) ];
	        };
	        if (sig instanceof SigUnit) {
	            return [ "SigUnit" ];
	        };
	        throw new Error("Failed pattern match at Data.Generic line 276, column 3 - line 286, column 27: " + [ sig.constructor.name ]);
	    })());
	};
	var showLabel = function (l) {
	    return "{ recLabel: " + (Data_Show.show(Data_Show.showString)(l.recLabel) + (", recValue: " + (showSignature(force(l.recValue)) + " }")));
	};
	var showDataConstructor = function (dc) {
	    return "{ sigConstructor: " + (Data_Show.show(Data_Show.showString)(dc.sigConstructor) + (", sigValues: " + (showArray(function ($241) {
	        return showSignature(force($241));
	    })(dc.sigValues) + "}")));
	};
	var showGenericSignature = new Data_Show.Show(showSignature);
	var eqThunk = function (dictEq) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)(force(x))(force(y));
	        };
	    };
	};
	var eqRecordSigs = function (dictEq) {
	    return function (arr1) {
	        return function (arr2) {
	            var labelCompare = function (r1) {
	                return function (r2) {
	                    return Data_Ord.compare(Data_Ord.ordString)(r1.recLabel)(r2.recLabel);
	                };
	            };
	            var sorted1 = Data_Array.sortBy(labelCompare)(arr1);
	            var sorted2 = Data_Array.sortBy(labelCompare)(arr2);
	            var doCmp = function (x) {
	                return function (y) {
	                    return x.recLabel === y.recLabel && Data_Eq.eq(dictEq)(force(x.recValue))(force(y.recValue));
	                };
	            };
	            return Data_Array.length(arr1) === Data_Array.length(arr2) && $foreign.zipAll(doCmp)(sorted1)(sorted2);
	        };
	    };
	};
	var eqGenericSpine = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value1)(v1.value1));
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            return eqRecordSigs(eqGenericSpine)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return v.value0 === v1.value0;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Array.length(v.value0) === Data_Array.length(v1.value0) && $foreign.zipAll(eqThunk(eqGenericSpine))(v.value0)(v1.value0);
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var gEq = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Eq.eq(eqGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	var eqGenericSignature = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        if (v instanceof SigProd && v1 instanceof SigProd) {
	            return v.value0 === v1.value0 && (Data_Array.length(v.value1) === Data_Array.length(v1.value1) && $foreign.zipAll(eqDataConstructor)(v.value1)(v1.value1));
	        };
	        if (v instanceof SigRecord && v1 instanceof SigRecord) {
	            return eqRecordSigs(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigNumber && v1 instanceof SigNumber) {
	            return true;
	        };
	        if (v instanceof SigBoolean && v1 instanceof SigBoolean) {
	            return true;
	        };
	        if (v instanceof SigInt && v1 instanceof SigInt) {
	            return true;
	        };
	        if (v instanceof SigString && v1 instanceof SigString) {
	            return true;
	        };
	        if (v instanceof SigChar && v1 instanceof SigChar) {
	            return true;
	        };
	        if (v instanceof SigArray && v1 instanceof SigArray) {
	            return eqThunk(eqGenericSignature)(v.value0)(v1.value0);
	        };
	        if (v instanceof SigUnit && v1 instanceof SigUnit) {
	            return true;
	        };
	        return false;
	    };
	});
	var eqDataConstructor = function (p1) {
	    return function (p2) {
	        return p1.sigConstructor === p2.sigConstructor && $foreign.zipAll(eqThunk(eqGenericSignature))(p1.sigValues)(p2.sigValues);
	    };
	};
	var compareThunk = function (dictOrd) {
	    return function (x) {
	        return function (y) {
	            return Data_Function.apply(orderingToInt)(Data_Ord.compare(dictOrd)(force(x))(force(y)));
	        };
	    };
	};
	var ordGenericSpine = new Data_Ord.Ord(function () {
	    return eqGenericSpine;
	}, function (v) {
	    return function (v1) {
	        if (v instanceof SProd && v1 instanceof SProd) {
	            var $199 = Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	            if ($199 instanceof Data_Ordering.EQ) {
	                return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value1)(v1.value1));
	            };
	            return $199;
	        };
	        if (v instanceof SProd) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SProd) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SRecord && v1 instanceof SRecord) {
	            var go = function (x) {
	                return function (y) {
	                    var $208 = Data_Ord.compare(Data_Ord.ordString)(x.recLabel)(y.recLabel);
	                    if ($208 instanceof Data_Ordering.EQ) {
	                        return Data_Function.apply(orderingToInt)(Data_Ord.compare(ordGenericSpine)(force(x.recValue))(force(y.recValue)));
	                    };
	                    return orderingToInt($208);
	                };
	            };
	            return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(go)(v.value0)(v1.value0));
	        };
	        if (v instanceof SRecord) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SRecord) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SInt && v1 instanceof SInt) {
	            return Data_Ord.compare(Data_Ord.ordInt)(v.value0)(v1.value0);
	        };
	        if (v instanceof SInt) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SInt) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SBoolean && v1 instanceof SBoolean) {
	            return Data_Ord.compare(Data_Ord.ordBoolean)(v.value0)(v1.value0);
	        };
	        if (v instanceof SBoolean) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SBoolean) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SNumber && v1 instanceof SNumber) {
	            return Data_Ord.compare(Data_Ord.ordNumber)(v.value0)(v1.value0);
	        };
	        if (v instanceof SNumber) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SNumber) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SString && v1 instanceof SString) {
	            return Data_Ord.compare(Data_Ord.ordString)(v.value0)(v1.value0);
	        };
	        if (v instanceof SString) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SString) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SChar && v1 instanceof SChar) {
	            return Data_Ord.compare(Data_Ord.ordChar)(v.value0)(v1.value0);
	        };
	        if (v instanceof SChar) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SChar) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SArray && v1 instanceof SArray) {
	            return Data_Function.apply(Data_Ord.compare(Data_Ord.ordInt)(0))($foreign.zipCompare(compareThunk(ordGenericSpine))(v.value0)(v1.value0));
	        };
	        if (v instanceof SArray) {
	            return Data_Ordering.LT.value;
	        };
	        if (v1 instanceof SArray) {
	            return Data_Ordering.GT.value;
	        };
	        if (v instanceof SUnit && v1 instanceof SUnit) {
	            return Data_Ordering.EQ.value;
	        };
	        throw new Error("Failed pattern match at Data.Generic line 194, column 3 - line 197, column 15: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var gCompare = function (dictGeneric) {
	    return function (x) {
	        return function (y) {
	            return Data_Ord.compare(ordGenericSpine)(toSpine(dictGeneric)(x))(toSpine(dictGeneric)(y));
	        };
	    };
	};
	module.exports = {
	    SigProd: SigProd, 
	    SigRecord: SigRecord, 
	    SigNumber: SigNumber, 
	    SigBoolean: SigBoolean, 
	    SigInt: SigInt, 
	    SigString: SigString, 
	    SigChar: SigChar, 
	    SigArray: SigArray, 
	    SigUnit: SigUnit, 
	    SProd: SProd, 
	    SRecord: SRecord, 
	    SNumber: SNumber, 
	    SBoolean: SBoolean, 
	    SInt: SInt, 
	    SString: SString, 
	    SChar: SChar, 
	    SArray: SArray, 
	    SUnit: SUnit, 
	    Generic: Generic, 
	    fromSpine: fromSpine, 
	    gCompare: gCompare, 
	    gEq: gEq, 
	    gShow: gShow, 
	    isValidSpine: isValidSpine, 
	    showDataConstructor: showDataConstructor, 
	    showSignature: showSignature, 
	    toSignature: toSignature, 
	    toSpine: toSpine, 
	    genericNumber: genericNumber, 
	    genericInt: genericInt, 
	    genericString: genericString, 
	    genericChar: genericChar, 
	    genericBool: genericBool, 
	    genericArray: genericArray, 
	    genericUnit: genericUnit, 
	    genericTuple: genericTuple, 
	    genericMaybe: genericMaybe, 
	    genericEither: genericEither, 
	    genericOrdering: genericOrdering, 
	    eqGenericSpine: eqGenericSpine, 
	    ordGenericSpine: ordGenericSpine, 
	    eqGenericSignature: eqGenericSignature, 
	    showGenericSignature: showGenericSignature
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 183 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-generics/src/Data/Generic.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module Data.Generic
	
	exports.zipAll = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var l = xs.length < ys.length ? xs.length : ys.length;
	      for (var i = 0; i < l; i++) {
	        if (!f(xs[i])(ys[i])) {
	          return false;
	        }
	      }
	      return true;
	    };
	  };
	};
	
	exports.zipCompare = function (f) {
	  return function (xs) {
	    return function (ys) {
	      var i = 0;
	      var xlen = xs.length;
	      var ylen = ys.length;
	      while (i < xlen && i < ylen) {
	        var o = f(xs[i])(ys[i]);
	        if (o !== 0) {
	          return o;
	        }
	        i++;
	      }
	      if (xlen === ylen) {
	        return 0;
	      } else if (xlen > ylen) {
	        return -1;
	      } else {
	        return 1;
	      }
	    };
	  };
	};


/***/ },
/* 184 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-proxy/src/Type/Proxy.purs ***!
  \***************************************************************/
/***/ function(module, exports) {

	
	/**
	 *  | The `Proxy` type and values are for situations where type information is
	 *  | required for an input to determine the type of an output, but where it is
	 *  | not possible or convenient to provide a _value_ for the input.
	 *  |
	 *  | A hypothetical example: if you have a class that is used to handle the
	 *  | result of an AJAX request, you may want to use this information to set the
	 *  | expected content type of the request, so you might have a class something
	 *  | like this:
	 *  |
	 *  | ``` purescript
	 *  | class AjaxResponse a where
	 *  |   responseType :: a -> ResponseType
	 *  |   fromResponse :: Foreign -> a
	 *  | ```
	 *  |
	 *  | The problem here is `responseType` requires a value of type `a`, but we
	 *  | won't have a value of that type until the request has been completed. The
	 *  | solution is to use a `Proxy` type instead:
	 *  |
	 *  | ``` purescript
	 *  | class AjaxResponse a where
	 *  |   responseType :: Proxy a -> ResponseType
	 *  |   fromResponse :: Foreign -> a
	 *  | ```
	 *  |
	 *  | We can now call `responseType (Proxy :: Proxy SomeContentType)` to produce
	 *  | a `ResponseType` for `SomeContentType` without having to construct some
	 *  | empty version of `SomeContentType` first. In situations like this where
	 *  | the `Proxy` type can be statically determined, it is recommended to pull
	 *  | out the definition to the top level and make a declaration like:
	 *  |
	 *  | ``` purescript
	 *  | _SomeContentType :: Proxy SomeContentType
	 *  | _SomeContentType = Proxy
	 *  | ```
	 *  |
	 *  | That way the proxy value can be used as `responseType _SomeContentType`
	 *  | for improved readability. However, this is not always possible, sometimes
	 *  | the type required will be determined by a type variable. As PureScript has
	 *  | scoped type variables, we can do things like this:
	 *  |
	 *  | ``` purescript
	 *  | makeRequest :: URL -> ResponseType -> Aff _ Foreign
	 *  | makeRequest = ...
	 *  |
	 *  | fetchData :: forall a. (AjaxResponse a) => URL -> Aff _ a
	 *  | fetchData url = fromResponse <$> makeRequest url (responseType (Proxy :: Proxy a))
	 *  | ```
	 */
	"use strict";
	
	/**
	 *  | Value proxy for kind `* -> * -> *` types.
	 */
	var Proxy3 = (function () {
	    function Proxy3() {
	
	    };
	    Proxy3.value = new Proxy3();
	    return Proxy3;
	})();
	
	/**
	 *  | Value proxy for kind `* -> *` types.
	 */
	var Proxy2 = (function () {
	    function Proxy2() {
	
	    };
	    Proxy2.value = new Proxy2();
	    return Proxy2;
	})();
	
	/**
	 *  | Value proxy for kind `*` types.
	 */
	var $$Proxy = (function () {
	    function Proxy() {
	
	    };
	    Proxy.value = new Proxy();
	    return Proxy;
	})();
	module.exports = {
	    "Proxy": $$Proxy, 
	    Proxy2: Proxy2, 
	    Proxy3: Proxy3
	};


/***/ },
/* 185 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-inject/src/Data/Inject.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Inject = function (inj, prj) {
	    this.inj = inj;
	    this.prj = prj;
	};
	var prj = function (dict) {
	    return dict.prj;
	};
	var injectReflexive = new Inject(Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
	var injectLeft = new Inject(function ($1) {
	    return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($1));
	}, Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)));
	var inj = function (dict) {
	    return dict.inj;
	};
	var injectRight = function (dictInject) {
	    return new Inject(function ($2) {
	        return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create(inj(dictInject)($2)));
	    }, Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(prj(dictInject)));
	};
	module.exports = {
	    Inject: Inject, 
	    inj: inj, 
	    prj: prj, 
	    injectReflexive: injectReflexive, 
	    injectLeft: injectLeft, 
	    injectRight: injectRight
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 186 */
/*!****************************************************************************************!*\
  !*** ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs ***!
  \****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Coproduct = function (x) {
	    return x;
	};
	var unCoproduct = function (v) {
	    return v;
	};
	var right = function ($11) {
	    return Coproduct(Data_Either.Right.create($11));
	};
	var left = function ($12) {
	    return Coproduct(Data_Either.Left.create($12));
	};
	var coproduct = function (f) {
	    return function (g) {
	        return function ($13) {
	            return Data_Either.either(f)(g)(unCoproduct($13));
	        };
	    };
	};
	var foldableCoproduct = function (dictFoldable) {
	    return function (dictFoldable1) {
	        return new Data_Foldable.Foldable(function (dictMonoid) {
	            return function (f) {
	                return coproduct(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f))(Data_Foldable.foldMap(dictFoldable1)(dictMonoid)(f));
	            };
	        }, function (f) {
	            return function (z) {
	                return coproduct(Data_Foldable.foldl(dictFoldable)(f)(z))(Data_Foldable.foldl(dictFoldable1)(f)(z));
	            };
	        }, function (f) {
	            return function (z) {
	                return coproduct(Data_Foldable.foldr(dictFoldable)(f)(z))(Data_Foldable.foldr(dictFoldable1)(f)(z));
	            };
	        });
	    };
	};
	var functorCoproduct = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function ($14) {
	                return Coproduct(coproduct(function ($15) {
	                    return Data_Either.Left.create(Data_Functor.map(dictFunctor)(f)($15));
	                })(function ($16) {
	                    return Data_Either.Right.create(Data_Functor.map(dictFunctor1)(f)($16));
	                })($14));
	            };
	        });
	    };
	};
	var traversableCoproduct = function (dictTraversable) {
	    return function (dictTraversable1) {
	        return new Data_Traversable.Traversable(function () {
	            return foldableCoproduct(dictTraversable["__superclass_Data.Foldable.Foldable_1"]())(dictTraversable1["__superclass_Data.Foldable.Foldable_1"]());
	        }, function () {
	            return functorCoproduct(dictTraversable["__superclass_Data.Functor.Functor_0"]())(dictTraversable1["__superclass_Data.Functor.Functor_0"]());
	        }, function (dictApplicative) {
	            return coproduct(function ($17) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($18) {
	                    return Coproduct(Data_Either.Left.create($18));
	                })(Data_Traversable.sequence(dictTraversable)(dictApplicative)($17));
	            })(function ($19) {
	                return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($20) {
	                    return Coproduct(Data_Either.Right.create($20));
	                })(Data_Traversable.sequence(dictTraversable1)(dictApplicative)($19));
	            });
	        }, function (dictApplicative) {
	            return function (f) {
	                return coproduct(function ($21) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($22) {
	                        return Coproduct(Data_Either.Left.create($22));
	                    })(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)($21));
	                })(function ($23) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($24) {
	                        return Coproduct(Data_Either.Right.create($24));
	                    })(Data_Traversable.traverse(dictTraversable1)(dictApplicative)(f)($23));
	                });
	            };
	        });
	    };
	};
	module.exports = {
	    Coproduct: Coproduct, 
	    coproduct: coproduct, 
	    left: left, 
	    right: right, 
	    unCoproduct: unCoproduct, 
	    functorCoproduct: functorCoproduct, 
	    foldableCoproduct: foldableCoproduct, 
	    traversableCoproduct: traversableCoproduct
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 187 */
/*!*****************************************************************************!*\
  !*** ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Exists = __webpack_require__(/*! ./bower_components/purescript-exists/src/Data/Exists.purs */ 188);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Bound = (function () {
	    function Bound(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Bound.create = function (value0) {
	        return function (value1) {
	            return new Bound(value0, value1);
	        };
	    };
	    return Bound;
	})();
	var FreeT = (function () {
	    function FreeT(value0) {
	        this.value0 = value0;
	    };
	    FreeT.create = function (value0) {
	        return new FreeT(value0);
	    };
	    return FreeT;
	})();
	var Bind = (function () {
	    function Bind(value0) {
	        this.value0 = value0;
	    };
	    Bind.create = function (value0) {
	        return new Bind(value0);
	    };
	    return Bind;
	})();
	var monadTransFreeT = function (dictFunctor) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (ma) {
	            return new FreeT(function (v) {
	                return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(ma);
	            });
	        };
	    });
	};
	var freeT = FreeT.create;
	var bound = function (m) {
	    return function (f) {
	        return new Bind(Data_Exists.mkExists(new Bound(m, f)));
	    };
	};
	var functorFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return new Data_Functor.Functor(function (f) {
	            return function (v) {
	                if (v instanceof FreeT) {
	                    return new FreeT(function (v1) {
	                        return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
	                    });
	                };
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function ($98) {
	                            return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($98));
	                        });
	                    })(v.value0);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 55, column 3 - line 55, column 69: " + [ f.constructor.name, v.constructor.name ]);
	            };
	        });
	    };
	};
	var bimapFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return function (nm) {
	                return function (v) {
	                    if (v instanceof Bind) {
	                        return Data_Exists.runExists(function (v1) {
	                            return bound(function ($99) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value0($99));
	                            })(function ($100) {
	                                return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm)(v1.value1($100));
	                            });
	                        })(v.value0);
	                    };
	                    if (v instanceof FreeT) {
	                        return new FreeT(function (v1) {
	                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)(function ($101) {
	                                return nf(Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm))($101));
	                            }))(nm(v.value0(Data_Unit.unit)));
	                        });
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 96, column 1 - line 96, column 114: " + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);
	                };
	            };
	        };
	    };
	};
	var hoistFreeT = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var interpret = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (nf) {
	            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.id(Control_Category.categoryFn));
	        };
	    };
	};
	var monadFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeFreeT(dictFunctor)(dictMonad);
	        }, function () {
	            return bindFreeT(dictFunctor)(dictMonad);
	        });
	    };
	};
	var bindFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Bind.Bind(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (v) {
	            return function (f) {
	                if (v instanceof Bind) {
	                    return Data_Exists.runExists(function (v1) {
	                        return bound(v1.value0)(function (x) {
	                            return bound(function (v2) {
	                                return v1.value1(x);
	                            })(f);
	                        });
	                    })(v.value0);
	                };
	                return bound(function (v1) {
	                    return v;
	                })(f);
	            };
	        });
	    };
	};
	var applyFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Apply.Apply(function () {
	            return functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	        }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
	    };
	};
	var applicativeFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Applicative.Applicative(function () {
	            return applyFreeT(dictFunctor)(dictMonad);
	        }, function (a) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(a));
	            });
	        });
	    };
	};
	var liftFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (fa) {
	            return new FreeT(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
	            });
	        };
	    };
	};
	var resume = function (dictFunctor) {
	    return function (dictMonadRec) {
	        var go = function (v) {
	            if (v instanceof FreeT) {
	                return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Right.create)(v.value0(Data_Unit.unit));
	            };
	            if (v instanceof Bind) {
	                return Data_Exists.runExists(function (v1) {
	                    var $77 = v1.value0(Data_Unit.unit);
	                    if ($77 instanceof FreeT) {
	                        return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($77.value0(Data_Unit.unit))(function (v2) {
	                            if (v2 instanceof Data_Either.Left) {
	                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value1(v2.value0)));
	                            };
	                            if (v2 instanceof Data_Either.Right) {
	                                return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
	                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(h)(v1.value1);
	                                })(v2.value0))));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 49, column 9 - line 51, column 68: " + [ v2.constructor.name ]);
	                        });
	                    };
	                    if ($77 instanceof Bind) {
	                        return Data_Exists.runExists(function (v2) {
	                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value0(Data_Unit.unit))(function (z) {
	                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value1(z))(v1.value1);
	                            })));
	                        })($77.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 46, column 5 - line 52, column 98: " + [ $77.constructor.name ]);
	                })(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Monad.Free.Trans line 44, column 3 - line 44, column 36: " + [ v.constructor.name ]);
	        };
	        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
	    };
	};
	var runFreeT = function (dictFunctor) {
	    return function (dictMonadRec) {
	        return function (interp) {
	            var go = function (v) {
	                if (v instanceof Data_Either.Left) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v.value0));
	                };
	                if (v instanceof Data_Either.Right) {
	                    return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(interp(v.value0))(function (v1) {
	                        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1));
	                    });
	                };
	                throw new Error("Failed pattern match at Control.Monad.Free.Trans line 104, column 3 - line 104, column 31: " + [ v.constructor.name ]);
	            };
	            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(go)(resume(dictFunctor)(dictMonadRec)));
	        };
	    };
	};
	var monadRecFreeT = function (dictFunctor) {
	    return function (dictMonad) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadFreeT(dictFunctor)(dictMonad);
	        }, function (f) {
	            var go = function (s) {
	                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
	                    if (v instanceof Data_Either.Left) {
	                        return go(v.value0);
	                    };
	                    if (v instanceof Data_Either.Right) {
	                        return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.Free.Trans line 78, column 7 - line 80, column 26: " + [ v.constructor.name ]);
	                });
	            };
	            return go;
	        });
	    };
	};
	module.exports = {
	    bimapFreeT: bimapFreeT, 
	    freeT: freeT, 
	    hoistFreeT: hoistFreeT, 
	    interpret: interpret, 
	    liftFreeT: liftFreeT, 
	    resume: resume, 
	    runFreeT: runFreeT, 
	    functorFreeT: functorFreeT, 
	    applyFreeT: applyFreeT, 
	    applicativeFreeT: applicativeFreeT, 
	    bindFreeT: bindFreeT, 
	    monadFreeT: monadFreeT, 
	    monadTransFreeT: monadTransFreeT, 
	    monadRecFreeT: monadRecFreeT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 188 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-exists/src/Data/Exists.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	
	/**
	 *  | The `runExists` function is used to eliminate a value of type `Exists f`. The rank 2 type ensures
	 *  | that the existentially-quantified type does not escape its scope. Since the function is required
	 *  | to work for _any_ type `a`, it will work for the existentially-quantified type.
	 *  |
	 *  | For example, we can write a function to obtain the head of a stream by using `runExists` as follows:
	 *  |
	 *  | ```purescript
	 *  | head :: forall a. Stream a -> a
	 *  | head = runExists head'
	 *  |   where
	 *  |   head' :: forall s. StreamF a s -> a
	 *  |   head' (StreamF s f) = snd (f s)
	 *  | ```
	 */
	var runExists = Unsafe_Coerce.unsafeCoerce;
	
	/**
	 *  | The `mkExists` function is used to introduce a value of type `Exists f`, by providing a value of
	 *  | type `f a`, for some type `a` which will be hidden in the existentially-quantified type.
	 *  |
	 *  | For example, to create a value of type `Stream Number`, we might use `mkExists` as follows:
	 *  |
	 *  | ```purescript
	 *  | nats :: Stream Number
	 *  | nats = mkExists $ StreamF 0 (\n -> Tuple (n + 1) n)
	 *  | ```
	 */
	var mkExists = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    mkExists: mkExists, 
	    runExists: runExists
	};


/***/ },
/* 189 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-arrays/src/Data/Array/ST.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array/ST.js */ 190);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_ST = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.purs */ 117);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var thaw = $foreign.copyImpl;
	var pushSTArray = function (arr) {
	    return function (a) {
	        return $foreign.pushAllSTArray(arr)([ a ]);
	    };
	};
	var peekSTArray = $foreign.peekSTArrayImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	var freeze = $foreign.copyImpl;
	module.exports = {
	    freeze: freeze, 
	    peekSTArray: peekSTArray, 
	    pushSTArray: pushSTArray, 
	    thaw: thaw, 
	    emptySTArray: $foreign.emptySTArray, 
	    pokeSTArray: $foreign.pokeSTArray, 
	    pushAllSTArray: $foreign.pushAllSTArray, 
	    runSTArray: $foreign.runSTArray, 
	    spliceSTArray: $foreign.spliceSTArray, 
	    toAssocArray: $foreign.toAssocArray
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 190 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-arrays/src/Data/Array/ST.js ***!
  \*****************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Array.ST
	
	exports.runSTArray = function (f) {
	  return f;
	};
	
	exports.emptySTArray = function () {
	  return [];
	};
	
	exports.peekSTArrayImpl = function (just) {
	  return function (nothing) {
	    return function (xs) {
	      return function (i) {
	        return function () {
	          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
	        };
	      };
	    };
	  };
	};
	
	exports.pokeSTArray = function (xs) {
	  return function (i) {
	    return function (a) {
	      return function () {
	        var ret = i >= 0 && i < xs.length;
	        if (ret) xs[i] = a;
	        return ret;
	      };
	    };
	  };
	};
	
	exports.pushAllSTArray = function (xs) {
	  return function (as) {
	    return function () {
	      return xs.push.apply(xs, as);
	    };
	  };
	};
	
	exports.spliceSTArray = function (xs) {
	  return function (i) {
	    return function (howMany) {
	      return function (bs) {
	        return function () {
	          return xs.splice.apply(xs, [i, howMany].concat(bs));
	        };
	      };
	    };
	  };
	};
	
	exports.copyImpl = function (xs) {
	  return function () {
	    return xs.slice();
	  };
	};
	
	exports.toAssocArray = function (xs) {
	  return function () {
	    var n = xs.length;
	    var as = new Array(n);
	    for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };
	    return as;
	  };
	};


/***/ },
/* 191 */
/*!*************************************************************!*\
  !*** ./bower_components/purescript-lazy/src/Data/Lazy.purs ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-lazy/src/Data/Lazy.js */ 192);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Comonad = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Comonad.purs */ 92);
	var Control_Extend = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Extend.purs */ 88);
	var Control_Lazy = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Lazy.purs */ 132);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Field = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Field.purs */ 72);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var showLazy = function (dictShow) {
	    return new Data_Show.Show(function (x) {
	        return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
	    });
	};
	var semiringLazy = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, $foreign.defer(function (v) {
	        return Data_Semiring.one(dictSemiring);
	    }), $foreign.defer(function (v) {
	        return Data_Semiring.zero(dictSemiring);
	    }));
	};
	var semigroupLazy = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var ringLazy = function (dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringLazy(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var monoidLazy = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupLazy(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, $foreign.defer(function (v) {
	        return Data_Monoid.mempty(dictMonoid);
	    }));
	};
	var lazyLazy = new Control_Lazy.Lazy(function (f) {
	    return $foreign.defer(function (v) {
	        return $foreign.force(f(Data_Unit.unit));
	    });
	});
	var functorLazy = new Data_Functor.Functor(function (f) {
	    return function (l) {
	        return $foreign.defer(function (v) {
	            return f($foreign.force(l));
	        });
	    };
	});
	var extendLazy = new Control_Extend.Extend(function () {
	    return functorLazy;
	}, function (f) {
	    return function (x) {
	        return $foreign.defer(function (v) {
	            return f(x);
	        });
	    };
	});
	var eqLazy = function (dictEq) {
	    return new Data_Eq.Eq(function (x) {
	        return function (y) {
	            return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
	        };
	    });
	};
	var ordLazy = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqLazy(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (x) {
	        return function (y) {
	            return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
	        };
	    });
	};
	var comonadLazy = new Control_Comonad.Comonad(function () {
	    return extendLazy;
	}, $foreign.force);
	var commutativeRingLazy = function (dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringLazy(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingLazy = function (dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingLazy(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function ($51) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)($foreign.force($51));
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    }, function (a) {
	        return function (b) {
	            return $foreign.defer(function (v) {
	                return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
	            });
	        };
	    });
	};
	var fieldLazy = function (dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingLazy(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedLazy = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordLazy(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, $foreign.defer(function (v) {
	        return Data_Bounded.bottom(dictBounded);
	    }), $foreign.defer(function (v) {
	        return Data_Bounded.top(dictBounded);
	    }));
	};
	var applyLazy = new Control_Apply.Apply(function () {
	    return functorLazy;
	}, function (f) {
	    return function (x) {
	        return $foreign.defer(function (v) {
	            return $foreign.force(f)($foreign.force(x));
	        });
	    };
	});
	var bindLazy = new Control_Bind.Bind(function () {
	    return applyLazy;
	}, function (l) {
	    return function (f) {
	        return $foreign.defer(function (v) {
	            return Data_Function.apply($foreign.force)(f($foreign.force(l)));
	        });
	    };
	});
	var heytingAlgebraLazy = function (dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
	        };
	    }, function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
	        };
	    }, $foreign.defer(function (v) {
	        return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
	    }), function (a) {
	        return function (b) {
	            return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
	        };
	    }, function (a) {
	        return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
	    }, $foreign.defer(function (v) {
	        return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
	    }));
	};
	var booleanAlgebraLazy = function (dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraLazy(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applicativeLazy = new Control_Applicative.Applicative(function () {
	    return applyLazy;
	}, function (a) {
	    return $foreign.defer(function (v) {
	        return a;
	    });
	});
	var monadLazy = new Control_Monad.Monad(function () {
	    return applicativeLazy;
	}, function () {
	    return bindLazy;
	});
	module.exports = {
	    semiringLazy: semiringLazy, 
	    ringLazy: ringLazy, 
	    commutativeRingLazy: commutativeRingLazy, 
	    euclideanRingLazy: euclideanRingLazy, 
	    fieldLazy: fieldLazy, 
	    eqLazy: eqLazy, 
	    ordLazy: ordLazy, 
	    boundedLazy: boundedLazy, 
	    semigroupLazy: semigroupLazy, 
	    monoidLazy: monoidLazy, 
	    heytingAlgebraLazy: heytingAlgebraLazy, 
	    booleanAlgebraLazy: booleanAlgebraLazy, 
	    functorLazy: functorLazy, 
	    applyLazy: applyLazy, 
	    applicativeLazy: applicativeLazy, 
	    bindLazy: bindLazy, 
	    monadLazy: monadLazy, 
	    extendLazy: extendLazy, 
	    comonadLazy: comonadLazy, 
	    showLazy: showLazy, 
	    lazyLazy: lazyLazy, 
	    defer: $foreign.defer, 
	    force: $foreign.force
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 192 */
/*!***********************************************************!*\
  !*** ./bower_components/purescript-lazy/src/Data/Lazy.js ***!
  \***********************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Lazy
	
	exports.defer = function () {
	
	  function Defer(thunk) {
	    if (this instanceof Defer) {
	      this.thunk = thunk;
	      return this;
	    } else {
	      return new Defer(thunk);
	    }
	  }
	
	  Defer.prototype.force = function () {
	    var value = this.thunk();
	    delete this.thunk;
	    this.force = function () {
	      return value;
	    };
	    return value;
	  };
	
	  return Defer;
	
	}();
	
	exports.force = function (l) {
	  return l.force();
	};


/***/ },
/* 193 */
/*!************************************************************!*\
  !*** ./bower_components/purescript-maps/src/Data/Map.purs ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Leaf = (function () {
	    function Leaf() {
	
	    };
	    Leaf.value = new Leaf();
	    return Leaf;
	})();
	var Two = (function () {
	    function Two(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    Two.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new Two(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return Two;
	})();
	var Three = (function () {
	    function Three(value0, value1, value2, value3, value4, value5, value6) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	        this.value6 = value6;
	    };
	    Three.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return function (value6) {
	                                return new Three(value0, value1, value2, value3, value4, value5, value6);
	                            };
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return Three;
	})();
	var TwoLeft = (function () {
	    function TwoLeft(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    TwoLeft.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new TwoLeft(value0, value1, value2);
	            };
	        };
	    };
	    return TwoLeft;
	})();
	var TwoRight = (function () {
	    function TwoRight(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    TwoRight.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new TwoRight(value0, value1, value2);
	            };
	        };
	    };
	    return TwoRight;
	})();
	var ThreeLeft = (function () {
	    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeLeft.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeLeft;
	})();
	var ThreeMiddle = (function () {
	    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeMiddle.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeMiddle;
	})();
	var ThreeRight = (function () {
	    function ThreeRight(value0, value1, value2, value3, value4, value5) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	        this.value4 = value4;
	        this.value5 = value5;
	    };
	    ThreeRight.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return function (value4) {
	                        return function (value5) {
	                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
	                        };
	                    };
	                };
	            };
	        };
	    };
	    return ThreeRight;
	})();
	var KickUp = (function () {
	    function KickUp(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    KickUp.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new KickUp(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return KickUp;
	})();
	var values = function (v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value2))(values(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value2))(Data_Semigroup.append(Data_List.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value5))(values(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 390, column 1 - line 390, column 18: " + [ v.constructor.name ]);
	};
	var toList = function (v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(toList(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value1, v.value2)))(toList(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(toList(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value1, v.value2)))(Data_Semigroup.append(Data_List.semigroupList)(toList(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(v.value4, v.value5)))(toList(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 369, column 1 - line 369, column 18: " + [ v.constructor.name ]);
	};
	var size = function ($592) {
	    return Data_List.length(values($592));
	};
	var singleton = function (k) {
	    return function (v) {
	        return new Two(Leaf.value, k, v, Leaf.value);
	    };
	};
	var showTree = function (dictShow) {
	    return function (dictShow1) {
	        return function (v) {
	            if (v instanceof Leaf) {
	                return "Leaf";
	            };
	            if (v instanceof Two) {
	                return "Two (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + ")")))))));
	            };
	            if (v instanceof Three) {
	                return "Three (" + (showTree(dictShow)(dictShow1)(v.value0) + (") (" + (Data_Show.show(dictShow)(v.value1) + (") (" + (Data_Show.show(dictShow1)(v.value2) + (") (" + (showTree(dictShow)(dictShow1)(v.value3) + (") (" + (Data_Show.show(dictShow)(v.value4) + (") (" + (Data_Show.show(dictShow1)(v.value5) + (") (" + (showTree(dictShow)(dictShow1)(v.value6) + ")")))))))))))));
	            };
	            throw new Error("Failed pattern match at Data.Map line 85, column 1 - line 86, column 1: " + [ v.constructor.name ]);
	        };
	    };
	};
	var showMap = function (dictShow) {
	    return function (dictShow1) {
	        return new Data_Show.Show(function (m) {
	            return "(fromList " + (Data_Show.show(Data_List.showList(Data_Tuple.showTuple(dictShow)(dictShow1)))(toList(m)) + ")");
	        });
	    };
	};
	var lookupLE = function (dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $117 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($117 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1, 
	                        value: v1.value2
	                    });
	                };
	                if ($117 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupLE(dictOrd)(v)(v1.value3)));
	                };
	                if ($117 instanceof Data_Ordering.LT) {
	                    return lookupLE(dictOrd)(v)(v1.value0);
	                };
	                throw new Error("Failed pattern match at Data.Map line 152, column 37 - line 155, column 24: " + [ $117.constructor.name ]);
	            };
	            if (v1 instanceof Three) {
	                var $122 = Data_Ord.compare(dictOrd)(v)(v1.value4);
	                if ($122 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value4, 
	                        value: v1.value5
	                    });
	                };
	                if ($122 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value4, 
	                        value: v1.value5
	                    }))(lookupLE(dictOrd)(v)(v1.value6)));
	                };
	                if ($122 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(lookupLE(dictOrd)(v))(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                throw new Error("Failed pattern match at Data.Map line 156, column 49 - line 159, column 40: " + [ $122.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 151, column 1 - line 151, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var lookupGE = function (dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $132 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($132 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1, 
	                        value: v1.value2
	                    });
	                };
	                if ($132 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupGE(dictOrd)(v)(v1.value0)));
	                };
	                if ($132 instanceof Data_Ordering.GT) {
	                    return lookupGE(dictOrd)(v)(v1.value3);
	                };
	                throw new Error("Failed pattern match at Data.Map line 176, column 37 - line 179, column 25: " + [ $132.constructor.name ]);
	            };
	            if (v1 instanceof Three) {
	                var $137 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($137 instanceof Data_Ordering.EQ) {
	                    return new Data_Maybe.Just({
	                        key: v1.value1, 
	                        value: v1.value2
	                    });
	                };
	                if ($137 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupGE(dictOrd)(v)(v1.value0)));
	                };
	                if ($137 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(lookupGE(dictOrd)(v))(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                throw new Error("Failed pattern match at Data.Map line 180, column 49 - line 183, column 41: " + [ $137.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 175, column 1 - line 175, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var lookup = function (dictOrd) {
	    return Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (k) {
	            return function (tree) {
	                if (tree instanceof Leaf) {
	                    return Data_Maybe.Nothing.value;
	                };
	                var comp = Data_Ord.compare(dictOrd);
	                var __unused = function (dictPartial1) {
	                    return function ($dollar35) {
	                        return $dollar35;
	                    };
	                };
	                return __unused(dictPartial)((function () {
	                    if (tree instanceof Two) {
	                        var $147 = comp(k)(tree.value1);
	                        if ($147 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value2);
	                        };
	                        if ($147 instanceof Data_Ordering.LT) {
	                            return lookup(dictOrd)(k)(tree.value0);
	                        };
	                        return lookup(dictOrd)(k)(tree.value3);
	                    };
	                    if (tree instanceof Three) {
	                        var $152 = comp(k)(tree.value1);
	                        if ($152 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value2);
	                        };
	                        var $154 = comp(k)(tree.value4);
	                        if ($154 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(tree.value5);
	                        };
	                        if ($152 instanceof Data_Ordering.LT) {
	                            return lookup(dictOrd)(k)(tree.value0);
	                        };
	                        if ($154 instanceof Data_Ordering.GT) {
	                            return lookup(dictOrd)(k)(tree.value6);
	                        };
	                        return lookup(dictOrd)(k)(tree.value3);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 132, column 10 - line 146, column 39: " + [ tree.constructor.name ]);
	                })());
	            };
	        };
	    });
	};
	var member = function (dictOrd) {
	    return function (k) {
	        return function (m) {
	            return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
	        };
	    };
	};
	var keys = function (v) {
	    if (v instanceof Leaf) {
	        return Data_List.Nil.value;
	    };
	    if (v instanceof Two) {
	        return Data_Semigroup.append(Data_List.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value1))(keys(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Semigroup.append(Data_List.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value1))(Data_Semigroup.append(Data_List.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List.semigroupList)(Control_Applicative.pure(Data_List.applicativeList)(v.value4))(keys(v.value6)))));
	    };
	    throw new Error("Failed pattern match at Data.Map line 384, column 1 - line 384, column 16: " + [ v.constructor.name ]);
	};
	var isEmpty = function (v) {
	    if (v instanceof Leaf) {
	        return true;
	    };
	    return false;
	};
	var functorMap = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Leaf) {
	            return Leaf.value;
	        };
	        if (v1 instanceof Two) {
	            return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
	        };
	        if (v1 instanceof Three) {
	            return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
	        };
	        throw new Error("Failed pattern match at Data.Map line 70, column 3 - line 70, column 20: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var fromZipper = function (__copy_dictOrd) {
	    return function (__copy_v) {
	        return function (__copy_tree) {
	            var dictOrd = __copy_dictOrd;
	            var v = __copy_v;
	            var tree = __copy_tree;
	            tco: while (true) {
	                if (v instanceof Data_List.Nil) {
	                    return tree;
	                };
	                if (v instanceof Data_List.Cons) {
	                    if (v.value0 instanceof TwoLeft) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof TwoRight) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeLeft) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeMiddle) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeRight) {
	                        var __tco_dictOrd = dictOrd;
	                        var __tco_v = v.value1;
	                        var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
	                        dictOrd = __tco_dictOrd;
	                        v = __tco_v;
	                        tree = __tco_tree;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 223, column 3 - line 228, column 88: " + [ v.value0.constructor.name ]);
	                };
	                throw new Error("Failed pattern match at Data.Map line 221, column 1 - line 221, column 27: " + [ v.constructor.name, tree.constructor.name ]);
	            };
	        };
	    };
	};
	var insert = function (dictOrd) {
	    var up = function (__copy_v) {
	        return function (__copy_v1) {
	            var v = __copy_v;
	            var v1 = __copy_v1;
	            tco: while (true) {
	                if (v instanceof Data_List.Nil) {
	                    return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
	                };
	                if (v instanceof Data_List.Cons) {
	                    if (v.value0 instanceof TwoLeft) {
	                        return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
	                    };
	                    if (v.value0 instanceof TwoRight) {
	                        return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
	                    };
	                    if (v.value0 instanceof ThreeLeft) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeMiddle) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    if (v.value0 instanceof ThreeRight) {
	                        var __tco_v = v.value1;
	                        var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                        v = __tco_v;
	                        v1 = __tco_v1;
	                        continue tco;
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 259, column 5 - line 264, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
	                };
	                throw new Error("Failed pattern match at Data.Map line 257, column 3 - line 257, column 54: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	    };
	    var comp = Data_Ord.compare(dictOrd);
	    var down = function (__copy_ctx) {
	        return function (__copy_k) {
	            return function (__copy_v) {
	                return function (__copy_v1) {
	                    var ctx = __copy_ctx;
	                    var k = __copy_k;
	                    var v = __copy_v;
	                    var v1 = __copy_v1;
	                    tco: while (true) {
	                        if (v1 instanceof Leaf) {
	                            return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
	                        };
	                        if (v1 instanceof Two) {
	                            var $275 = comp(k)(v1.value1);
	                            if ($275 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
	                            };
	                            if ($275 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value0;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            var __tco_ctx = new Data_List.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
	                            var __tco_k = k;
	                            var __tco_v = v;
	                            var __tco_v1 = v1.value3;
	                            ctx = __tco_ctx;
	                            k = __tco_k;
	                            v = __tco_v;
	                            v1 = __tco_v1;
	                            continue tco;
	                        };
	                        if (v1 instanceof Three) {
	                            var $280 = comp(k)(v1.value1);
	                            if ($280 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
	                            };
	                            var $282 = comp(k)(v1.value4);
	                            if ($282 instanceof Data_Ordering.EQ) {
	                                return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
	                            };
	                            if ($280 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value0;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            if ($280 instanceof Data_Ordering.GT && $282 instanceof Data_Ordering.LT) {
	                                var __tco_ctx = new Data_List.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
	                                var __tco_k = k;
	                                var __tco_v = v;
	                                var __tco_v1 = v1.value3;
	                                ctx = __tco_ctx;
	                                k = __tco_k;
	                                v = __tco_v;
	                                v1 = __tco_v1;
	                                continue tco;
	                            };
	                            var __tco_ctx = new Data_List.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
	                            var __tco_k = k;
	                            var __tco_v = v;
	                            var __tco_v1 = v1.value6;
	                            ctx = __tco_ctx;
	                            k = __tco_k;
	                            v = __tco_v;
	                            v1 = __tco_v1;
	                            continue tco;
	                        };
	                        throw new Error("Failed pattern match at Data.Map line 240, column 3 - line 240, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
	                    };
	                };
	            };
	        };
	    };
	    return down(Data_List.Nil.value);
	};
	var pop = function (dictOrd) {
	    var up = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctxs) {
	            return function (tree) {
	                if (ctxs instanceof Data_List.Nil) {
	                    return tree;
	                };
	                if (ctxs instanceof Data_List.Cons) {
	                    var __unused = function (dictPartial1) {
	                        return function ($dollar43) {
	                            return $dollar43;
	                        };
	                    };
	                    return __unused(dictPartial)((function () {
	                        if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
	                            return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
	                            return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
	                        };
	                        if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
	                        };
	                        if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
	                        };
	                        if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
	                        };
	                        if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
	                        };
	                        if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
	                            return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
	                        };
	                        throw new Error("Failed pattern match at Data.Map line 309, column 9 - line 326, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
	                    })());
	                };
	                throw new Error("Failed pattern match at Data.Map line 306, column 5 - line 326, column 136: " + [ ctxs.constructor.name ]);
	            };
	        };
	    });
	    var removeMaxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctx) {
	            return function (m) {
	                var __unused = function (dictPartial1) {
	                    return function ($dollar45) {
	                        return $dollar45;
	                    };
	                };
	                return __unused(dictPartial)((function () {
	                    if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
	                        return up(ctx)(Leaf.value);
	                    };
	                    if (m instanceof Two) {
	                        return removeMaxNode(new Data_List.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
	                    };
	                    if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
	                        return up(new Data_List.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
	                    };
	                    if (m instanceof Three) {
	                        return removeMaxNode(new Data_List.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 338, column 5 - line 342, column 107: " + [ m.constructor.name ]);
	                })());
	            };
	        };
	    });
	    var maxNode = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (m) {
	            var __unused = function (dictPartial1) {
	                return function ($dollar47) {
	                    return $dollar47;
	                };
	            };
	            return __unused(dictPartial)((function () {
	                if (m instanceof Two && m.value3 instanceof Leaf) {
	                    return {
	                        key: m.value1, 
	                        value: m.value2
	                    };
	                };
	                if (m instanceof Two) {
	                    return maxNode(m.value3);
	                };
	                if (m instanceof Three && m.value6 instanceof Leaf) {
	                    return {
	                        key: m.value4, 
	                        value: m.value5
	                    };
	                };
	                if (m instanceof Three) {
	                    return maxNode(m.value6);
	                };
	                throw new Error("Failed pattern match at Data.Map line 329, column 33 - line 333, column 45: " + [ m.constructor.name ]);
	            })());
	        };
	    });
	    var comp = Data_Ord.compare(dictOrd);
	    var down = Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (ctx) {
	            return function (k) {
	                return function (m) {
	                    if (m instanceof Leaf) {
	                        return Data_Maybe.Nothing.value;
	                    };
	                    if (m instanceof Two) {
	                        var $493 = comp(k)(m.value1);
	                        if (m.value3 instanceof Leaf && $493 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
	                        };
	                        if ($493 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value0);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
	                        };
	                        if ($493 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx))(k)(m.value0);
	                        };
	                        return down(new Data_List.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(k)(m.value3);
	                    };
	                    if (m instanceof Three) {
	                        var leaves = (function () {
	                            if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
	                                return true;
	                            };
	                            return false;
	                        })();
	                        var $502 = comp(k)(m.value1);
	                        var $503 = comp(k)(m.value4);
	                        if (leaves && $502 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
	                        };
	                        if (leaves && $503 instanceof Data_Ordering.EQ) {
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
	                        };
	                        if ($502 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value0);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
	                        };
	                        if ($503 instanceof Data_Ordering.EQ) {
	                            var max = maxNode(m.value3);
	                            return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
	                        };
	                        if ($502 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx))(k)(m.value0);
	                        };
	                        if ($502 instanceof Data_Ordering.GT && $503 instanceof Data_Ordering.LT) {
	                            return down(new Data_List.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx))(k)(m.value3);
	                        };
	                        return down(new Data_List.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(k)(m.value6);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 279, column 36 - line 302, column 82: " + [ m.constructor.name ]);
	                };
	            };
	        };
	    });
	    return down(Data_List.Nil.value);
	};
	var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return function (m) {
	            return Data_Foldable.foldMap(Data_List.foldableList)(dictMonoid)(f)(values(m));
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Foldable.foldl(Data_List.foldableList)(f)(z)(values(m));
	        };
	    };
	}, function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
	        };
	    };
	});
	var findMin = function (v) {
	    if (v instanceof Leaf) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Two) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1, 
	            value: v.value2
	        }))(findMin(v.value0)));
	    };
	    if (v instanceof Three) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1, 
	            value: v.value2
	        }))(findMin(v.value0)));
	    };
	    throw new Error("Failed pattern match at Data.Map line 205, column 1 - line 205, column 23: " + [ v.constructor.name ]);
	};
	var lookupGT = function (dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $525 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($525 instanceof Data_Ordering.EQ) {
	                    return findMin(v1.value3);
	                };
	                if ($525 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupGT(dictOrd)(v)(v1.value0)));
	                };
	                if ($525 instanceof Data_Ordering.GT) {
	                    return lookupGT(dictOrd)(v)(v1.value3);
	                };
	                throw new Error("Failed pattern match at Data.Map line 188, column 37 - line 191, column 25: " + [ $525.constructor.name ]);
	            };
	            if (v1 instanceof Three) {
	                var $530 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($530 instanceof Data_Ordering.EQ) {
	                    return Data_Function.apply(findMin)(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                if ($530 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupGT(dictOrd)(v)(v1.value0)));
	                };
	                if ($530 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(lookupGT(dictOrd)(v))(new Two(v1.value3, v1.value4, v1.value5, v1.value6));
	                };
	                throw new Error("Failed pattern match at Data.Map line 192, column 49 - line 195, column 41: " + [ $530.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 187, column 1 - line 187, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var findMax = function (v) {
	    if (v instanceof Leaf) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Two) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value1, 
	            value: v.value2
	        }))(findMax(v.value3)));
	    };
	    if (v instanceof Three) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	            key: v.value4, 
	            value: v.value5
	        }))(findMax(v.value6)));
	    };
	    throw new Error("Failed pattern match at Data.Map line 199, column 1 - line 199, column 23: " + [ v.constructor.name ]);
	};
	var lookupLT = function (dictOrd) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Leaf) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v1 instanceof Two) {
	                var $552 = Data_Ord.compare(dictOrd)(v)(v1.value1);
	                if ($552 instanceof Data_Ordering.EQ) {
	                    return findMax(v1.value0);
	                };
	                if ($552 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value1, 
	                        value: v1.value2
	                    }))(lookupLT(dictOrd)(v)(v1.value3)));
	                };
	                if ($552 instanceof Data_Ordering.LT) {
	                    return lookupLT(dictOrd)(v)(v1.value0);
	                };
	                throw new Error("Failed pattern match at Data.Map line 164, column 37 - line 167, column 24: " + [ $552.constructor.name ]);
	            };
	            if (v1 instanceof Three) {
	                var $557 = Data_Ord.compare(dictOrd)(v)(v1.value4);
	                if ($557 instanceof Data_Ordering.EQ) {
	                    return Data_Function.apply(findMax)(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                if ($557 instanceof Data_Ordering.GT) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Data_Maybe.fromMaybe({
	                        key: v1.value4, 
	                        value: v1.value5
	                    }))(lookupLT(dictOrd)(v)(v1.value6)));
	                };
	                if ($557 instanceof Data_Ordering.LT) {
	                    return Data_Function.apply(lookupLT(dictOrd)(v))(new Two(v1.value0, v1.value1, v1.value2, v1.value3));
	                };
	                throw new Error("Failed pattern match at Data.Map line 168, column 49 - line 171, column 40: " + [ $557.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Data.Map line 163, column 1 - line 163, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	var eqMap = function (dictEq) {
	    return function (dictEq1) {
	        return new Data_Eq.Eq(function (m1) {
	            return function (m2) {
	                return Data_Eq.eq(Data_List.eqList(Data_Tuple.eqTuple(dictEq)(dictEq1)))(toList(m1))(toList(m2));
	            };
	        });
	    };
	};
	var ordMap = function (dictOrd) {
	    return function (dictOrd1) {
	        return new Data_Ord.Ord(function () {
	            return eqMap(dictOrd["__superclass_Data.Eq.Eq_0"]())(dictOrd1["__superclass_Data.Eq.Eq_0"]());
	        }, function (m1) {
	            return function (m2) {
	                return Data_Ord.compare(Data_List.ordList(Data_Tuple.ordTuple(dictOrd)(dictOrd1)))(toList(m1))(toList(m2));
	            };
	        });
	    };
	};
	var empty = Leaf.value;
	var fromFoldable = function (dictOrd) {
	    return function (dictFoldable) {
	        return Data_Foldable.foldl(dictFoldable)(function (m) {
	            return function (v) {
	                return insert(dictOrd)(v.value0)(v.value1)(m);
	            };
	        })(empty);
	    };
	};
	var fromList = function (dictOrd) {
	    return fromFoldable(dictOrd)(Data_List.foldableList);
	};
	var $$delete = function (dictOrd) {
	    return function (k) {
	        return function (m) {
	            return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
	        };
	    };
	};
	var checkValid = function (tree) {
	    var allHeights = function (v) {
	        if (v instanceof Leaf) {
	            return Control_Applicative.pure(Data_List.applicativeList)(0);
	        };
	        if (v instanceof Two) {
	            return Data_Functor.map(Data_List.functorList)(function (n) {
	                return n + 1 | 0;
	            })(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value0))(allHeights(v.value3)));
	        };
	        if (v instanceof Three) {
	            return Data_Functor.map(Data_List.functorList)(function (n) {
	                return n + 1 | 0;
	            })(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value0))(Data_Semigroup.append(Data_List.semigroupList)(allHeights(v.value3))(allHeights(v.value6))));
	        };
	        throw new Error("Failed pattern match at Data.Map line 120, column 3 - line 120, column 30: " + [ v.constructor.name ]);
	    };
	    return Data_List.length(Data_List.nub(Data_Eq.eqInt)(allHeights(tree))) === 1;
	};
	var alter = function (dictOrd) {
	    return function (f) {
	        return function (k) {
	            return function (m) {
	                var $580 = f(lookup(dictOrd)(k)(m));
	                if ($580 instanceof Data_Maybe.Nothing) {
	                    return $$delete(dictOrd)(k)(m);
	                };
	                if ($580 instanceof Data_Maybe.Just) {
	                    return insert(dictOrd)(k)($580.value0)(m);
	                };
	                throw new Error("Failed pattern match at Data.Map line 347, column 15 - line 349, column 25: " + [ $580.constructor.name ]);
	            };
	        };
	    };
	};
	var fromFoldableWith = function (dictOrd) {
	    return function (dictFoldable) {
	        return function (f) {
	            var combine = function (v) {
	                return function (v1) {
	                    if (v1 instanceof Data_Maybe.Just) {
	                        return Data_Function.apply(Data_Maybe.Just.create)(f(v)(v1.value0));
	                    };
	                    if (v1 instanceof Data_Maybe.Nothing) {
	                        return new Data_Maybe.Just(v);
	                    };
	                    throw new Error("Failed pattern match at Data.Map line 364, column 3 - line 364, column 38: " + [ v.constructor.name, v1.constructor.name ]);
	                };
	            };
	            return Data_Foldable.foldl(dictFoldable)(function (m) {
	                return function (v) {
	                    return alter(dictOrd)(combine(v.value1))(v.value0)(m);
	                };
	            })(empty);
	        };
	    };
	};
	var fromListWith = function (dictOrd) {
	    return fromFoldableWith(dictOrd)(Data_List.foldableList);
	};
	var unionWith = function (dictOrd) {
	    return function (f) {
	        return function (m1) {
	            return function (m2) {
	                var go = function (m) {
	                    return function (v) {
	                        return alter(dictOrd)(function ($593) {
	                            return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($593));
	                        })(v.value0)(m);
	                    };
	                };
	                return Data_Foldable.foldl(Data_List.foldableList)(go)(m2)(toList(m1));
	            };
	        };
	    };
	};
	var union = function (dictOrd) {
	    return unionWith(dictOrd)(Data_Function["const"]);
	};
	var semigroupMap = function (dictOrd) {
	    return new Data_Semigroup.Semigroup(union(dictOrd));
	};
	var monoidMap = function (dictOrd) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupMap(dictOrd);
	    }, empty);
	};
	var traversableMap = function (dictOrd) {
	    return new Data_Traversable.Traversable(function () {
	        return foldableMap;
	    }, function () {
	        return functorMap;
	    }, function (dictApplicative) {
	        return Data_Traversable.traverse(traversableMap(dictOrd))(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	    }, function (dictApplicative) {
	        return function (f) {
	            return function (ms) {
	                return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
	                    return function (acc) {
	                        return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(union(dictOrd))(x))(acc);
	                    };
	                })(Control_Applicative.pure(dictApplicative)(empty))(Data_Functor.map(Data_List.functorList)(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Data_Functor.map(Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
	            };
	        };
	    });
	};
	var unions = function (dictOrd) {
	    return function (dictFoldable) {
	        return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
	    };
	};
	var update = function (dictOrd) {
	    return function (f) {
	        return function (k) {
	            return function (m) {
	                return alter(dictOrd)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
	            };
	        };
	    };
	};
	module.exports = {
	    alter: alter, 
	    checkValid: checkValid, 
	    "delete": $$delete, 
	    empty: empty, 
	    findMax: findMax, 
	    findMin: findMin, 
	    fromFoldable: fromFoldable, 
	    fromFoldableWith: fromFoldableWith, 
	    fromList: fromList, 
	    fromListWith: fromListWith, 
	    insert: insert, 
	    isEmpty: isEmpty, 
	    keys: keys, 
	    lookup: lookup, 
	    lookupGE: lookupGE, 
	    lookupGT: lookupGT, 
	    lookupLE: lookupLE, 
	    lookupLT: lookupLT, 
	    member: member, 
	    pop: pop, 
	    showTree: showTree, 
	    singleton: singleton, 
	    size: size, 
	    toList: toList, 
	    union: union, 
	    unionWith: unionWith, 
	    unions: unions, 
	    update: update, 
	    values: values, 
	    eqMap: eqMap, 
	    showMap: showMap, 
	    ordMap: ordMap, 
	    semigroupMap: semigroupMap, 
	    monoidMap: monoidMap, 
	    functorMap: functorMap, 
	    foldableMap: foldableMap, 
	    traversableMap: traversableMap
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 194 */
/*!*********************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Component/ChildPath.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Injector = __webpack_require__(/*! ./lib/purescript-halogen/src/Data/Injector.purs */ 195);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var ChildPath = (function () {
	    function ChildPath(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    ChildPath.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new ChildPath(value0, value1, value2);
	            };
	        };
	    };
	    return ChildPath;
	})();
	var prjState = function (v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value0(dictChoice)(dictApplicative);
	        };
	    });
	};
	var prjSlot = function (v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value2(dictChoice)(dictApplicative);
	        };
	    });
	};
	var prjQuery = function (v) {
	    return Data_Injector.prj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value1(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injState = function (v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value0(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injSlot = function (v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value2(dictChoice)(dictApplicative);
	        };
	    });
	};
	var injQuery = function (v) {
	    return Data_Injector.inj(function (dictChoice) {
	        return function (dictApplicative) {
	            return v.value1(dictChoice)(dictApplicative);
	        };
	    });
	};
	var cpR = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRE(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRC(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injRE(dictChoice)(dictApplicative);
	    };
	});
	var cpL = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLE(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLC(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injLE(dictChoice)(dictApplicative);
	    };
	});
	var cpI = new ChildPath(function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	}, function (dictChoice) {
	    return function (dictApplicative) {
	        return Data_Injector.injI(dictChoice)(dictApplicative);
	    };
	});
	var compose = function (v) {
	    return function (v1) {
	        return new ChildPath(function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($76) {
	                    return v.value0(dictChoice)(dictApplicative)(v1.value0(dictChoice)(dictApplicative)($76));
	                };
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($77) {
	                    return v.value1(dictChoice)(dictApplicative)(v1.value1(dictChoice)(dictApplicative)($77));
	                };
	            };
	        }, function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($78) {
	                    return v.value2(dictChoice)(dictApplicative)(v1.value2(dictChoice)(dictApplicative)($78));
	                };
	            };
	        });
	    };
	};
	module.exports = {
	    ChildPath: ChildPath, 
	    compose: compose, 
	    cpI: cpI, 
	    cpL: cpL, 
	    cpR: cpR, 
	    injQuery: injQuery, 
	    injSlot: injSlot, 
	    injState: injState, 
	    prjQuery: prjQuery, 
	    prjSlot: prjSlot, 
	    prjState: prjState
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 195 */
/*!*******************************************************!*\
  !*** ./lib/purescript-halogen/src/Data/Injector.purs ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Const = __webpack_require__(/*! ./bower_components/purescript-const/src/Data/Const.purs */ 196);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Maybe_First = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe/First.purs */ 103);
	var Data_Profunctor = __webpack_require__(/*! ./bower_components/purescript-profunctor/src/Data/Profunctor.purs */ 198);
	var Data_Profunctor_Choice_1 = __webpack_require__(/*! ./bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs */ 199);
	var Data_Profunctor_Choice_1 = __webpack_require__(/*! ./bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs */ 199);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Tagged = function (x) {
	    return x;
	};
	var unTagged = function (v) {
	    return v;
	};
	var profunctorTagged = new Data_Profunctor.Profunctor(function (v) {
	    return function (f) {
	        return function (v1) {
	            return f(v1);
	        };
	    };
	});
	var prj = function (p) {
	    return function ($25) {
	        return Data_Maybe_First.runFirst(Data_Const.getConst(p(Data_Profunctor_Choice_1.choiceFn)(Data_Const.applicativeConst(Data_Maybe_First.monoidFirst))(function ($26) {
	            return Data_Const.Const(Data_Maybe_First.First(Data_Maybe.Just.create($26)));
	        })($25)));
	    };
	};
	var prism = function (f) {
	    return function (g) {
	        return function (dictChoice) {
	            return function (dictApplicative) {
	                return function ($27) {
	                    return Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(g)(Data_Either.either(Control_Applicative.pure(dictApplicative))(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)))(Data_Profunctor_Choice_1.right(dictChoice)($27));
	                };
	            };
	        };
	    };
	};
	var prism$prime = function (f) {
	    return function (g) {
	        return function (dictChoice) {
	            return function (dictApplicative) {
	                return prism(f)(function (s) {
	                    return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(g(s));
	                })(dictChoice)(dictApplicative);
	            };
	        };
	    };
	};
	var injRE = function (dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Either.Right.create)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
	    };
	};
	var injRC = function (dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Functor_Coproduct.right)(Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(dictChoice)(dictApplicative);
	    };
	};
	var injLE = function (dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Either.Left.create)(Data_Either.either(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
	    };
	};
	var injLC = function (dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Data_Functor_Coproduct.left)(Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Data_Function["const"](Data_Maybe.Nothing.value)))(dictChoice)(dictApplicative);
	    };
	};
	var injI = function (dictChoice) {
	    return function (dictApplicative) {
	        return prism$prime(Control_Category.id(Control_Category.categoryFn))(Data_Maybe.Just.create)(dictChoice)(dictApplicative);
	    };
	};
	var choiceTagged = new Data_Profunctor_Choice_1.Choice(function () {
	    return profunctorTagged;
	}, function (v) {
	    return new Data_Either.Left(v);
	}, function (v) {
	    return new Data_Either.Right(v);
	});
	var inj = function (p) {
	    return function ($28) {
	        return Data_Identity.runIdentity(unTagged(p(choiceTagged)(Data_Identity.applicativeIdentity)(Tagged(Data_Identity.Identity($28)))));
	    };
	};
	module.exports = {
	    inj: inj, 
	    injI: injI, 
	    injLC: injLC, 
	    injLE: injLE, 
	    injRC: injRC, 
	    injRE: injRE, 
	    prj: prj
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 196 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-const/src/Data/Const.purs ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_BooleanAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/BooleanAlgebra.purs */ 50);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_CommutativeRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/CommutativeRing.purs */ 69);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_Field = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Field.purs */ 72);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Functor_Contravariant = __webpack_require__(/*! ./bower_components/purescript-contravariant/src/Data/Functor/Contravariant.purs */ 197);
	var Data_Functor_Invariant = __webpack_require__(/*! ./bower_components/purescript-invariant/src/Data/Functor/Invariant.purs */ 93);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Const = function (x) {
	    return x;
	};
	var showConst = function (dictShow) {
	    return new Data_Show.Show(function (v) {
	        return "(Const " + (Data_Show.show(dictShow)(v) + ")");
	    });
	};
	var semiringConst = function (dictSemiring) {
	    return new Data_Semiring.Semiring(function (v) {
	        return function (v1) {
	            return Data_Semiring.add(dictSemiring)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_Semiring.mul(dictSemiring)(v)(v1);
	        };
	    }, Data_Semiring.one(dictSemiring), Data_Semiring.zero(dictSemiring));
	};
	var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var semigroupConst = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var ringConst = function (dictRing) {
	    return new Data_Ring.Ring(function () {
	        return semiringConst(dictRing["__superclass_Data.Semiring.Semiring_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ring.sub(dictRing)(v)(v1);
	        };
	    });
	};
	var monoidConst = function (dictMonoid) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupConst(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, Data_Monoid.mempty(dictMonoid));
	};
	var heytingAlgebraConst = function (dictHeytingAlgebra) {
	    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
	        };
	    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), function (v) {
	        return function (v1) {
	            return Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v)(v1);
	        };
	    }, function (v) {
	        return Data_HeytingAlgebra.not(dictHeytingAlgebra)(v);
	    }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
	};
	var getConst = function (v) {
	    return v;
	};
	var functorConst = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));
	var foldableConst = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (v) {
	        return function (v1) {
	            return Data_Monoid.mempty(dictMonoid);
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	}, function (v) {
	    return function (z) {
	        return function (v1) {
	            return z;
	        };
	    };
	});
	var traversableConst = new Data_Traversable.Traversable(function () {
	    return foldableConst;
	}, function () {
	    return functorConst;
	}, function (dictApplicative) {
	    return function (v) {
	        return Control_Applicative.pure(dictApplicative)(v);
	    };
	}, function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return Control_Applicative.pure(dictApplicative)(v1);
	        };
	    };
	});
	var eqConst = function (dictEq) {
	    return new Data_Eq.Eq(function (v) {
	        return function (v1) {
	            return Data_Eq.eq(dictEq)(v)(v1);
	        };
	    });
	};
	var ordConst = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqConst(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Data_Ord.compare(dictOrd)(v)(v1);
	        };
	    });
	};
	var contravariantConst = new Data_Functor_Contravariant.Contravariant(function (v) {
	    return function (v1) {
	        return v1;
	    };
	});
	var commutativeRingConst = function (dictCommutativeRing) {
	    return new Data_CommutativeRing.CommutativeRing(function () {
	        return ringConst(dictCommutativeRing["__superclass_Data.Ring.Ring_0"]());
	    });
	};
	var euclideanRingConst = function (dictEuclideanRing) {
	    return new Data_EuclideanRing.EuclideanRing(function () {
	        return commutativeRingConst(dictEuclideanRing["__superclass_Data.CommutativeRing.CommutativeRing_0"]());
	    }, function (v) {
	        return Data_EuclideanRing.degree(dictEuclideanRing)(v);
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.div(dictEuclideanRing)(v)(v1);
	        };
	    }, function (v) {
	        return function (v1) {
	            return Data_EuclideanRing.mod(dictEuclideanRing)(v)(v1);
	        };
	    });
	};
	var fieldConst = function (dictField) {
	    return new Data_Field.Field(function () {
	        return euclideanRingConst(dictField["__superclass_Data.EuclideanRing.EuclideanRing_0"]());
	    });
	};
	var boundedConst = function (dictBounded) {
	    return new Data_Bounded.Bounded(function () {
	        return ordConst(dictBounded["__superclass_Data.Ord.Ord_0"]());
	    }, Data_Bounded.bottom(dictBounded), Data_Bounded.top(dictBounded));
	};
	var booleanAlgebraConst = function (dictBooleanAlgebra) {
	    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
	        return heytingAlgebraConst(dictBooleanAlgebra["__superclass_Data.HeytingAlgebra.HeytingAlgebra_0"]());
	    });
	};
	var applyConst = function (dictSemigroup) {
	    return new Control_Apply.Apply(function () {
	        return functorConst;
	    }, function (v) {
	        return function (v1) {
	            return Data_Semigroup.append(dictSemigroup)(v)(v1);
	        };
	    });
	};
	var bindConst = function (dictSemigroup) {
	    return new Control_Bind.Bind(function () {
	        return applyConst(dictSemigroup);
	    }, function (v) {
	        return function (v1) {
	            return v;
	        };
	    });
	};
	var applicativeConst = function (dictMonoid) {
	    return new Control_Applicative.Applicative(function () {
	        return applyConst(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]());
	    }, function (v) {
	        return Data_Monoid.mempty(dictMonoid);
	    });
	};
	module.exports = {
	    Const: Const, 
	    getConst: getConst, 
	    eqConst: eqConst, 
	    ordConst: ordConst, 
	    boundedConst: boundedConst, 
	    showConst: showConst, 
	    semigroupoidConst: semigroupoidConst, 
	    semigroupConst: semigroupConst, 
	    monoidConst: monoidConst, 
	    semiringConst: semiringConst, 
	    ringConst: ringConst, 
	    euclideanRingConst: euclideanRingConst, 
	    commutativeRingConst: commutativeRingConst, 
	    fieldConst: fieldConst, 
	    heytingAlgebraConst: heytingAlgebraConst, 
	    booleanAlgebraConst: booleanAlgebraConst, 
	    functorConst: functorConst, 
	    invariantConst: invariantConst, 
	    contravariantConst: contravariantConst, 
	    applyConst: applyConst, 
	    bindConst: bindConst, 
	    applicativeConst: applicativeConst, 
	    foldableConst: foldableConst, 
	    traversableConst: traversableConst
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 197 */
/*!***************************************************************************************!*\
  !*** ./bower_components/purescript-contravariant/src/Data/Functor/Contravariant.purs ***!
  \***************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Void = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Void.purs */ 59);
	var Contravariant = function (cmap) {
	    this.cmap = cmap;
	};
	var cmap = function (dict) {
	    return dict.cmap;
	};
	var cmapFlipped = function (dictContravariant) {
	    return function (x) {
	        return function (f) {
	            return cmap(dictContravariant)(f)(x);
	        };
	    };
	};
	var coerce = function (dictContravariant) {
	    return function (dictFunctor) {
	        return function (a) {
	            return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
	        };
	    };
	};
	module.exports = {
	    Contravariant: Contravariant, 
	    cmap: cmap, 
	    cmapFlipped: cmapFlipped, 
	    coerce: coerce
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 198 */
/*!*************************************************************************!*\
  !*** ./bower_components/purescript-profunctor/src/Data/Profunctor.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Profunctor = function (dimap) {
	    this.dimap = dimap;
	};
	var profunctorFn = new Profunctor(function (a2b) {
	    return function (c2d) {
	        return function (b2c) {
	            return function ($4) {
	                return c2d(b2c(a2b($4)));
	            };
	        };
	    };
	});
	var dimap = function (dict) {
	    return dict.dimap;
	};
	var lmap = function (dictProfunctor) {
	    return function (a2b) {
	        return dimap(dictProfunctor)(a2b)(Control_Category.id(Control_Category.categoryFn));
	    };
	};
	var rmap = function (dictProfunctor) {
	    return function (b2c) {
	        return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
	    };
	};
	var arr = function (dictCategory) {
	    return function (dictProfunctor) {
	        return function (f) {
	            return rmap(dictProfunctor)(f)(Control_Category.id(dictCategory));
	        };
	    };
	};
	module.exports = {
	    Profunctor: Profunctor, 
	    arr: arr, 
	    dimap: dimap, 
	    lmap: lmap, 
	    rmap: rmap, 
	    profunctorFn: profunctorFn
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 199 */
/*!********************************************************************************!*\
  !*** ./bower_components/purescript-profunctor/src/Data/Profunctor/Choice.purs ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Profunctor = __webpack_require__(/*! ./bower_components/purescript-profunctor/src/Data/Profunctor.purs */ 198);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
	    this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
	    this.left = left;
	    this.right = right;
	};
	var right = function (dict) {
	    return dict.right;
	};
	var left = function (dict) {
	    return dict.left;
	};
	var splitChoice = function (dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(left(dictChoice)(l))(right(dictChoice)(r));
	            };
	        };
	    };
	};
	var fanin = function (dictCategory) {
	    return function (dictChoice) {
	        return function (l) {
	            return function (r) {
	                var join = Data_Profunctor.dimap(dictChoice["__superclass_Data.Profunctor.Profunctor_0"]())(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn)))(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(dictCategory));
	                return Control_Semigroupoid.composeFlipped(dictCategory["__superclass_Control.Semigroupoid.Semigroupoid_0"]())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
	            };
	        };
	    };
	};
	var choiceFn = new Choice(function () {
	    return Data_Profunctor.profunctorFn;
	}, function (v) {
	    return function (v1) {
	        if (v1 instanceof Data_Either.Left) {
	            return Data_Function.apply(Data_Either.Left.create)(v(v1.value0));
	        };
	        if (v1 instanceof Data_Either.Right) {
	            return new Data_Either.Right(v1.value0);
	        };
	        throw new Error("Failed pattern match at Data.Profunctor.Choice line 33, column 3 - line 33, column 36: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	}, Data_Functor.map(Data_Either.functorEither));
	module.exports = {
	    Choice: Choice, 
	    fanin: fanin, 
	    left: left, 
	    right: right, 
	    splitChoice: splitChoice, 
	    choiceFn: choiceFn
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 200 */
/*!****************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Component/Hook.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Halogen_Query_HalogenF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs */ 201);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var PostRender = (function () {
	    function PostRender(value0) {
	        this.value0 = value0;
	    };
	    PostRender.create = function (value0) {
	        return new PostRender(value0);
	    };
	    return PostRender;
	})();
	var Finalized = (function () {
	    function Finalized(value0) {
	        this.value0 = value0;
	    };
	    Finalized.create = function (value0) {
	        return new Finalized(value0);
	    };
	    return Finalized;
	})();
	var FinalizedF = (function () {
	    function FinalizedF(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    FinalizedF.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new FinalizedF(value0, value1, value2);
	            };
	        };
	    };
	    return FinalizedF;
	})();
	var runFinalized = function (k) {
	    return function (f) {
	        var $6 = Unsafe_Coerce.unsafeCoerce(f);
	        return k($6.value0)($6.value1)($6.value2);
	    };
	};
	var lmapHook = function (v) {
	    return function (v1) {
	        if (v1 instanceof PostRender) {
	            return new PostRender(v(v1.value0));
	        };
	        if (v1 instanceof Finalized) {
	            return new Finalized(v1.value0);
	        };
	        throw new Error("Failed pattern match at Halogen.Component.Hook line 55, column 1 - line 55, column 45: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	};
	var finalized = function (e) {
	    return function (s) {
	        return function (i) {
	            return Unsafe_Coerce.unsafeCoerce(new FinalizedF(e, s, i));
	        };
	    };
	};
	var mapFinalized = function (dictFunctor) {
	    return function (g) {
	        return runFinalized(function (e) {
	            return function (s) {
	                return function (i) {
	                    return finalized(function ($18) {
	                        return Control_Monad_Free.hoistFree(Halogen_Query_HalogenF.hoistHalogenF(dictFunctor)(g))(e($18));
	                    })(s)(i);
	                };
	            };
	        });
	    };
	};
	var rmapHook = function (dictFunctor) {
	    return function (v) {
	        return function (v1) {
	            if (v1 instanceof Finalized) {
	                return new Finalized(mapFinalized(dictFunctor)(v)(v1.value0));
	            };
	            if (v1 instanceof PostRender) {
	                return new PostRender(v1.value0);
	            };
	            throw new Error("Failed pattern match at Halogen.Component.Hook line 64, column 1 - line 64, column 56: " + [ v.constructor.name, v1.constructor.name ]);
	        };
	    };
	};
	module.exports = {
	    PostRender: PostRender, 
	    Finalized: Finalized, 
	    finalized: finalized, 
	    lmapHook: lmapHook, 
	    mapFinalized: mapFinalized, 
	    rmapHook: rmapHook, 
	    runFinalized: runFinalized
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 201 */
/*!****************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Monad_Aff_Free = __webpack_require__(/*! ./bower_components/purescript-aff-free/src/Control/Monad/Aff/Free.purs */ 202);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Halogen_Query_EventSource = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs */ 208);
	var Halogen_Query_StateF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/StateF.purs */ 213);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Coroutine_Stalling = __webpack_require__(/*! ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs */ 212);
	var Pending = (function () {
	    function Pending() {
	
	    };
	    Pending.value = new Pending();
	    return Pending;
	})();
	var Deferred = (function () {
	    function Deferred() {
	
	    };
	    Deferred.value = new Deferred();
	    return Deferred;
	})();
	var StateHF = (function () {
	    function StateHF(value0) {
	        this.value0 = value0;
	    };
	    StateHF.create = function (value0) {
	        return new StateHF(value0);
	    };
	    return StateHF;
	})();
	var SubscribeHF = (function () {
	    function SubscribeHF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    SubscribeHF.create = function (value0) {
	        return function (value1) {
	            return new SubscribeHF(value0, value1);
	        };
	    };
	    return SubscribeHF;
	})();
	var QueryHF = (function () {
	    function QueryHF(value0) {
	        this.value0 = value0;
	    };
	    QueryHF.create = function (value0) {
	        return new QueryHF(value0);
	    };
	    return QueryHF;
	})();
	var RenderHF = (function () {
	    function RenderHF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    RenderHF.create = function (value0) {
	        return function (value1) {
	            return new RenderHF(value0, value1);
	        };
	    };
	    return RenderHF;
	})();
	var RenderPendingHF = (function () {
	    function RenderPendingHF(value0) {
	        this.value0 = value0;
	    };
	    RenderPendingHF.create = function (value0) {
	        return new RenderPendingHF(value0);
	    };
	    return RenderPendingHF;
	})();
	var HaltHF = (function () {
	    function HaltHF() {
	
	    };
	    HaltHF.value = new HaltHF();
	    return HaltHF;
	})();
	var transformHF = function (dictFunctor) {
	    return function (sigma) {
	        return function (phi) {
	            return function (gamma) {
	                return function (h) {
	                    if (h instanceof StateHF) {
	                        return new StateHF(sigma(h.value0));
	                    };
	                    if (h instanceof SubscribeHF) {
	                        return new SubscribeHF(Control_Monad_Free_Trans.bimapFreeT(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(Data_Bifunctor.lmap(Control_Coroutine_Stalling.bifunctorStallF)(phi))(gamma)(Halogen_Query_EventSource.runEventSource(h.value0)), h.value1);
	                    };
	                    if (h instanceof QueryHF) {
	                        return new QueryHF(gamma(h.value0));
	                    };
	                    if (h instanceof RenderHF) {
	                        return new RenderHF(h.value0, h.value1);
	                    };
	                    if (h instanceof RenderPendingHF) {
	                        return new RenderPendingHF(h.value0);
	                    };
	                    if (h instanceof HaltHF) {
	                        return HaltHF.value;
	                    };
	                    throw new Error("Failed pattern match at Halogen.Query.HalogenF line 65, column 3 - line 71, column 21: " + [ h.constructor.name ]);
	                };
	            };
	        };
	    };
	};
	var hoistHalogenF = function (dictFunctor) {
	    return function (eta) {
	        return function (h) {
	            if (h instanceof StateHF) {
	                return new StateHF(h.value0);
	            };
	            if (h instanceof SubscribeHF) {
	                return new SubscribeHF(Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine_Stalling.functorStallF)(dictFunctor)(eta)(Halogen_Query_EventSource.runEventSource(h.value0)), h.value1);
	            };
	            if (h instanceof QueryHF) {
	                return new QueryHF(eta(h.value0));
	            };
	            if (h instanceof RenderHF) {
	                return new RenderHF(h.value0, h.value1);
	            };
	            if (h instanceof RenderPendingHF) {
	                return new RenderPendingHF(h.value0);
	            };
	            if (h instanceof HaltHF) {
	                return HaltHF.value;
	            };
	            throw new Error("Failed pattern match at Halogen.Query.HalogenF line 81, column 3 - line 87, column 15: " + [ h.constructor.name ]);
	        };
	    };
	};
	var functorHalogenF = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (h) {
	            if (h instanceof StateHF) {
	                return new StateHF(Data_Functor.map(Halogen_Query_StateF.functorStateF)(f)(h.value0));
	            };
	            if (h instanceof SubscribeHF) {
	                return new SubscribeHF(h.value0, f(h.value1));
	            };
	            if (h instanceof QueryHF) {
	                return new QueryHF(Data_Functor.map(dictFunctor)(f)(h.value0));
	            };
	            if (h instanceof RenderHF) {
	                return new RenderHF(h.value0, f(h.value1));
	            };
	            if (h instanceof RenderPendingHF) {
	                return new RenderPendingHF(Data_Functor.map(Data_Functor.functorFn)(f)(h.value0));
	            };
	            if (h instanceof HaltHF) {
	                return HaltHF.value;
	            };
	            throw new Error("Failed pattern match at Halogen.Query.HalogenF line 37, column 5 - line 43, column 23: " + [ h.constructor.name ]);
	        };
	    });
	};
	var altHalogenF = function (dictFunctor) {
	    return new Control_Alt.Alt(function () {
	        return functorHalogenF(dictFunctor);
	    }, function (v) {
	        return function (v1) {
	            if (v instanceof HaltHF) {
	                return v1;
	            };
	            return v;
	        };
	    });
	};
	var plusHalogenF = function (dictFunctor) {
	    return new Control_Plus.Plus(function () {
	        return altHalogenF(dictFunctor);
	    }, HaltHF.value);
	};
	var affableHalogenF = function (dictAffable) {
	    return new Control_Monad_Aff_Free.Affable(function ($34) {
	        return QueryHF.create(Control_Monad_Aff_Free.fromAff(dictAffable)($34));
	    });
	};
	module.exports = {
	    StateHF: StateHF, 
	    SubscribeHF: SubscribeHF, 
	    QueryHF: QueryHF, 
	    RenderHF: RenderHF, 
	    RenderPendingHF: RenderPendingHF, 
	    HaltHF: HaltHF, 
	    Pending: Pending, 
	    Deferred: Deferred, 
	    hoistHalogenF: hoistHalogenF, 
	    transformHF: transformHF, 
	    functorHalogenF: functorHalogenF, 
	    affableHalogenF: affableHalogenF, 
	    altHalogenF: altHalogenF, 
	    plusHalogenF: plusHalogenF
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 202 */
/*!******************************************************************************!*\
  !*** ./bower_components/purescript-aff-free/src/Control/Monad/Aff/Free.purs ***!
  \******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Cont_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs */ 126);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs */ 134);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Control_Monad_List_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs */ 203);
	var Control_Monad_Maybe_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs */ 204);
	var Control_Monad_Reader_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs */ 137);
	var Control_Monad_RWS_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs */ 205);
	var Control_Monad_State_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs */ 206);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs */ 207);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Affable = function (fromAff) {
	    this.fromAff = fromAff;
	};
	var fromAff = function (dict) {
	    return dict.fromAff;
	};
	var fromEff = function (dictAffable) {
	    return function (eff) {
	        return fromAff(dictAffable)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(eff));
	    };
	};
	var monadAffContT = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($20) {
	            return Control_Monad_Trans.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonad)(fromAff(dictAffable)($20));
	        });
	    };
	};
	var monadAffExceptT = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($21) {
	            return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonad)(fromAff(dictAffable)($21));
	        });
	    };
	};
	var monadAffListT = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($22) {
	            return Control_Monad_Trans.lift(Control_Monad_List_Trans.monadTransListT)(dictMonad)(fromAff(dictAffable)($22));
	        });
	    };
	};
	var monadAffMaybe = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($23) {
	            return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonad)(fromAff(dictAffable)($23));
	        });
	    };
	};
	var monadAffRWS = function (dictAffable) {
	    return function (dictMonad) {
	        return function (dictMonoid) {
	            return new Affable(function ($24) {
	                return Control_Monad_Trans.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonad)(fromAff(dictAffable)($24));
	            });
	        };
	    };
	};
	var monadAffReader = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($25) {
	            return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonad)(fromAff(dictAffable)($25));
	        });
	    };
	};
	var monadAffState = function (dictAffable) {
	    return function (dictMonad) {
	        return new Affable(function ($26) {
	            return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad)(fromAff(dictAffable)($26));
	        });
	    };
	};
	var monadAffWriter = function (dictAffable) {
	    return function (dictMonad) {
	        return function (dictMonoid) {
	            return new Affable(function ($27) {
	                return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonad)(fromAff(dictAffable)($27));
	            });
	        };
	    };
	};
	var affableFree = function (dictAffable) {
	    return new Affable(function ($28) {
	        return Control_Monad_Free.liftF(fromAff(dictAffable)($28));
	    });
	};
	var affableAff = new Affable(Control_Category.id(Control_Category.categoryFn));
	module.exports = {
	    Affable: Affable, 
	    fromAff: fromAff, 
	    fromEff: fromEff, 
	    affableAff: affableAff, 
	    affableFree: affableFree, 
	    monadAffContT: monadAffContT, 
	    monadAffExceptT: monadAffExceptT, 
	    monadAffListT: monadAffListT, 
	    monadAffMaybe: monadAffMaybe, 
	    monadAffReader: monadAffReader, 
	    monadAffRWS: monadAffRWS, 
	    monadAffState: monadAffState, 
	    monadAffWriter: monadAffWriter
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 203 */
/*!************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Lazy = __webpack_require__(/*! ./bower_components/purescript-lazy/src/Data/Lazy.purs */ 191);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Unfoldable = __webpack_require__(/*! ./bower_components/purescript-unfoldable/src/Data/Unfoldable.purs */ 164);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Yield = (function () {
	    function Yield(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Yield.create = function (value0) {
	        return function (value1) {
	            return new Yield(value0, value1);
	        };
	    };
	    return Yield;
	})();
	var Skip = (function () {
	    function Skip(value0) {
	        this.value0 = value0;
	    };
	    Skip.create = function (value0) {
	        return new Skip(value0);
	    };
	    return Skip;
	})();
	var Done = (function () {
	    function Done() {
	
	    };
	    Done.value = new Done();
	    return Done;
	})();
	var ListT = (function () {
	    function ListT(value0) {
	        this.value0 = value0;
	    };
	    ListT.create = function (value0) {
	        return new ListT(value0);
	    };
	    return ListT;
	})();
	var wrapLazy = function (dictApplicative) {
	    return function (v) {
	        return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(new Skip(v)));
	    };
	};
	var wrapEffect = function (dictFunctor) {
	    return function (v) {
	        return Data_Function.apply(ListT.create)(Data_Functor.map(dictFunctor)(function ($167) {
	            return Skip.create(Data_Lazy.defer(Data_Function["const"]($167)));
	        })(v));
	    };
	};
	var unfold = function (dictMonad) {
	    return function (f) {
	        return function (z) {
	            var g = function (v) {
	                if (v instanceof Data_Maybe.Just) {
	                    return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
	                        return unfold(dictMonad)(f)(v.value0.value0);
	                    }));
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 119, column 3 - line 119, column 58: " + [ v.constructor.name ]);
	            };
	            return Data_Function.apply(ListT.create)(Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(f(z)));
	        };
	    };
	};
	var uncons = function (dictMonad) {
	    return function (v) {
	        var g = function (v1) {
	            if (v1 instanceof Yield) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
	            };
	            if (v1 instanceof Skip) {
	                return uncons(dictMonad)(Data_Lazy.force(v1.value0));
	            };
	            if (v1 instanceof Done) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 184, column 3 - line 184, column 50: " + [ v1.constructor.name ]);
	        };
	        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v.value0)(g);
	    };
	};
	var tail = function (dictMonad) {
	    return function (l) {
	        return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
	    };
	};
	var stepMap = function (dictFunctor) {
	    return function (f) {
	        return function (v) {
	            return Data_Function.apply(ListT.create)(Data_Functor.map(dictFunctor)(f)(v.value0));
	        };
	    };
	};
	var takeWhile = function (dictApplicative) {
	    return function (f) {
	        var g = function (v) {
	            if (v instanceof Yield) {
	                var $90 = f(v.value0);
	                if ($90) {
	                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
	                };
	                if (!$90) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 143, column 19 - line 143, column 68: " + [ $90.constructor.name ]);
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 143, column 3 - line 143, column 68: " + [ v.constructor.name ]);
	        };
	        return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g);
	    };
	};
	var scanl = function (dictMonad) {
	    return function (f) {
	        return function (b) {
	            return function (l) {
	                var g = function (v) {
	                    var h = function (v1) {
	                        if (v1 instanceof Yield) {
	                            var b$prime$prime = f(b)(v1.value0);
	                            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), b$prime$prime));
	                        };
	                        if (v1 instanceof Skip) {
	                            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
	                        };
	                        if (v1 instanceof Done) {
	                            return Data_Maybe.Nothing.value;
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.List.Trans line 218, column 5 - line 218, column 78: " + [ v1.constructor.name ]);
	                    };
	                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(h)(v.value1.value0);
	                };
	                return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
	            };
	        };
	    };
	};
	var runListT = function (v) {
	    return v.value0;
	};
	var prepend$prime = function (dictApplicative) {
	    return function (h) {
	        return function (t) {
	            return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
	        };
	    };
	};
	var prepend = function (dictApplicative) {
	    return function (h) {
	        return function (t) {
	            return prepend$prime(dictApplicative)(h)(Data_Function.apply(Data_Lazy.defer)(Data_Function["const"](t)));
	        };
	    };
	};
	var nil = function (dictApplicative) {
	    return Data_Function.apply(ListT.create)(Control_Applicative.pure(dictApplicative)(Done.value));
	};
	var singleton = function (dictApplicative) {
	    return function (a) {
	        return prepend(dictApplicative)(a)(nil(dictApplicative));
	    };
	};
	var take = function (dictApplicative) {
	    return function (v) {
	        return function (fa) {
	            if (v === 0) {
	                return nil(dictApplicative);
	            };
	            var f = function (v1) {
	                if (v1 instanceof Yield) {
	                    return new Yield(v1.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1))(v1.value1));
	                };
	                if (v1 instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v1.value0));
	                };
	                if (v1 instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 136, column 3 - line 136, column 47: " + [ v1.constructor.name ]);
	            };
	            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(fa);
	        };
	    };
	};
	var zipWith$prime = function (dictMonad) {
	    return function (f) {
	        var g = function (v) {
	            return function (v1) {
	                if (v1 instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	                };
	                if (v instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	                };
	                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
	                    return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(prepend$prime(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(Data_Lazy.defer(function (v2) {
	                        return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
	                    })))(f(v.value0.value0)(v1.value0.value0));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 225, column 3 - line 228, column 12: " + [ v.constructor.name, v1.constructor.name ]);
	            };
	        };
	        var loop = function (fa) {
	            return function (fb) {
	                return wrapEffect(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fa))(function (v) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(fb))(function (v1) {
	                        return g(v)(v1);
	                    });
	                }));
	            };
	        };
	        return loop;
	    };
	};
	var zipWith = function (dictMonad) {
	    return function (f) {
	        var g = function (a) {
	            return function (b) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(f(a)(b));
	            };
	        };
	        return zipWith$prime(dictMonad)(g);
	    };
	};
	var mapMaybe = function (dictFunctor) {
	    return function (f) {
	        var g = function (v) {
	            if (v instanceof Yield) {
	                return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 172, column 3 - line 172, column 72: " + [ v.constructor.name ]);
	        };
	        return stepMap(dictFunctor)(g);
	    };
	};
	var iterate = function (dictMonad) {
	    return function (f) {
	        return function (a) {
	            var g = function (a1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a1), a1)));
	            };
	            return unfold(dictMonad)(g)(a);
	        };
	    };
	};
	var repeat = function (dictMonad) {
	    return iterate(dictMonad)(Control_Category.id(Control_Category.categoryFn));
	};
	var head = function (dictMonad) {
	    return function (l) {
	        return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
	    };
	};
	var functorListT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        var g = function (v) {
	            if (v instanceof Yield) {
	                return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
	            };
	            if (v instanceof Skip) {
	                return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 248, column 5 - line 248, column 48: " + [ v.constructor.name ]);
	        };
	        return stepMap(dictFunctor)(g);
	    });
	};
	var fromEffect = function (dictApplicative) {
	    return function (fa) {
	        return Data_Function.apply(ListT.create)(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Function.flip(Yield.create)(Data_Function.apply(Data_Lazy.defer)(function (v) {
	            return nil(dictApplicative);
	        })))(fa));
	    };
	};
	var monadTransListT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return fromEffect(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	});
	var foldl$prime = function (dictMonad) {
	    return function (f) {
	        var loop = function (b) {
	            return function (l) {
	                var g = function (v) {
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 201, column 5 - line 201, column 35: " + [ v.constructor.name ]);
	                };
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
	            };
	        };
	        return loop;
	    };
	};
	var foldl = function (dictMonad) {
	    return function (f) {
	        var loop = function (b) {
	            return function (l) {
	                var g = function (v) {
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(b);
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        return loop(f(b)(v.value0.value0))(v.value0.value1);
	                    };
	                    throw new Error("Failed pattern match at Control.Monad.List.Trans line 209, column 5 - line 209, column 35: " + [ v.constructor.name ]);
	                };
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(uncons(dictMonad)(l))(g);
	            };
	        };
	        return loop;
	    };
	};
	var filter = function (dictFunctor) {
	    return function (f) {
	        var g = function (v) {
	            if (v instanceof Yield) {
	                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
	                var $139 = f(v.value0);
	                if ($139) {
	                    return new Yield(v.value0, s$prime);
	                };
	                if (!$139) {
	                    return new Skip(s$prime);
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 165, column 19 - line 165, column 54: " + [ $139.constructor.name ]);
	            };
	            if (v instanceof Skip) {
	                var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
	                return new Skip(s$prime);
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 165, column 3 - line 165, column 80: " + [ v.constructor.name ]);
	        };
	        return stepMap(dictFunctor)(g);
	    };
	};
	var dropWhile = function (dictApplicative) {
	    return function (f) {
	        var g = function (v) {
	            if (v instanceof Yield) {
	                var $144 = f(v.value0);
	                if ($144) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
	                };
	                if (!$144) {
	                    return new Yield(v.value0, v.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 158, column 19 - line 158, column 70: " + [ $144.constructor.name ]);
	            };
	            if (v instanceof Skip) {
	                return Data_Function.apply(Skip.create)(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
	            };
	            if (v instanceof Done) {
	                return Done.value;
	            };
	            throw new Error("Failed pattern match at Control.Monad.List.Trans line 158, column 3 - line 158, column 70: " + [ v.constructor.name ]);
	        };
	        return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g);
	    };
	};
	var drop = function (dictApplicative) {
	    return function (v) {
	        return function (fa) {
	            if (v === 0) {
	                return fa;
	            };
	            var f = function (v1) {
	                if (v1 instanceof Yield) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1))(v1.value1));
	                };
	                if (v1 instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
	                };
	                if (v1 instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 151, column 3 - line 151, column 44: " + [ v1.constructor.name ]);
	            };
	            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(fa);
	        };
	    };
	};
	var cons = function (dictApplicative) {
	    return function (lh) {
	        return function (t) {
	            return Data_Function.apply(ListT.create)(Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Yield(Data_Lazy.force(lh), t)));
	        };
	    };
	};
	var unfoldableListT = function (dictMonad) {
	    return new Data_Unfoldable.Unfoldable(function (f) {
	        return function (b) {
	            var go = function (v) {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return cons(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
	                        return go(f(v.value0.value1));
	                    }));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 253, column 3 - line 255, column 73: " + [ v.constructor.name ]);
	            };
	            return go(f(b));
	        };
	    });
	};
	var semigroupListT = function (dictApplicative) {
	    return new Data_Semigroup.Semigroup(concat(dictApplicative));
	};
	var concat = function (dictApplicative) {
	    return function (x) {
	        return function (y) {
	            var f = function (v) {
	                if (v instanceof Yield) {
	                    return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
	                    })(v.value1));
	                };
	                if (v instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
	                    })(v.value0));
	                };
	                if (v instanceof Done) {
	                    return new Skip(Data_Function.apply(Data_Lazy.defer)(Data_Function["const"](y)));
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 95, column 3 - line 95, column 43: " + [ v.constructor.name ]);
	            };
	            return stepMap((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(f)(x);
	        };
	    };
	};
	var monoidListT = function (dictApplicative) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupListT(dictApplicative);
	    }, nil(dictApplicative));
	};
	var catMaybes = function (dictFunctor) {
	    return mapMaybe(dictFunctor)(Control_Category.id(Control_Category.categoryFn));
	};
	var monadListT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeListT(dictMonad);
	    }, function () {
	        return bindListT(dictMonad);
	    });
	};
	var bindListT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyListT(dictMonad);
	    }, function (fa) {
	        return function (f) {
	            var g = function (v) {
	                if (v instanceof Yield) {
	                    var h = function (s1) {
	                        return Data_Semigroup.append(semigroupListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s1)(f));
	                    };
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
	                };
	                if (v instanceof Skip) {
	                    return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
	                        return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
	                    })(v.value0));
	                };
	                if (v instanceof Done) {
	                    return Done.value;
	                };
	                throw new Error("Failed pattern match at Control.Monad.List.Trans line 265, column 5 - line 267, column 29: " + [ v.constructor.name ]);
	            };
	            return stepMap(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(g)(fa);
	        };
	    });
	};
	var applyListT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorListT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadListT(dictMonad)));
	};
	var applicativeListT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyListT(dictMonad);
	    }, singleton(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	};
	var monadEffListT = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadListT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($168) {
	        return Control_Monad_Trans.lift(monadTransListT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($168));
	    });
	};
	var altListT = function (dictApplicative) {
	    return new Control_Alt.Alt(function () {
	        return functorListT((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, concat(dictApplicative));
	};
	var plusListT = function (dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altListT(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	    }, nil(dictMonad["__superclass_Control.Applicative.Applicative_0"]()));
	};
	var alternativeListT = function (dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeListT(dictMonad);
	    }, function () {
	        return plusListT(dictMonad);
	    });
	};
	var monadZeroListT = function (dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeListT(dictMonad);
	    }, function () {
	        return monadListT(dictMonad);
	    });
	};
	var monadPlusListT = function (dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroListT(dictMonad);
	    });
	};
	module.exports = {
	    catMaybes: catMaybes, 
	    cons: cons, 
	    drop: drop, 
	    dropWhile: dropWhile, 
	    filter: filter, 
	    foldl: foldl, 
	    "foldl'": foldl$prime, 
	    fromEffect: fromEffect, 
	    head: head, 
	    iterate: iterate, 
	    mapMaybe: mapMaybe, 
	    nil: nil, 
	    prepend: prepend, 
	    "prepend'": prepend$prime, 
	    repeat: repeat, 
	    scanl: scanl, 
	    singleton: singleton, 
	    tail: tail, 
	    take: take, 
	    takeWhile: takeWhile, 
	    uncons: uncons, 
	    unfold: unfold, 
	    wrapEffect: wrapEffect, 
	    wrapLazy: wrapLazy, 
	    zipWith: zipWith, 
	    "zipWith'": zipWith$prime, 
	    semigroupListT: semigroupListT, 
	    monoidListT: monoidListT, 
	    functorListT: functorListT, 
	    unfoldableListT: unfoldableListT, 
	    applyListT: applyListT, 
	    applicativeListT: applicativeListT, 
	    bindListT: bindListT, 
	    monadListT: monadListT, 
	    monadTransListT: monadTransListT, 
	    altListT: altListT, 
	    plusListT: plusListT, 
	    alternativeListT: alternativeListT, 
	    monadZeroListT: monadZeroListT, 
	    monadPlusListT: monadPlusListT, 
	    monadEffListT: monadEffListT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 204 */
/*!*************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_RWS_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/RWS/Class.purs */ 135);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var MaybeT = function (x) {
	    return x;
	};
	var runMaybeT = function (v) {
	    return v;
	};
	var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function ($60) {
	        return MaybeT(Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create)($60));
	    };
	});
	var mapMaybeT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var monadMaybeT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return bindMaybeT(dictMonad);
	    });
	};
	var functorMaybeT = function (dictMonad) {
	    return new Data_Functor.Functor(Control_Applicative.liftA1(applicativeMaybeT(dictMonad)));
	};
	var bindMaybeT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyMaybeT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                if (v1 instanceof Data_Maybe.Nothing) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value);
	                };
	                if (v1 instanceof Data_Maybe.Just) {
	                    var $36 = f(v1.value0);
	                    return $36;
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 5 - line 58, column 22: " + [ v1.constructor.name ]);
	            });
	        };
	    });
	};
	var applyMaybeT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorMaybeT(dictMonad);
	    }, Control_Monad.ap(monadMaybeT(dictMonad)));
	};
	var applicativeMaybeT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyMaybeT(dictMonad);
	    }, function ($61) {
	        return MaybeT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Just.create($61)));
	    });
	};
	var monadContMaybeT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadMaybeT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Data_Function.apply(MaybeT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	            var $38 = f(function (a) {
	                return Data_Function.apply(MaybeT)(Data_Function.apply(c)(new Data_Maybe.Just(a)));
	            });
	            return $38;
	        }));
	    });
	};
	var monadEffMaybe = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadMaybeT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($62) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($62));
	    });
	};
	var monadErrorMaybeT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadMaybeT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return Data_Function.apply(MaybeT)(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
	                var $41 = h(a);
	                return $41;
	            }));
	        };
	    }, function (e) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	    });
	};
	var monadReaderMaybeT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadMaybeT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecMaybeT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function ($63) {
	            return MaybeT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
	                var $42 = f(a);
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($42)(function (m$prime) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                        if (m$prime instanceof Data_Maybe.Nothing) {
	                            return new Data_Either.Right(Data_Maybe.Nothing.value);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(m$prime.value0.value0);
	                        };
	                        if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Maybe.Just(m$prime.value0.value0));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 86, column 11 - line 89, column 45: " + [ m$prime.constructor.name ]);
	                    })());
	                });
	            })($63));
	        };
	    });
	};
	var monadStateMaybeT = function (dictMonadState) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadMaybeT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	    });
	};
	var monadWriterMaybeT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadMaybeT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, mapMaybeT(function (m) {
	        return Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
	            return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
	                return new Data_Tuple.Tuple(r, v.value1);
	            })(v.value0));
	        });
	    }), mapMaybeT(function (m) {
	        return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	            return Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                if (v instanceof Data_Maybe.Nothing) {
	                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.id(Control_Category.categoryFn));
	                };
	                if (v instanceof Data_Maybe.Just) {
	                    return new Data_Tuple.Tuple(new Data_Maybe.Just(v.value0.value0), v.value0.value1);
	                };
	                throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 117, column 5 - line 119, column 43: " + [ v.constructor.name ]);
	            })());
	        }));
	    }), function (wd) {
	        return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var monadRWSMaybeT = function (dictMonadRWS) {
	    return new Control_Monad_RWS_Class.MonadRWS(function () {
	        return monadReaderMaybeT(dictMonadRWS["__superclass_Control.Monad.Reader.Class.MonadReader_0"]());
	    }, function () {
	        return monadStateMaybeT(dictMonadRWS["__superclass_Control.Monad.State.Class.MonadState_2"]());
	    }, function () {
	        return monadWriterMaybeT(dictMonadRWS["__superclass_Control.Monad.Writer.Class.MonadWriter_1"]());
	    });
	};
	var altMaybeT = function (dictMonad) {
	    return new Control_Alt.Alt(function () {
	        return functorMaybeT(dictMonad);
	    }, function (v) {
	        return function (v1) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v2) {
	                if (v2 instanceof Data_Maybe.Nothing) {
	                    return v1;
	                };
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v2);
	            });
	        };
	    });
	};
	var plusMaybeT = function (dictMonad) {
	    return new Control_Plus.Plus(function () {
	        return altMaybeT(dictMonad);
	    }, Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Maybe.Nothing.value));
	};
	var alternativeMaybeT = function (dictMonad) {
	    return new Control_Alternative.Alternative(function () {
	        return applicativeMaybeT(dictMonad);
	    }, function () {
	        return plusMaybeT(dictMonad);
	    });
	};
	var monadZeroMaybeT = function (dictMonad) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeMaybeT(dictMonad);
	    }, function () {
	        return monadMaybeT(dictMonad);
	    });
	};
	var monadPlusMaybeT = function (dictMonad) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroMaybeT(dictMonad);
	    });
	};
	module.exports = {
	    MaybeT: MaybeT, 
	    mapMaybeT: mapMaybeT, 
	    runMaybeT: runMaybeT, 
	    functorMaybeT: functorMaybeT, 
	    applyMaybeT: applyMaybeT, 
	    applicativeMaybeT: applicativeMaybeT, 
	    bindMaybeT: bindMaybeT, 
	    monadMaybeT: monadMaybeT, 
	    monadTransMaybeT: monadTransMaybeT, 
	    altMaybeT: altMaybeT, 
	    plusMaybeT: plusMaybeT, 
	    alternativeMaybeT: alternativeMaybeT, 
	    monadPlusMaybeT: monadPlusMaybeT, 
	    monadZeroMaybeT: monadZeroMaybeT, 
	    monadRecMaybeT: monadRecMaybeT, 
	    monadEffMaybe: monadEffMaybe, 
	    monadContMaybeT: monadContMaybeT, 
	    monadErrorMaybeT: monadErrorMaybeT, 
	    monadReaderMaybeT: monadReaderMaybeT, 
	    monadStateMaybeT: monadStateMaybeT, 
	    monadWriterMaybeT: monadWriterMaybeT, 
	    monadRWSMaybeT: monadRWSMaybeT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 205 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_RWS_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/RWS/Class.purs */ 135);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var RWSResult = (function () {
	    function RWSResult(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    RWSResult.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new RWSResult(value0, value1, value2);
	            };
	        };
	    };
	    return RWSResult;
	})();
	var RWST = function (x) {
	    return x;
	};
	var withRWST = function (f) {
	    return function (m) {
	        return function (r) {
	            return function (s) {
	                return Data_Tuple.uncurry(m)(f(r)(s));
	            };
	        };
	    };
	};
	var runRWST = function (v) {
	    return v;
	};
	var monadTransRWST = function (dictMonoid) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (m) {
	            return function (v) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (a) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                    });
	                };
	            };
	        };
	    });
	};
	var mapRWST = function (f) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return f(v(r)(s));
	            };
	        };
	    };
	};
	var functorRWST = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (r) {
	                return function (s) {
	                    return Data_Functor.map(dictFunctor)(function (v1) {
	                        return new RWSResult(v1.value0, f(v1.value1), v1.value2);
	                    })(v(r)(s));
	                };
	            };
	        };
	    });
	};
	var execRWST = function (dictMonad) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value2));
	                });
	            };
	        };
	    };
	};
	var evalRWST = function (dictMonad) {
	    return function (v) {
	        return function (r) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(r)(s))(function (v1) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value1, v1.value2));
	                });
	            };
	        };
	    };
	};
	var applyRWST = function (dictBind) {
	    return function (dictMonoid) {
	        return new Control_Apply.Apply(function () {
	            return functorRWST((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return function (r) {
	                    return function (s) {
	                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
	                            return Data_Functor.mapFlipped((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(v1(r)(v2.value0))(function (v3) {
	                                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v2.value2)(v3.value2));
	                            });
	                        });
	                    };
	                };
	            };
	        });
	    };
	};
	var bindRWST = function (dictBind) {
	    return function (dictMonoid) {
	        return new Control_Bind.Bind(function () {
	            return applyRWST(dictBind)(dictMonoid);
	        }, function (v) {
	            return function (f) {
	                return function (r) {
	                    return function (s) {
	                        return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
	                            var $89 = f(v1.value1);
	                            return Data_Functor.mapFlipped((dictBind["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())($89(r)(v1.value0))(function (v2) {
	                                return new RWSResult(v2.value0, v2.value1, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v1.value2)(v2.value2));
	                            });
	                        });
	                    };
	                };
	            };
	        });
	    };
	};
	var applicativeRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Applicative.Applicative(function () {
	            return applyRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
	        }, function (a) {
	            return function (v) {
	                return function (s) {
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                };
	            };
	        });
	    };
	};
	var monadRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad.Monad(function () {
	            return applicativeRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return bindRWST(dictMonad["__superclass_Control.Bind.Bind_1"]())(dictMonoid);
	        });
	    };
	};
	var monadEffRWS = function (dictMonoid) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadRWST(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function ($134) {
	            return Control_Monad_Trans.lift(monadTransRWST(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($134));
	        });
	    };
	};
	var monadErrorRWST = function (dictMonadError) {
	    return function (dictMonoid) {
	        return new Control_Monad_Error_Class.MonadError(function () {
	            return monadRWST(dictMonadError["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function (m) {
	            return function (h) {
	                return Data_Function.apply(RWST)(function (r) {
	                    return function (s) {
	                        return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
	                            var $99 = h(e);
	                            return $99(r)(s);
	                        });
	                    };
	                });
	            };
	        }, function (e) {
	            return Control_Monad_Trans.lift(monadTransRWST(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	        });
	    };
	};
	var monadReaderRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_Reader_Class.MonadReader(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (r) {
	            return function (s) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
	            };
	        }, function (f) {
	            return function (m) {
	                return function (r) {
	                    return function (s) {
	                        return m(f(r))(s);
	                    };
	                };
	            };
	        });
	    };
	};
	var monadRecRWST = function (dictMonadRec) {
	    return function (dictMonoid) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadRWST(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(dictMonoid);
	        }, function (k) {
	            return function (a) {
	                var k$prime = function (r) {
	                    return function (v) {
	                        var $103 = k(v.value1);
	                        return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($103(r)(v.value0))(function (v1) {
	                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                                if (v1.value1 instanceof Data_Either.Left) {
	                                    return new Data_Either.Left(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
	                                };
	                                if (v1.value1 instanceof Data_Either.Right) {
	                                    return new Data_Either.Right(new RWSResult(v1.value0, v1.value1.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value2)(v1.value2)));
	                                };
	                                throw new Error("Failed pattern match at Control.Monad.RWS.Trans line 113, column 11 - line 115, column 69: " + [ v1.value1.constructor.name ]);
	                            })());
	                        });
	                    };
	                };
	                return function (r) {
	                    return function (s) {
	                        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
	                    };
	                };
	            };
	        });
	    };
	};
	var monadStateRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (f) {
	            return function (v) {
	                return function (s) {
	                    var $115 = f(s);
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult($115.value1, $115.value0, Data_Monoid.mempty(dictMonoid)));
	                };
	            };
	        });
	    };
	};
	var monadWriterRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_Writer_Class.MonadWriter(function () {
	            return monadRWST(dictMonad)(dictMonoid);
	        }, function (m) {
	            return function (r) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
	                    });
	                };
	            };
	        }, function (m) {
	            return function (r) {
	                return function (s) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m(r)(s))(function (v) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
	                    });
	                };
	            };
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new RWSResult(s, v.value0, v.value1));
	                };
	            };
	        });
	    };
	};
	var monadRWSRWST = function (dictMonad) {
	    return function (dictMonoid) {
	        return new Control_Monad_RWS_Class.MonadRWS(function () {
	            return monadReaderRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return monadStateRWST(dictMonad)(dictMonoid);
	        }, function () {
	            return monadWriterRWST(dictMonad)(dictMonoid);
	        });
	    };
	};
	module.exports = {
	    RWSResult: RWSResult, 
	    RWST: RWST, 
	    evalRWST: evalRWST, 
	    execRWST: execRWST, 
	    mapRWST: mapRWST, 
	    runRWST: runRWST, 
	    withRWST: withRWST, 
	    functorRWST: functorRWST, 
	    applyRWST: applyRWST, 
	    bindRWST: bindRWST, 
	    applicativeRWST: applicativeRWST, 
	    monadRWST: monadRWST, 
	    monadTransRWST: monadTransRWST, 
	    monadEffRWS: monadEffRWS, 
	    monadReaderRWST: monadReaderRWST, 
	    monadStateRWST: monadStateRWST, 
	    monadWriterRWST: monadWriterRWST, 
	    monadRWSRWST: monadRWSRWST, 
	    monadErrorRWST: monadErrorRWST, 
	    monadRecRWST: monadRecRWST
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 206 */
/*!*************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs ***!
  \*************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Lazy = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Lazy.purs */ 132);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var StateT = function (x) {
	    return x;
	};
	var withStateT = function (f) {
	    return function (v) {
	        return function ($92) {
	            return v(f($92));
	        };
	    };
	};
	var runStateT = function (v) {
	    return v;
	};
	var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	    return function (m) {
	        return function (s) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, s));
	            });
	        };
	    };
	});
	var mapStateT = function (f) {
	    return function (v) {
	        return function ($93) {
	            return f(v($93));
	        };
	    };
	};
	var lazyStateT = new Control_Lazy.Lazy(function (f) {
	    return function (s) {
	        var $47 = f(Data_Unit.unit);
	        return $47(s);
	    };
	});
	var functorStateT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return function (v) {
	            return function (s) {
	                return Data_Functor.map(dictFunctor)(function (v1) {
	                    return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
	                })(v(s));
	            };
	        };
	    });
	};
	var execStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
	        };
	    };
	};
	var evalStateT = function (dictFunctor) {
	    return function (v) {
	        return function (s) {
	            return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
	        };
	    };
	};
	var monadStateT = function (dictMonad) {
	    return new Control_Monad.Monad(function () {
	        return applicativeStateT(dictMonad);
	    }, function () {
	        return bindStateT(dictMonad);
	    });
	};
	var bindStateT = function (dictMonad) {
	    return new Control_Bind.Bind(function () {
	        return applyStateT(dictMonad);
	    }, function (v) {
	        return function (f) {
	            return function (s) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
	                    var $60 = f(v1.value0);
	                    return $60(v1.value1);
	                });
	            };
	        };
	    });
	};
	var applyStateT = function (dictMonad) {
	    return new Control_Apply.Apply(function () {
	        return functorStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
	    }, Control_Monad.ap(monadStateT(dictMonad)));
	};
	var applicativeStateT = function (dictMonad) {
	    return new Control_Applicative.Applicative(function () {
	        return applyStateT(dictMonad);
	    }, function (a) {
	        return function (s) {
	            return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(a, s));
	        };
	    });
	};
	var monadContStateT = function (dictMonadCont) {
	    return new Control_Monad_Cont_Class.MonadCont(function () {
	        return monadStateT(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (s) {
	            return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $63 = f(function (a) {
	                    return function (s$prime) {
	                        return c(new Data_Tuple.Tuple(a, s$prime));
	                    };
	                });
	                return $63(s);
	            });
	        };
	    });
	};
	var monadEffState = function (dictMonadEff) {
	    return new Control_Monad_Eff_Class.MonadEff(function () {
	        return monadStateT(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	    }, function ($94) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($94));
	    });
	};
	var monadErrorStateT = function (dictMonadError) {
	    return new Control_Monad_Error_Class.MonadError(function () {
	        return monadStateT(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	    }, function (v) {
	        return function (h) {
	            return function (s) {
	                return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
	                    var $66 = h(e);
	                    return $66(s);
	                });
	            };
	        };
	    }, function (e) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	    });
	};
	var monadReaderStateT = function (dictMonadReader) {
	    return new Control_Monad_Reader_Class.MonadReader(function () {
	        return monadStateT(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	    }, Control_Monad_Trans.lift(monadTransStateT)(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	        return mapStateT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	    });
	};
	var monadRecStateT = function (dictMonadRec) {
	    return new Control_Monad_Rec_Class.MonadRec(function () {
	        return monadStateT(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	    }, function (f) {
	        return function (a) {
	            var f$prime = function (v) {
	                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
	                    var $68 = f(v.value0);
	                    return $68;
	                })()(v.value1))(function (v1) {
	                    return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                        if (v1.value0 instanceof Data_Either.Left) {
	                            return new Data_Either.Left(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        if (v1.value0 instanceof Data_Either.Right) {
	                            return new Data_Either.Right(new Data_Tuple.Tuple(v1.value0.value0, v1.value1));
	                        };
	                        throw new Error("Failed pattern match at Control.Monad.State.Trans line 86, column 11 - line 88, column 42: " + [ v1.value0.constructor.name ]);
	                    })());
	                });
	            };
	            return function (s) {
	                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
	            };
	        };
	    });
	};
	var monadStateStateT = function (dictMonad) {
	    return new Control_Monad_State_Class.MonadState(function () {
	        return monadStateT(dictMonad);
	    }, function (f) {
	        return Data_Function.apply(StateT)(function ($95) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($95));
	        });
	    });
	};
	var monadWriterStateT = function (dictMonadWriter) {
	    return new Control_Monad_Writer_Class.MonadWriter(function () {
	        return monadStateT(dictMonadWriter["__superclass_Control.Monad.Monad_0"]());
	    }, function (m) {
	        return function (s) {
	            return Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            });
	        };
	    }, function (m) {
	        return function (s) {
	            return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(m(s))(function (v) {
	                return Data_Function.apply(Control_Applicative.pure((dictMonadWriter["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
	            }));
	        };
	    }, function (wd) {
	        return Control_Monad_Trans.lift(monadTransStateT)(dictMonadWriter["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Writer_Class.writer(dictMonadWriter)(wd));
	    });
	};
	var altStateT = function (dictMonad) {
	    return function (dictAlt) {
	        return new Control_Alt.Alt(function () {
	            return functorStateT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                return function (s) {
	                    return Control_Alt.alt(dictAlt)(v(s))(v1(s));
	                };
	            };
	        });
	    };
	};
	var plusStateT = function (dictMonad) {
	    return function (dictPlus) {
	        return new Control_Plus.Plus(function () {
	            return altStateT(dictMonad)(dictPlus["__superclass_Control.Alt.Alt_0"]());
	        }, function (v) {
	            return Control_Plus.empty(dictPlus);
	        });
	    };
	};
	var alternativeStateT = function (dictMonad) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeStateT(dictMonad);
	        }, function () {
	            return plusStateT(dictMonad)(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	        });
	    };
	};
	var monadZeroStateT = function (dictMonadZero) {
	    return new Control_MonadZero.MonadZero(function () {
	        return alternativeStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]())(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	    }, function () {
	        return monadStateT(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	    });
	};
	var monadPlusStateT = function (dictMonadPlus) {
	    return new Control_MonadPlus.MonadPlus(function () {
	        return monadZeroStateT(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	    });
	};
	module.exports = {
	    StateT: StateT, 
	    evalStateT: evalStateT, 
	    execStateT: execStateT, 
	    mapStateT: mapStateT, 
	    runStateT: runStateT, 
	    withStateT: withStateT, 
	    functorStateT: functorStateT, 
	    applyStateT: applyStateT, 
	    applicativeStateT: applicativeStateT, 
	    altStateT: altStateT, 
	    plusStateT: plusStateT, 
	    alternativeStateT: alternativeStateT, 
	    bindStateT: bindStateT, 
	    monadStateT: monadStateT, 
	    monadRecStateT: monadRecStateT, 
	    monadZeroStateT: monadZeroStateT, 
	    monadPlusStateT: monadPlusStateT, 
	    monadTransStateT: monadTransStateT, 
	    lazyStateT: lazyStateT, 
	    monadEffState: monadEffState, 
	    monadContStateT: monadContStateT, 
	    monadErrorStateT: monadErrorStateT, 
	    monadReaderStateT: monadReaderStateT, 
	    monadStateStateT: monadStateStateT, 
	    monadWriterStateT: monadWriterStateT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 207 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs ***!
  \**************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Control_Alt = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alt.purs */ 80);
	var Control_Alternative = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Alternative.purs */ 81);
	var Control_Monad_Cont_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Class.purs */ 111);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Control_Monad_Reader_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Class.purs */ 127);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var WriterT = function (x) {
	    return x;
	};
	var runWriterT = function (v) {
	    return v;
	};
	var monadTransWriterT = function (dictMonoid) {
	    return new Control_Monad_Trans.MonadTrans(function (dictMonad) {
	        return function (m) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v, Data_Monoid.mempty(dictMonoid)));
	            });
	        };
	    });
	};
	var mapWriterT = function (f) {
	    return function (v) {
	        return f(v);
	    };
	};
	var functorWriterT = function (dictFunctor) {
	    return new Data_Functor.Functor(function (f) {
	        return Data_Function.apply(mapWriterT)(Data_Functor.map(dictFunctor)(function (v) {
	            return new Data_Tuple.Tuple(f(v.value0), v.value1);
	        }));
	    });
	};
	var execWriterT = function (dictFunctor) {
	    return function (v) {
	        return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
	    };
	};
	var applyWriterT = function (dictSemigroup) {
	    return function (dictApply) {
	        return new Control_Apply.Apply(function () {
	            return functorWriterT(dictApply["__superclass_Data.Functor.Functor_0"]());
	        }, function (v) {
	            return function (v1) {
	                var k = function (v3) {
	                    return function (v4) {
	                        return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
	                    };
	                };
	                return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(k)(v))(v1);
	            };
	        });
	    };
	};
	var bindWriterT = function (dictSemigroup) {
	    return function (dictMonad) {
	        return new Control_Bind.Bind(function () {
	            return applyWriterT(dictSemigroup)((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]());
	        }, function (v) {
	            return function (k) {
	                return Data_Function.apply(WriterT)(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                    return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())((function () {
	                        var $74 = k(v1.value0);
	                        return $74;
	                    })())(function (v2) {
	                        return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v2.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v2.value1)));
	                    });
	                }));
	            };
	        });
	    };
	};
	var applicativeWriterT = function (dictMonoid) {
	    return function (dictApplicative) {
	        return new Control_Applicative.Applicative(function () {
	            return applyWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictApplicative["__superclass_Control.Apply.Apply_0"]());
	        }, function (a) {
	            return Data_Function.apply(WriterT)(Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	        });
	    };
	};
	var monadWriterT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad.Monad(function () {
	            return applicativeWriterT(dictMonoid)(dictMonad["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return bindWriterT(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(dictMonad);
	        });
	    };
	};
	var monadContWriterT = function (dictMonoid) {
	    return function (dictMonadCont) {
	        return new Control_Monad_Cont_Class.MonadCont(function () {
	            return monadWriterT(dictMonoid)(dictMonadCont["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return Data_Function.apply(WriterT)(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
	                var $80 = f(function (a) {
	                    return Data_Function.apply(WriterT)(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	                });
	                return $80;
	            }));
	        });
	    };
	};
	var monadEffWriter = function (dictMonoid) {
	    return function (dictMonadEff) {
	        return new Control_Monad_Eff_Class.MonadEff(function () {
	            return monadWriterT(dictMonoid)(dictMonadEff["__superclass_Control.Monad.Monad_0"]());
	        }, function ($106) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadEff["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($106));
	        });
	    };
	};
	var monadErrorWriterT = function (dictMonoid) {
	    return function (dictMonadError) {
	        return new Control_Monad_Error_Class.MonadError(function () {
	            return monadWriterT(dictMonoid)(dictMonadError["__superclass_Control.Monad.Monad_0"]());
	        }, function (v) {
	            return function (h) {
	                return Data_Function.apply(WriterT)(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
	                    var $83 = h(e);
	                    return $83;
	                }));
	            };
	        }, function (e) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadError["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Error_Class.throwError(dictMonadError)(e));
	        });
	    };
	};
	var monadReaderWriterT = function (dictMonoid) {
	    return function (dictMonadReader) {
	        return new Control_Monad_Reader_Class.MonadReader(function () {
	            return monadWriterT(dictMonoid)(dictMonadReader["__superclass_Control.Monad.Monad_0"]());
	        }, Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadReader["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Reader_Class.ask(dictMonadReader)), function (f) {
	            return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
	        });
	    };
	};
	var monadRecWriterT = function (dictMonoid) {
	    return function (dictMonadRec) {
	        return new Control_Monad_Rec_Class.MonadRec(function () {
	            return monadWriterT(dictMonoid)(dictMonadRec["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return function (a) {
	                var f$prime = function (v) {
	                    return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())((function () {
	                        var $85 = f(v.value0);
	                        return $85;
	                    })())(function (v1) {
	                        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())((function () {
	                            if (v1.value0 instanceof Data_Either.Left) {
	                                return new Data_Either.Left(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
	                            };
	                            if (v1.value0 instanceof Data_Either.Right) {
	                                return new Data_Either.Right(new Data_Tuple.Tuple(v1.value0.value0, Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.value1)(v1.value1)));
	                            };
	                            throw new Error("Failed pattern match at Control.Monad.Writer.Trans line 83, column 11 - line 85, column 49: " + [ v1.value0.constructor.name ]);
	                        })());
	                    });
	                };
	                return Data_Function.apply(WriterT)(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
	            };
	        });
	    };
	};
	var monadStateWriterT = function (dictMonoid) {
	    return function (dictMonadState) {
	        return new Control_Monad_State_Class.MonadState(function () {
	            return monadWriterT(dictMonoid)(dictMonadState["__superclass_Control.Monad.Monad_0"]());
	        }, function (f) {
	            return Control_Monad_Trans.lift(monadTransWriterT(dictMonoid))(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
	        });
	    };
	};
	var monadWriterWriterT = function (dictMonoid) {
	    return function (dictMonad) {
	        return new Control_Monad_Writer_Class.MonadWriter(function () {
	            return monadWriterT(dictMonoid)(dictMonad);
	        }, function (v) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
	            });
	        }, function (v) {
	            return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(function (v1) {
	                return Data_Function.apply(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]()))(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
	            });
	        }, function ($107) {
	            return WriterT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())($107));
	        });
	    };
	};
	var altWriterT = function (dictAlt) {
	    return new Control_Alt.Alt(function () {
	        return functorWriterT(dictAlt["__superclass_Data.Functor.Functor_0"]());
	    }, function (v) {
	        return function (v1) {
	            return Control_Alt.alt(dictAlt)(v)(v1);
	        };
	    });
	};
	var plusWriterT = function (dictPlus) {
	    return new Control_Plus.Plus(function () {
	        return altWriterT(dictPlus["__superclass_Control.Alt.Alt_0"]());
	    }, Control_Plus.empty(dictPlus));
	};
	var alternativeWriterT = function (dictMonoid) {
	    return function (dictAlternative) {
	        return new Control_Alternative.Alternative(function () {
	            return applicativeWriterT(dictMonoid)(dictAlternative["__superclass_Control.Applicative.Applicative_0"]());
	        }, function () {
	            return plusWriterT(dictAlternative["__superclass_Control.Plus.Plus_1"]());
	        });
	    };
	};
	var monadZeroWriterT = function (dictMonoid) {
	    return function (dictMonadZero) {
	        return new Control_MonadZero.MonadZero(function () {
	            return alternativeWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Alternative.Alternative_1"]());
	        }, function () {
	            return monadWriterT(dictMonoid)(dictMonadZero["__superclass_Control.Monad.Monad_0"]());
	        });
	    };
	};
	var monadPlusWriterT = function (dictMonoid) {
	    return function (dictMonadPlus) {
	        return new Control_MonadPlus.MonadPlus(function () {
	            return monadZeroWriterT(dictMonoid)(dictMonadPlus["__superclass_Control.MonadZero.MonadZero_0"]());
	        });
	    };
	};
	module.exports = {
	    WriterT: WriterT, 
	    execWriterT: execWriterT, 
	    mapWriterT: mapWriterT, 
	    runWriterT: runWriterT, 
	    functorWriterT: functorWriterT, 
	    applyWriterT: applyWriterT, 
	    applicativeWriterT: applicativeWriterT, 
	    altWriterT: altWriterT, 
	    plusWriterT: plusWriterT, 
	    alternativeWriterT: alternativeWriterT, 
	    bindWriterT: bindWriterT, 
	    monadWriterT: monadWriterT, 
	    monadRecWriterT: monadRecWriterT, 
	    monadZeroWriterT: monadZeroWriterT, 
	    monadPlusWriterT: monadPlusWriterT, 
	    monadTransWriterT: monadTransWriterT, 
	    monadEffWriter: monadEffWriter, 
	    monadContWriterT: monadContWriterT, 
	    monadErrorWriterT: monadErrorWriterT, 
	    monadReaderWriterT: monadReaderWriterT, 
	    monadStateWriterT: monadStateWriterT, 
	    monadWriterWriterT: monadWriterWriterT
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 208 */
/*!*******************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Coroutine_Aff = __webpack_require__(/*! ./bower_components/purescript-aff-coroutines/src/Control/Coroutine/Aff.purs */ 209);
	var Control_Coroutine_Stalling = __webpack_require__(/*! ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs */ 212);
	var Control_Monad_Aff_AVar = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs */ 143);
	var Control_Monad_Aff_Class = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs */ 211);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Data_Const = __webpack_require__(/*! ./bower_components/purescript-const/src/Data/Const.purs */ 196);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor_Coproduct = __webpack_require__(/*! ./bower_components/purescript-functor-coproducts/src/Data/Functor/Coproduct.purs */ 186);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var EventSource = function (x) {
	    return x;
	};
	var toParentEventSource = Unsafe_Coerce.unsafeCoerce;
	var runEventSource = function (v) {
	    return v;
	};
	var fromParentEventSource = Unsafe_Coerce.unsafeCoerce;
	var eventSource_ = function (dictMonad) {
	    return function (dictMonadAff) {
	        return function (attach) {
	            return function (handle) {
	                return Data_Function.apply(EventSource)(Data_Function.apply(Control_Coroutine_Stalling.producerToStallingProducer(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Coroutine_Aff["produce'"](dictMonadAff)(function (emit) {
	                    return attach(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(function ($9) {
	                        return emit(Data_Either.Left.create($9));
	                    })(handle));
	                })));
	            };
	        };
	    };
	};
	var eventSource = function (dictMonad) {
	    return function (dictMonadAff) {
	        return function (attach) {
	            return function (handle) {
	                return Data_Function.apply(EventSource)(Data_Function.apply(Control_Coroutine_Stalling.producerToStallingProducer(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Control_Coroutine_Aff["produce'"](dictMonadAff)(function (emit) {
	                    return attach(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($10) {
	                        return emit(Data_Either.Left.create($10));
	                    })(handle));
	                })));
	            };
	        };
	    };
	};
	var catEventSource = function (dictMonadRec) {
	    return function (v) {
	        return Data_Function.apply(EventSource)(Data_Function.apply(Control_Coroutine_Stalling.catMaybes(dictMonadRec))(Control_Coroutine_Stalling.mapStallingProducer((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Functor_Coproduct.coproduct(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(v)));
	    };
	};
	module.exports = {
	    EventSource: EventSource, 
	    catEventSource: catEventSource, 
	    eventSource: eventSource, 
	    eventSource_: eventSource_, 
	    fromParentEventSource: fromParentEventSource, 
	    runEventSource: runEventSource, 
	    toParentEventSource: toParentEventSource
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 209 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-aff-coroutines/src/Control/Coroutine/Aff.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Control_Coroutine = __webpack_require__(/*! ./bower_components/purescript-coroutines/src/Control/Coroutine.purs */ 210);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Aff_AVar = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs */ 143);
	var Control_Monad_Aff_Class = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs */ 211);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var produceAff = function (recv) {
	    return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.makeVar))(function (v) {
	        return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorEmit)(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorEmit))(Control_Monad_Aff.monadAff)(Control_Monad_Aff.forkAff(recv(Control_Monad_Aff_AVar.putVar(v)))))(function () {
	            return Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar(v));
	        });
	    });
	};
	var produce = function (recv) {
	    return produceAff(function (send) {
	        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(recv(function ($3) {
	            return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff))(send($3)));
	        }));
	    });
	};
	var produce$prime = function (dictMonadAff) {
	    return function ($4) {
	        return Control_Monad_Free_Trans.hoistFreeT(Control_Coroutine.functorEmit)(((((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Aff_Class.liftAff(dictMonadAff))(produce($4));
	    };
	};
	module.exports = {
	    produce: produce, 
	    "produce'": produce$prime, 
	    produceAff: produceAff
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 210 */
/*!***************************************************************************!*\
  !*** ./bower_components/purescript-coroutines/src/Control/Coroutine.purs ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Profunctor = __webpack_require__(/*! ./bower_components/purescript-profunctor/src/Data/Profunctor.purs */ 198);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Transform = function (x) {
	    return x;
	};
	var Emit = (function () {
	    function Emit(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Emit.create = function (value0) {
	        return function (value1) {
	            return new Emit(value0, value1);
	        };
	    };
	    return Emit;
	})();
	var CoTransform = (function () {
	    function CoTransform(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    CoTransform.create = function (value0) {
	        return function (value1) {
	            return new CoTransform(value0, value1);
	        };
	    };
	    return CoTransform;
	})();
	var Await = function (x) {
	    return x;
	};
	var runProcess = function (dictMonadRec) {
	    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($153) {
	        return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Identity.runIdentity($153));
	    });
	};
	var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
	        };
	    };
	});
	var loop = function (dictFunctor) {
	    return function (dictMonad) {
	        return function (me) {
	            return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
	                return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(new Data_Either.Left(Data_Unit.unit))(Data_Either.Right.create))(me);
	            })(Data_Unit.unit);
	        };
	    };
	};
	var fuseWith = function (dictFunctor) {
	    return function (dictFunctor1) {
	        return function (dictFunctor2) {
	            return function (dictMonadRec) {
	                return function (zap) {
	                    return function (fs) {
	                        return function (gs) {
	                            var go = function (v) {
	                                return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1))(function (v1) {
	                                    return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))(function (v2) {
	                                        var $65 = Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(zap(Data_Tuple.Tuple.create))(v2))(v1);
	                                        if ($65 instanceof Data_Either.Left) {
	                                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left($65.value0));
	                                        };
	                                        if ($65 instanceof Data_Either.Right) {
	                                            return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
	                                                return Control_Monad_Free_Trans.freeT(function (v3) {
	                                                    return go(t);
	                                                });
	                                            })($65.value0)));
	                                        };
	                                        throw new Error("Failed pattern match at Control.Coroutine line 68, column 5 - line 70, column 63: " + [ $65.constructor.name ]);
	                                    });
	                                });
	                            };
	                            return Control_Monad_Free_Trans.freeT(function (v) {
	                                return go(new Data_Tuple.Tuple(fs, gs));
	                            });
	                        };
	                    };
	                };
	            };
	        };
	    };
	};
	var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
	var joinConsumers = function (dictMonadRec) {
	    return fuseWith(functorAwait)(functorAwait)(functorAwait)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (v2) {
	                    return f(v(v2.value0))(v1(v2.value1));
	                };
	            };
	        };
	    });
	};
	var bifunctorTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return function ($154) {
	                return Data_Bifunctor.bimap(Data_Tuple.bifunctorTuple)(f)(g)(v($154));
	            };
	        };
	    };
	});
	var functorTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorTransform));
	var composeTransformers = function (dictMonadRec) {
	    return fuseWith(functorTransform)(functorTransform)(functorTransform)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (i) {
	                    var $82 = v(i);
	                    var $83 = v1($82.value0);
	                    return new Data_Tuple.Tuple($83.value0, f($82.value1)($83.value1));
	                };
	            };
	        };
	    });
	};
	var transform = function (dictMonad) {
	    return function (f) {
	        return Control_Monad_Free_Trans.liftFreeT(functorTransform)(dictMonad)(function (i) {
	            return new Data_Tuple.Tuple(f(i), Data_Unit.unit);
	        });
	    };
	};
	var transformConsumer = function (dictMonadRec) {
	    return fuseWith(functorTransform)(functorAwait)(functorAwait)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return function (i) {
	                    var $90 = v(i);
	                    return f($90.value1)(v1($90.value0));
	                };
	            };
	        };
	    });
	};
	var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new Emit(f(v.value0), g(v.value1));
	        };
	    };
	});
	var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
	var connect = function (dictMonadRec) {
	    return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return f(v.value1)(v1(v.value0));
	            };
	        };
	    });
	};
	var emit = function (dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
	    };
	};
	var joinProducers = function (dictMonadRec) {
	    return fuseWith(functorEmit)(functorEmit)(functorEmit)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return new Emit(new Data_Tuple.Tuple(v.value0, v1.value0), f(v.value1)(v1.value1));
	            };
	        };
	    });
	};
	var producer = function (dictMonad) {
	    return function (recv) {
	        return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
	            };
	            if (v instanceof Data_Either.Right) {
	                return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
	            };
	            throw new Error("Failed pattern match at Control.Coroutine line 94, column 3 - line 96, column 29: " + [ v.constructor.name ]);
	        }));
	    };
	};
	var transformProducer = function (dictMonadRec) {
	    return fuseWith(functorEmit)(functorTransform)(functorEmit)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                var $114 = v1(v.value0);
	                return new Emit($114.value0, f(v.value1)($114.value1));
	            };
	        };
	    });
	};
	var bifunctorCoTransform = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            return new CoTransform(f(v.value0), function ($155) {
	                return g(v.value1($155));
	            });
	        };
	    };
	});
	var functorCoTransform = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorCoTransform));
	var composeCoTransformers = function (dictMonadRec) {
	    return fuseWith(functorCoTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return new CoTransform(v1.value0, function (i) {
	                    return f(v.value1(i))(v1.value1(v.value0));
	                });
	            };
	        };
	    });
	};
	var cotransform = function (dictMonad) {
	    return function (o) {
	        return Control_Monad_Free_Trans.freeT(function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(new CoTransform(o, Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorCoTransform)(dictMonad)))));
	        });
	    };
	};
	var fuseCoTransform = function (dictMonadRec) {
	    return fuseWith(functorTransform)(functorCoTransform)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                var $133 = v(v1.value0);
	                return f($133.value1)(v1.value1($133.value0));
	            };
	        };
	    });
	};
	var transformCoTransformL = function (dictMonadRec) {
	    return fuseWith(functorTransform)(functorCoTransform)(functorCoTransform)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                return new CoTransform(v1.value0, function (i1) {
	                    var $140 = v(i1);
	                    return f($140.value1)(v1.value1($140.value0));
	                });
	            };
	        };
	    });
	};
	var transformCoTransformR = function (dictMonadRec) {
	    return fuseWith(functorCoTransform)(functorTransform)(functorCoTransform)(dictMonadRec)(function (f) {
	        return function (v) {
	            return function (v1) {
	                var $147 = v1(v.value0);
	                return new CoTransform($147.value0, function ($156) {
	                    return (function (v2) {
	                        return f(v2)($147.value1);
	                    })(v.value1($156));
	                });
	            };
	        };
	    });
	};
	var $$await = function (dictMonad) {
	    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
	};
	var consumer = function (dictMonad) {
	    return function (send) {
	        return loop(functorAwait)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorAwait)(dictMonad))($$await(dictMonad))(function (v) {
	            return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorAwait))(dictMonad)(send(v));
	        }));
	    };
	};
	module.exports = {
	    Await: Await, 
	    CoTransform: CoTransform, 
	    Emit: Emit, 
	    Transform: Transform, 
	    "await": $$await, 
	    composeCoTransformers: composeCoTransformers, 
	    composeTransformers: composeTransformers, 
	    connect: connect, 
	    consumer: consumer, 
	    cotransform: cotransform, 
	    emit: emit, 
	    fuseCoTransform: fuseCoTransform, 
	    fuseWith: fuseWith, 
	    joinConsumers: joinConsumers, 
	    joinProducers: joinProducers, 
	    loop: loop, 
	    producer: producer, 
	    runProcess: runProcess, 
	    transform: transform, 
	    transformCoTransformL: transformCoTransformL, 
	    transformCoTransformR: transformCoTransformR, 
	    transformConsumer: transformConsumer, 
	    transformProducer: transformProducer, 
	    bifunctorEmit: bifunctorEmit, 
	    functorEmit: functorEmit, 
	    profunctorAwait: profunctorAwait, 
	    functorAwait: functorAwait, 
	    bifunctorTransform: bifunctorTransform, 
	    functorTransform: functorTransform, 
	    bifunctorCoTransform: bifunctorCoTransform, 
	    functorCoTransform: functorCoTransform
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 211 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-aff/src/Control/Monad/Aff/Class.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Cont_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Cont/Trans.purs */ 126);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Except_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Except/Trans.purs */ 134);
	var Control_Monad_List_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/List/Trans.purs */ 203);
	var Control_Monad_Maybe_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs */ 204);
	var Control_Monad_Reader_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Reader/Trans.purs */ 137);
	var Control_Monad_RWS_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/RWS/Trans.purs */ 205);
	var Control_Monad_State_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs */ 206);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_Writer_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs */ 207);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var MonadAff = function (__superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0, liftAff) {
	    this["__superclass_Control.Monad.Eff.Class.MonadEff_0"] = __superclass_Control$dotMonad$dotEff$dotClass$dotMonadEff_0;
	    this.liftAff = liftAff;
	};
	var monadAffAff = new MonadAff(function () {
	    return Control_Monad_Aff.monadEffAff;
	}, Control_Category.id(Control_Category.categoryFn));
	var liftAff = function (dict) {
	    return dict.liftAff;
	};
	var monadAffContT = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Cont_Trans.monadEffContT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($10) {
	        return Control_Monad_Trans.lift(Control_Monad_Cont_Trans.monadTransContT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($10));
	    });
	};
	var monadAffExceptT = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Except_Trans.monadEffExceptT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($11) {
	        return Control_Monad_Trans.lift(Control_Monad_Except_Trans.monadTransExceptT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($11));
	    });
	};
	var monadAffListT = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_List_Trans.monadEffListT(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($12) {
	        return Control_Monad_Trans.lift(Control_Monad_List_Trans.monadTransListT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($12));
	    });
	};
	var monadAffMaybe = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Maybe_Trans.monadEffMaybe(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($13) {
	        return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($13));
	    });
	};
	var monadAffRWS = function (dictMonadAff) {
	    return function (dictMonoid) {
	        return new MonadAff(function () {
	            return Control_Monad_RWS_Trans.monadEffRWS(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	        }, function ($14) {
	            return Control_Monad_Trans.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($14));
	        });
	    };
	};
	var monadAffReader = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_Reader_Trans.monadEffReader(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($15) {
	        return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($15));
	    });
	};
	var monadAffState = function (dictMonadAff) {
	    return new MonadAff(function () {
	        return Control_Monad_State_Trans.monadEffState(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	    }, function ($16) {
	        return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($16));
	    });
	};
	var monadAffWriter = function (dictMonadAff) {
	    return function (dictMonoid) {
	        return new MonadAff(function () {
	            return Control_Monad_Writer_Trans.monadEffWriter(dictMonoid)(dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]());
	        }, function ($17) {
	            return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))((dictMonadAff["__superclass_Control.Monad.Eff.Class.MonadEff_0"]())["__superclass_Control.Monad.Monad_0"]())(liftAff(dictMonadAff)($17));
	        });
	    };
	};
	module.exports = {
	    MonadAff: MonadAff, 
	    liftAff: liftAff, 
	    monadAffAff: monadAffAff, 
	    monadAffContT: monadAffContT, 
	    monadAffExceptT: monadAffExceptT, 
	    monadAffListT: monadAffListT, 
	    monadAffMaybe: monadAffMaybe, 
	    monadAffReader: monadAffReader, 
	    monadAffRWS: monadAffRWS, 
	    monadAffState: monadAffState, 
	    monadAffWriter: monadAffWriter
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 212 */
/*!*********************************************************************************************!*\
  !*** ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs ***!
  \*********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Coroutine = __webpack_require__(/*! ./bower_components/purescript-coroutines/src/Control/Coroutine.purs */ 210);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Monad_Maybe_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Maybe/Trans.purs */ 204);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Emit = (function () {
	    function Emit(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Emit.create = function (value0) {
	        return function (value1) {
	            return new Emit(value0, value1);
	        };
	    };
	    return Emit;
	})();
	var Stall = (function () {
	    function Stall(value0) {
	        this.value0 = value0;
	    };
	    Stall.create = function (value0) {
	        return new Stall(value0);
	    };
	    return Stall;
	})();
	var stallF = function (e) {
	    return function (s) {
	        return function (v) {
	            if (v instanceof Emit) {
	                return e(v.value0)(v.value1);
	            };
	            if (v instanceof Stall) {
	                return s(v.value0);
	            };
	            throw new Error("Failed pattern match at Control.Coroutine.Stalling line 46, column 14 - line 48, column 17: " + [ v.constructor.name ]);
	        };
	    };
	};
	var runStallingProcess = function (dictMonadRec) {
	    return function ($30) {
	        return Control_Monad_Maybe_Trans.runMaybeT(Control_Monad_Free_Trans.runFreeT(Data_Maybe.functorMaybe)(Control_Monad_Maybe_Trans.monadRecMaybeT(dictMonadRec))(Data_Maybe.maybe(Control_Plus.empty(Control_Monad_Maybe_Trans.plusMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]())))(Control_Applicative.pure(Control_Monad_Maybe_Trans.applicativeMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))))(Control_Monad_Free_Trans.hoistFreeT(Data_Maybe.functorMaybe)(Control_Monad_Maybe_Trans.functorMaybeT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(function ($31) {
	            return Control_Monad_Maybe_Trans.MaybeT(Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Maybe.Just.create)($31));
	        })($30)));
	    };
	};
	var producerToStallingProducer = function (dictFunctor) {
	    return Control_Monad_Free_Trans.interpret(Control_Coroutine.functorEmit)(dictFunctor)(function (v) {
	        return new Emit(v.value0, v.value1);
	    });
	};
	var processToStallingProcess = function (dictFunctor) {
	    return Control_Monad_Free_Trans.interpret(Data_Identity.functorIdentity)(dictFunctor)(function ($32) {
	        return Data_Maybe.Just.create(Data_Identity.runIdentity($32));
	    });
	};
	var bifunctorStallF = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        return function (v) {
	            if (v instanceof Emit) {
	                return new Emit(f(v.value0), g(v.value1));
	            };
	            if (v instanceof Stall) {
	                return new Stall(g(v.value0));
	            };
	            throw new Error("Failed pattern match at Control.Coroutine.Stalling line 51, column 15 - line 53, column 27: " + [ v.constructor.name ]);
	        };
	    };
	});
	var functorStallF = new Data_Functor.Functor(function (f) {
	    return Data_Bifunctor.rmap(bifunctorStallF)(f);
	});
	var emit = function (dictMonad) {
	    return function ($33) {
	        return Control_Monad_Free_Trans.liftFreeT(functorStallF)(dictMonad)(Data_Function.flip(Emit.create)(Data_Unit.unit)($33));
	    };
	};
	var catMaybes = function (dictMonadRec) {
	    return Data_Function.apply(Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]())))(Control_Bind.composeKleisli(Control_Monad_Free_Trans.bindFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(function ($34) {
	        return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(functorStallF))(dictMonadRec["__superclass_Control.Monad.Monad_0"]())(Control_Monad_Free_Trans.resume(functorStallF)(dictMonadRec)($34));
	    })(Data_Either.either(function ($35) {
	        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Either.Right.create($35));
	    })(stallF(function (mo) {
	        return function (t) {
	            return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorStallF)((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Unit.unit))(emit(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(mo))(new Data_Either.Left(t));
	        };
	    })(function ($36) {
	        return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorStallF)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Either.Left.create($36));
	    }))));
	};
	var fuse = function (dictMonadRec) {
	    return Control_Coroutine.fuseWith(functorStallF)(Control_Coroutine.functorAwait)(Data_Maybe.functorMaybe)(dictMonadRec)(function (f) {
	        return function (q) {
	            return function (v) {
	                if (q instanceof Emit) {
	                    return new Data_Maybe.Just(f(q.value1)(v(q.value0)));
	                };
	                if (q instanceof Stall) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Control.Coroutine.Stalling line 86, column 5 - line 88, column 27: " + [ q.constructor.name ]);
	            };
	        };
	    });
	};
	var stall = function (dictMonad) {
	    return Control_Monad_Free_Trans.liftFreeT(functorStallF)(dictMonad)(new Stall(Data_Unit.unit));
	};
	var mapStallingProducer = function (dictFunctor) {
	    return function ($37) {
	        return Control_Monad_Free_Trans.interpret(functorStallF)(dictFunctor)(Data_Bifunctor.lmap(bifunctorStallF)($37));
	    };
	};
	var filter = function (dictMonadRec) {
	    return function (p) {
	        return function ($38) {
	            return catMaybes(dictMonadRec)(mapStallingProducer((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function (x) {
	                var $29 = p(x);
	                if ($29) {
	                    return new Data_Maybe.Just(x);
	                };
	                if (!$29) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Control.Coroutine.Stalling line 151, column 5 - line 151, column 33: " + [ $29.constructor.name ]);
	            })($38));
	        };
	    };
	};
	module.exports = {
	    Emit: Emit, 
	    Stall: Stall, 
	    catMaybes: catMaybes, 
	    emit: emit, 
	    filter: filter, 
	    fuse: fuse, 
	    mapStallingProducer: mapStallingProducer, 
	    processToStallingProcess: processToStallingProcess, 
	    producerToStallingProducer: producerToStallingProducer, 
	    runStallingProcess: runStallingProcess, 
	    stall: stall, 
	    stallF: stallF, 
	    bifunctorStallF: bifunctorStallF, 
	    functorStallF: functorStallF
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 213 */
/*!**************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Query/StateF.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_State = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State.purs */ 214);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Get = (function () {
	    function Get(value0) {
	        this.value0 = value0;
	    };
	    Get.create = function (value0) {
	        return new Get(value0);
	    };
	    return Get;
	})();
	var Modify = (function () {
	    function Modify(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Modify.create = function (value0) {
	        return function (value1) {
	            return new Modify(value0, value1);
	        };
	    };
	    return Modify;
	})();
	var stateN = function (dictMonad) {
	    return function (dictMonadState) {
	        return function (v) {
	            if (v instanceof Get) {
	                return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Class.get(dictMonadState))(function ($22) {
	                    return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v.value0($22));
	                });
	            };
	            if (v instanceof Modify) {
	                return Data_Functor.voidLeft(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_State_Class.modify(dictMonadState)(v.value0))(v.value1);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.StateF line 33, column 1 - line 33, column 40: " + [ v.constructor.name ]);
	        };
	    };
	};
	var mapState = function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2 instanceof Get) {
	                return new Get(function ($23) {
	                    return v2.value0(v($23));
	                });
	            };
	            if (v2 instanceof Modify) {
	                return new Modify(v1(v2.value0), v2.value1);
	            };
	            throw new Error("Failed pattern match at Halogen.Query.StateF line 27, column 1 - line 27, column 37: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	};
	var functorStateF = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        if (v instanceof Get) {
	            return new Get(function ($24) {
	                return f(v.value0($24));
	            });
	        };
	        if (v instanceof Modify) {
	            return new Modify(v.value0, f(v.value1));
	        };
	        throw new Error("Failed pattern match at Halogen.Query.StateF line 21, column 3 - line 21, column 32: " + [ f.constructor.name, v.constructor.name ]);
	    };
	});
	module.exports = {
	    Get: Get, 
	    Modify: Modify, 
	    mapState: mapState, 
	    stateN: stateN, 
	    functorStateF: functorStateF
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 214 */
/*!*******************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/State.purs ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Control_Monad_State_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs */ 206);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var withState = Control_Monad_State_Trans.withStateT;
	var runState = function (v) {
	    return function ($14) {
	        return Data_Identity.runIdentity(v($14));
	    };
	};
	var mapState = function (f) {
	    return Control_Monad_State_Trans.mapStateT(function ($15) {
	        return Data_Identity.Identity(f(Data_Identity.runIdentity($15)));
	    });
	};
	var execState = function (v) {
	    return function (s) {
	        var $6 = v(s);
	        return $6.value1;
	    };
	};
	var evalState = function (v) {
	    return function (s) {
	        var $11 = v(s);
	        return $11.value0;
	    };
	};
	module.exports = {
	    evalState: evalState, 
	    execState: execState, 
	    mapState: mapState, 
	    runState: runState, 
	    withState: withState
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 215 */
/*!****************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Component/Tree.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Lazy = __webpack_require__(/*! ./bower_components/purescript-lazy/src/Data/Lazy.purs */ 191);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var runTree = function (k) {
	    return function (t) {
	        var $5 = Unsafe_Coerce.unsafeCoerce(t);
	        return k($5);
	    };
	};
	var mkTree$prime = Unsafe_Coerce.unsafeCoerce;
	var thunkTree = runTree(function ($11) {
	    return mkTree$prime((function (v) {
	        var $6 = {};
	        for (var $7 in v) {
	            if (v.hasOwnProperty($7)) {
	                $6[$7] = v[$7];
	            };
	        };
	        $6.thunk = true;
	        return $6;
	    })($11));
	});
	var mkTree = function (dictEq) {
	    return function (html) {
	        return mkTree$prime({
	            slot: Data_Unit.unit, 
	            html: html, 
	            eq: Data_Eq.eq(dictEq), 
	            thunk: false
	        });
	    };
	};
	var graftTree = function (l) {
	    return function (r) {
	        return runTree(function (t) {
	            return mkTree$prime({
	                slot: r(t.slot), 
	                html: Data_Functor.map(Data_Lazy.functorLazy)(Data_Bifunctor.bimap(Halogen_HTML_Core.bifunctorHTML)(graftTree(l)(Control_Category.id(Control_Category.categoryFn)))(l))(t.html), 
	                eq: t.eq, 
	                thunk: t.thunk
	            });
	        });
	    };
	};
	var emptyTree = mkTree$prime({
	    slot: Data_Unit.unit, 
	    html: Data_Lazy.defer(function (v) {
	        return new Halogen_HTML_Core.Text("");
	    }), 
	    eq: function (v) {
	        return function (v1) {
	            return false;
	        };
	    }, 
	    thunk: false
	});
	module.exports = {
	    emptyTree: emptyTree, 
	    graftTree: graftTree, 
	    mkTree: mkTree, 
	    "mkTree'": mkTree$prime, 
	    runTree: runTree, 
	    thunkTree: thunkTree
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 216 */
/*!***********************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Core.purs ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Bifunctor = __webpack_require__(/*! ./bower_components/purescript-bifunctors/src/Data/Bifunctor.purs */ 97);
	var Data_Exists = __webpack_require__(/*! ./bower_components/purescript-exists/src/Data/Exists.purs */ 188);
	var Data_ExistsR = __webpack_require__(/*! ./lib/purescript-halogen/src/Data/ExistsR.purs */ 217);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var Halogen_HTML_Events_Handler = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs */ 218);
	var Halogen_HTML_Events_Types = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Types.purs */ 221);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var TagName = function (x) {
	    return x;
	};
	var PropName = function (x) {
	    return x;
	};
	var Namespace = function (x) {
	    return x;
	};
	var EventName = function (x) {
	    return x;
	};
	var HandlerF = (function () {
	    function HandlerF(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    HandlerF.create = function (value0) {
	        return function (value1) {
	            return new HandlerF(value0, value1);
	        };
	    };
	    return HandlerF;
	})();
	var ClassName = function (x) {
	    return x;
	};
	var AttrName = function (x) {
	    return x;
	};
	var PropF = (function () {
	    function PropF(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    PropF.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new PropF(value0, value1, value2);
	            };
	        };
	    };
	    return PropF;
	})();
	var Prop = (function () {
	    function Prop(value0) {
	        this.value0 = value0;
	    };
	    Prop.create = function (value0) {
	        return new Prop(value0);
	    };
	    return Prop;
	})();
	var Attr = (function () {
	    function Attr(value0, value1, value2) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	    };
	    Attr.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return new Attr(value0, value1, value2);
	            };
	        };
	    };
	    return Attr;
	})();
	var Key = (function () {
	    function Key(value0) {
	        this.value0 = value0;
	    };
	    Key.create = function (value0) {
	        return new Key(value0);
	    };
	    return Key;
	})();
	var Handler = (function () {
	    function Handler(value0) {
	        this.value0 = value0;
	    };
	    Handler.create = function (value0) {
	        return new Handler(value0);
	    };
	    return Handler;
	})();
	var Ref = (function () {
	    function Ref(value0) {
	        this.value0 = value0;
	    };
	    Ref.create = function (value0) {
	        return new Ref(value0);
	    };
	    return Ref;
	})();
	var Text = (function () {
	    function Text(value0) {
	        this.value0 = value0;
	    };
	    Text.create = function (value0) {
	        return new Text(value0);
	    };
	    return Text;
	})();
	var Element = (function () {
	    function Element(value0, value1, value2, value3) {
	        this.value0 = value0;
	        this.value1 = value1;
	        this.value2 = value2;
	        this.value3 = value3;
	    };
	    Element.create = function (value0) {
	        return function (value1) {
	            return function (value2) {
	                return function (value3) {
	                    return new Element(value0, value1, value2, value3);
	                };
	            };
	        };
	    };
	    return Element;
	})();
	var Slot = (function () {
	    function Slot(value0) {
	        this.value0 = value0;
	    };
	    Slot.create = function (value0) {
	        return new Slot(value0);
	    };
	    return Slot;
	})();
	var IsProp = function (toPropString) {
	    this.toPropString = toPropString;
	};
	var toPropString = function (dict) {
	    return dict.toPropString;
	};
	var tagName = TagName;
	var stringIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (s) {
	            return s;
	        };
	    };
	});
	var runTagName = function (v) {
	    return v;
	};
	var runPropName = function (v) {
	    return v;
	};
	var runNamespace = function (v) {
	    return v;
	};
	var runEventName = function (v) {
	    return v;
	};
	var runClassName = function (v) {
	    return v;
	};
	var runAttrName = function (v) {
	    return v;
	};
	var propNames = PropName;
	var propName = function ($61) {
	    return PropName(Data_Array.singleton($61));
	};
	var prop = function (dictIsProp) {
	    return function (name) {
	        return function (attr) {
	            return function (v) {
	                return new Prop(Data_Exists.mkExists(new PropF(name, v, Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(toPropString(dictIsProp)))(attr))));
	            };
	        };
	    };
	};
	var numberIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (n) {
	            return Data_Show.show(Data_Show.showNumber)(n);
	        };
	    };
	});
	var namespace = Namespace;
	var intIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (i) {
	            return Data_Show.show(Data_Show.showInt)(i);
	        };
	    };
	});
	var handler = function (name) {
	    return function (k) {
	        return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, k)));
	    };
	};
	var functorProp = new Data_Functor.Functor(function (v) {
	    return function (v1) {
	        if (v1 instanceof Prop) {
	            return new Prop(v1.value0);
	        };
	        if (v1 instanceof Key) {
	            return new Key(v1.value0);
	        };
	        if (v1 instanceof Attr) {
	            return new Attr(v1.value0, v1.value1, v1.value2);
	        };
	        if (v1 instanceof Handler) {
	            return Data_ExistsR.runExistsR(function (v2) {
	                return new Handler(Data_ExistsR.mkExistsR(new HandlerF(v2.value0, function ($62) {
	                    return Data_Functor.map(Halogen_HTML_Events_Handler.functorEventHandler)(Data_Functor.map(Data_Maybe.functorMaybe)(v))(v2.value1($62));
	                })));
	            })(v1.value0);
	        };
	        if (v1 instanceof Ref) {
	            return new Ref(function ($63) {
	                return v(v1.value0($63));
	            });
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Core line 100, column 3 - line 100, column 26: " + [ v.constructor.name, v1.constructor.name ]);
	    };
	});
	var fillSlot = function (dictApplicative) {
	    return function (v) {
	        return function (v1) {
	            return function (v2) {
	                if (v2 instanceof Text) {
	                    return Data_Function.apply(Control_Applicative.pure(dictApplicative))(new Text(v2.value0));
	                };
	                if (v2 instanceof Element) {
	                    return Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Element.create(v2.value0)(v2.value1)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(v1))(v2.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(fillSlot(dictApplicative)(v)(v1))(v2.value3));
	                };
	                if (v2 instanceof Slot) {
	                    return v(v2.value0);
	                };
	                throw new Error("Failed pattern match at Halogen.HTML.Core line 79, column 1 - line 79, column 38: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	    };
	};
	var eventName = EventName;
	var element = Element.create(Data_Maybe.Nothing.value);
	var className = ClassName;
	var booleanIsProp = new IsProp(function (v) {
	    return function (v1) {
	        return function (v2) {
	            if (v2) {
	                return runAttrName(v);
	            };
	            if (!v2) {
	                return "";
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Core line 140, column 3 - line 140, column 46: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
	        };
	    };
	});
	var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
	    return function (g) {
	        var go = function (v) {
	            if (v instanceof Text) {
	                return new Text(v.value0);
	            };
	            if (v instanceof Element) {
	                return new Element(v.value0, v.value1, Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(functorProp)(g))(v.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	            };
	            if (v instanceof Slot) {
	                return new Slot(f(v.value0));
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Core line 64, column 3 - line 68, column 29: " + [ v.constructor.name ]);
	        };
	        return go;
	    };
	});
	var functorHTML = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorHTML));
	var attrName = AttrName;
	module.exports = {
	    Text: Text, 
	    Element: Element, 
	    Slot: Slot, 
	    HandlerF: HandlerF, 
	    Prop: Prop, 
	    Attr: Attr, 
	    Key: Key, 
	    Handler: Handler, 
	    Ref: Ref, 
	    PropF: PropF, 
	    IsProp: IsProp, 
	    attrName: attrName, 
	    className: className, 
	    element: element, 
	    eventName: eventName, 
	    fillSlot: fillSlot, 
	    handler: handler, 
	    namespace: namespace, 
	    prop: prop, 
	    propName: propName, 
	    propNames: propNames, 
	    runAttrName: runAttrName, 
	    runClassName: runClassName, 
	    runEventName: runEventName, 
	    runNamespace: runNamespace, 
	    runPropName: runPropName, 
	    runTagName: runTagName, 
	    tagName: tagName, 
	    toPropString: toPropString, 
	    bifunctorHTML: bifunctorHTML, 
	    functorHTML: functorHTML, 
	    functorProp: functorProp, 
	    stringIsProp: stringIsProp, 
	    intIsProp: intIsProp, 
	    numberIsProp: numberIsProp, 
	    booleanIsProp: booleanIsProp
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 217 */
/*!******************************************************!*\
  !*** ./lib/purescript-halogen/src/Data/ExistsR.purs ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	
	/**
	 *  | The `runExistsR` function is used to eliminate a value of type `ExistsR f`.
	 *  | The rank 2 type ensures that the existentially-quantified type does not
	 *  | escape its scope. Since the function is required to work for _any_ row of
	 *  | types `a`, it will work for the existentially-quantified type.
	 */
	var runExistsR = Unsafe_Coerce.unsafeCoerce;
	
	/**
	 *  | The `mkExistsR` function is used to introduce a value of type `ExistsR f`,
	 *  | by providing a value of type `f a`, for some row of types `a` which will be
	 *  | hidden in the existentially-quantified type.
	 */
	var mkExistsR = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    mkExistsR: mkExistsR, 
	    runExistsR: runExistsR
	};


/***/ },
/* 218 */
/*!*********************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.js */ 219);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Writer = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer.purs */ 220);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var Halogen_HTML_Events_Types = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Types.purs */ 221);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Control_Monad_Writer_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs */ 207);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var PreventDefault = (function () {
	    function PreventDefault() {
	
	    };
	    PreventDefault.value = new PreventDefault();
	    return PreventDefault;
	})();
	var StopPropagation = (function () {
	    function StopPropagation() {
	
	    };
	    StopPropagation.value = new StopPropagation();
	    return StopPropagation;
	})();
	var StopImmediatePropagation = (function () {
	    function StopImmediatePropagation() {
	
	    };
	    StopImmediatePropagation.value = new StopImmediatePropagation();
	    return StopImmediatePropagation;
	})();
	var EventHandler = function (x) {
	    return x;
	};
	var unEventHandler = function (v) {
	    return v;
	};
	var stopPropagation = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ StopPropagation.value ]);
	var stopImmediatePropagation = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ StopImmediatePropagation.value ]);
	var runEventHandler = function (dictMonad) {
	    return function (dictMonadEff) {
	        return function (e) {
	            return function (v) {
	                var applyUpdate = function (v1) {
	                    if (v1 instanceof PreventDefault) {
	                        return $foreign.preventDefaultImpl(e);
	                    };
	                    if (v1 instanceof StopPropagation) {
	                        return $foreign.stopPropagationImpl(e);
	                    };
	                    if (v1 instanceof StopImmediatePropagation) {
	                        return $foreign.stopImmediatePropagationImpl(e);
	                    };
	                    throw new Error("Failed pattern match at Halogen.HTML.Events.Handler line 89, column 3 - line 89, column 63: " + [ v1.constructor.name ]);
	                };
	                var $13 = Control_Monad_Writer.runWriter(v);
	                return Data_Function.apply(Control_Monad_Eff_Class.liftEff(dictMonadEff))(Control_Apply.applySecond(Control_Monad_Eff.applyEff)(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)($13.value1)(applyUpdate))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)($13.value0)));
	            };
	        };
	    };
	};
	var preventDefault = Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))([ PreventDefault.value ]);
	var functorEventHandler = new Data_Functor.Functor(function (f) {
	    return function (v) {
	        return Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v);
	    };
	});
	var applyEventHandler = new Control_Apply.Apply(function () {
	    return functorEventHandler;
	}, function (v) {
	    return function (v1) {
	        return Control_Apply.apply(Control_Monad_Writer_Trans.applyWriterT(Data_Semigroup.semigroupArray)(Data_Identity.applyIdentity))(v)(v1);
	    };
	});
	var bindEventHandler = new Control_Bind.Bind(function () {
	    return applyEventHandler;
	}, function (v) {
	    return function (f) {
	        return Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.monadIdentity))(v)(function ($22) {
	            return unEventHandler(f($22));
	        });
	    };
	});
	var applicativeEventHandler = new Control_Applicative.Applicative(function () {
	    return applyEventHandler;
	}, function ($23) {
	    return EventHandler(Control_Applicative.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))($23));
	});
	var monadEventHandler = new Control_Monad.Monad(function () {
	    return applicativeEventHandler;
	}, function () {
	    return bindEventHandler;
	});
	module.exports = {
	    preventDefault: preventDefault, 
	    runEventHandler: runEventHandler, 
	    stopImmediatePropagation: stopImmediatePropagation, 
	    stopPropagation: stopPropagation, 
	    functorEventHandler: functorEventHandler, 
	    applyEventHandler: applyEventHandler, 
	    applicativeEventHandler: applicativeEventHandler, 
	    bindEventHandler: bindEventHandler, 
	    monadEventHandler: monadEventHandler
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 219 */
/*!*******************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Halogen.HTML.Events.Handler
	
	exports.preventDefaultImpl = function (e) {
	  return function () {
	    e.preventDefault();
	  };
	};
	
	exports.stopPropagationImpl = function (e) {
	  return function () {
	    e.stopPropagation();
	  };
	};
	
	exports.stopImmediatePropagationImpl = function (e) {
	  return function () {
	    e.stopImmediatePropagation();
	  };
	};


/***/ },
/* 220 */
/*!********************************************************************************!*\
  !*** ./bower_components/purescript-transformers/src/Control/Monad/Writer.purs ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Writer_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Class.purs */ 136);
	var Control_Monad_Writer_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Writer/Trans.purs */ 207);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var runWriter = function ($0) {
	    return Data_Identity.runIdentity(Control_Monad_Writer_Trans.runWriterT($0));
	};
	var mapWriter = function (f) {
	    return Control_Monad_Writer_Trans.mapWriterT(function ($1) {
	        return Data_Identity.Identity(f(Data_Identity.runIdentity($1)));
	    });
	};
	var execWriter = function (m) {
	    return Data_Tuple.snd(runWriter(m));
	};
	module.exports = {
	    execWriter: execWriter, 
	    mapWriter: mapWriter, 
	    runWriter: runWriter
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 221 */
/*!*******************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events/Types.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var DOM_HTML_Event_DragEvent_DataTransfer = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Event/DragEvent/DataTransfer.purs */ 224);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 222 */
/*!*********************************************************************!*\
  !*** ./bower_components/purescript-nullable/src/Data/Nullable.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.js */ 223);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
	var toMaybe = function (n) {
	    return Data_Function_Uncurried.runFn3($foreign.nullable)(n)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	};
	var showNullable = function (dictShow) {
	    return new Data_Show.Show(function (n) {
	        var $3 = toMaybe(n);
	        if ($3 instanceof Data_Maybe.Nothing) {
	            return "null";
	        };
	        if ($3 instanceof Data_Maybe.Just) {
	            return Data_Show.show(dictShow)($3.value0);
	        };
	        throw new Error("Failed pattern match at Data.Nullable line 39, column 12 - line 41, column 30: " + [ $3.constructor.name ]);
	    });
	};
	var eqNullable = function (dictEq) {
	    return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
	};
	var ordNullable = function (dictOrd) {
	    return new Data_Ord.Ord(function () {
	        return eqNullable(dictOrd["__superclass_Data.Eq.Eq_0"]());
	    }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
	};
	module.exports = {
	    toMaybe: toMaybe, 
	    toNullable: toNullable, 
	    showNullable: showNullable, 
	    eqNullable: eqNullable, 
	    ordNullable: ordNullable
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 223 */
/*!*******************************************************************!*\
  !*** ./bower_components/purescript-nullable/src/Data/Nullable.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	exports["null"] = null;
	
	exports.nullable = function(a, r, f) {
	    return a == null ? r : f(a);
	};
	
	exports.notNull = function(x) {
	    return x;
	};


/***/ },
/* 224 */
/*!****************************************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Event/DragEvent/DataTransfer.purs ***!
  \****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Event/DragEvent/DataTransfer.js */ 225);
	var DOM_File_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/File/Types.purs */ 226);
	module.exports = {
	    files: $foreign.files
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 225 */
/*!**************************************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Event/DragEvent/DataTransfer.js ***!
  \**************************************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	exports.files = function (dataTransfer) {
	  return dataTransfer.files;
	};


/***/ },
/* 226 */
/*!*****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/File/Types.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var fileToBlob = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    fileToBlob: fileToBlob
	};


/***/ },
/* 227 */
/*!*******************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Query.purs ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Aff_Free = __webpack_require__(/*! ./bower_components/purescript-aff-free/src/Control/Monad/Aff/Free.purs */ 202);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Halogen_Query_EventSource = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs */ 208);
	var Halogen_Query_HalogenF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs */ 201);
	var Halogen_Query_StateF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/StateF.purs */ 213);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var subscribe$prime = function (es) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.SubscribeHF(Halogen_Query_EventSource.toParentEventSource(es), Data_Unit.unit));
	};
	var subscribe = function (es) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.SubscribeHF(es, Data_Unit.unit));
	};
	var request = function (req) {
	    return req(Control_Category.id(Control_Category.categoryFn));
	};
	var modify = function (f) {
	    return Control_Monad_Free.liftF(new Halogen_Query_HalogenF.StateHF(new Halogen_Query_StateF.Modify(f, Data_Unit.unit)));
	};
	var set = function ($0) {
	    return modify(Data_Function["const"]($0));
	};
	var liftH = function ($1) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.QueryHF.create($1));
	};
	var gets = function ($2) {
	    return Control_Monad_Free.liftF(Halogen_Query_HalogenF.StateHF.create(Halogen_Query_StateF.Get.create($2)));
	};
	var get = gets(Control_Category.id(Control_Category.categoryFn));
	var action = function (act) {
	    return act(Data_Unit.unit);
	};
	module.exports = {
	    action: action, 
	    get: get, 
	    gets: gets, 
	    liftH: liftH, 
	    modify: modify, 
	    request: request, 
	    set: set, 
	    subscribe: subscribe, 
	    "subscribe'": subscribe$prime
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 228 */
/*!********************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Driver.purs ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Coroutine = __webpack_require__(/*! ./bower_components/purescript-coroutines/src/Control/Coroutine.purs */ 210);
	var Control_Coroutine_Stalling_1 = __webpack_require__(/*! ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs */ 212);
	var Control_Coroutine_Stalling_1 = __webpack_require__(/*! ./bower_components/purescript-stalling-coroutines/src/Control/Coroutine/Stalling.purs */ 212);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Aff_AVar = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs */ 143);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Free = __webpack_require__(/*! ./bower_components/purescript-free/src/Control/Monad/Free.purs */ 178);
	var Control_Monad_Rec_Class = __webpack_require__(/*! ./bower_components/purescript-tailrec/src/Control/Monad/Rec/Class.purs */ 114);
	var Control_Monad_State = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State.purs */ 214);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Plus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/Plus.purs */ 82);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var DOM_Node_Node = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Node.purs */ 229);
	var Halogen_Component = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component.purs */ 177);
	var Halogen_Component_Hook = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/Hook.purs */ 200);
	var Halogen_Effects = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Effects.purs */ 235);
	var Halogen_HTML_Renderer_VirtualDOM = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Renderer/VirtualDOM.purs */ 236);
	var Halogen_Internal_VirtualDOM = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Internal/VirtualDOM.purs */ 237);
	var Halogen_Query = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query.purs */ 227);
	var Halogen_Query_HalogenF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/HalogenF.purs */ 201);
	var Halogen_Query_EventSource = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/EventSource.purs */ 208);
	var Halogen_Query_StateF = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query/StateF.purs */ 213);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Monad_State_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs */ 206);
	var Data_Identity = __webpack_require__(/*! ./bower_components/purescript-identity/src/Data/Identity.purs */ 119);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Monad_Free_Trans = __webpack_require__(/*! ./bower_components/purescript-freet/src/Control/Monad/Free/Trans.purs */ 187);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var onInitializers = function (dictFoldable) {
	    return function (f) {
	        var go = function (v) {
	            return function (as) {
	                if (v instanceof Halogen_Component_Hook.PostRender) {
	                    return new Data_List.Cons(f(v.value0), as);
	                };
	                return as;
	            };
	        };
	        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
	    };
	};
	var onFinalizers = function (dictFoldable) {
	    return function (f) {
	        var go = function (v) {
	            return function (as) {
	                if (v instanceof Halogen_Component_Hook.Finalized) {
	                    return new Data_List.Cons(f(v.value0), as);
	                };
	                return as;
	            };
	        };
	        return Data_Foldable.foldr(dictFoldable)(go)(Data_List.Nil.value);
	    };
	};
	var runUI = function (c) {
	    return function (s) {
	        return function (element) {
	            var driver$prime = function (e) {
	                return function (s1) {
	                    return function (i) {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](s1))(function (v) {
	                            return Data_Function.flip(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff))(e(i))(function (h) {
	                                if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v1) {
	                                        var $29 = Control_Monad_State.runState(Halogen_Query_StateF.stateN(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(h.value0))(v1);
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)($29.value1))(function () {
	                                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($29.value0);
	                                        });
	                                    });
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(Data_Maybe.Nothing.value));
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                                    return h.value0;
	                                };
	                                if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                                    return Control_Plus.empty(Control_Monad_Aff.plusAff);
	                                };
	                                throw new Error("Failed pattern match at Halogen.Driver line 145, column 7 - line 156, column 24: " + [ h.constructor.name ]);
	                            });
	                        });
	                    };
	                };
	            };
	            var render = function (ref) {
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                    if (v.renderPaused) {
	                        return Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))((function () {
	                            var $41 = {};
	                            for (var $42 in v) {
	                                if (v.hasOwnProperty($42)) {
	                                    $41[$42] = v[$42];
	                                };
	                            };
	                            $41.renderPending = true;
	                            return $41;
	                        })());
	                    };
	                    if (!v.renderPaused) {
	                        var rc = Halogen_Component.renderComponent(c)(v.state);
	                        var vtree$prime = Halogen_HTML_Renderer_VirtualDOM.renderTree(driver(ref))(rc.tree);
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Halogen_Internal_VirtualDOM.patch(Halogen_Internal_VirtualDOM.diff(v.vtree)(vtree$prime))(v.node)))(function (v1) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)({
	                                node: v1, 
	                                vtree: vtree$prime, 
	                                state: rc.state, 
	                                renderPending: false, 
	                                renderPaused: true
	                            }))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onFinalizers(Data_Foldable.foldableArray)(Halogen_Component_Hook.runFinalized(driver$prime))(rc.hooks)))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(driver(ref))(rc.hooks)))(function () {
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v2) {
	                                            var $44 = {};
	                                            for (var $45 in v2) {
	                                                if (v2.hasOwnProperty($45)) {
	                                                    $44[$45] = v2[$45];
	                                                };
	                                            };
	                                            $44.renderPaused = false;
	                                            return $44;
	                                        })(ref))(function () {
	                                            return flushRender(ref);
	                                        });
	                                    });
	                                });
	                            });
	                        });
	                    };
	                    throw new Error("Failed pattern match at Halogen.Driver line 161, column 5 - line 177, column 24: " + [ v.renderPaused.constructor.name ]);
	                });
	            };
	            var flushRender = Control_Monad_Rec_Class.tailRecM(Control_Monad_Aff.monadRecAff)(function (ref) {
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
	                        var $47 = !v.renderPending;
	                        if ($47) {
	                            return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Right(Data_Unit.unit));
	                        };
	                        if (!$47) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(render(ref))(function () {
	                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new Data_Either.Left(ref));
	                            });
	                        };
	                        throw new Error("Failed pattern match at Halogen.Driver line 183, column 5 - line 187, column 24: " + [ $47.constructor.name ]);
	                    });
	                });
	            });
	            var $$eval = function (ref) {
	                return function (rpRef) {
	                    return function (h) {
	                        if (h instanceof Halogen_Query_HalogenF.StateHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (v) {
	                                if (h.value0 instanceof Halogen_Query_StateF.Get) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)(v))(function () {
	                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value0(v.state));
	                                    });
	                                };
	                                if (h.value0 instanceof Halogen_Query_StateF.Modify) {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v1) {
	                                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(ref))((function () {
	                                            var $53 = {};
	                                            for (var $54 in v) {
	                                                if (v.hasOwnProperty($54)) {
	                                                    $53[$54] = v[$54];
	                                                };
	                                            };
	                                            $53.state = h.value0.value0(v.state);
	                                            return $53;
	                                        })()))(function () {
	                                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff_AVar.putVar(rpRef))(new Data_Maybe.Just(Halogen_Query_HalogenF.Pending.value)))(function () {
	                                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value0.value1);
	                                            });
	                                        });
	                                    });
	                                };
	                                throw new Error("Failed pattern match at Halogen.Driver line 107, column 9 - line 115, column 22: " + [ h.value0.constructor.name ]);
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.SubscribeHF) {
	                            var producer = Halogen_Query_EventSource.runEventSource(h.value0);
	                            var consumer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Bind.bindFlipped(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(function ($72) {
	                                return Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(driver(ref)($72));
	                            })(Control_Coroutine["await"](Control_Monad_Aff.monadAff)));
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Control_Coroutine_Stalling_1.runStallingProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine_Stalling_1.fuse(Control_Monad_Aff.monadRecAff)(producer)(consumer))))(function () {
	                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.RenderHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(Data_Function["const"](h.value0))(rpRef))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isNothing(h.value0)))(render(ref)))(function () {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(h.value1);
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.RenderPendingHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(v))(function () {
	                                    return Data_Function.apply(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(h.value0(v));
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.QueryHF) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(rpRef))(function (v) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v)))(render(ref)))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(rpRef)(Data_Maybe.Nothing.value))(function () {
	                                        return h.value0;
	                                    });
	                                });
	                            });
	                        };
	                        if (h instanceof Halogen_Query_HalogenF.HaltHF) {
	                            return Control_Plus.empty(Control_Monad_Aff.plusAff);
	                        };
	                        throw new Error("Failed pattern match at Halogen.Driver line 104, column 5 - line 134, column 22: " + [ h.constructor.name ]);
	                    };
	                };
	            };
	            var driver = function (ref) {
	                return function (q) {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](Data_Maybe.Nothing.value))(function (v) {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Free.runFreeM(Halogen_Query_HalogenF.functorHalogenF(Control_Monad_Aff.functorAff))(Control_Monad_Aff.monadRecAff)($$eval(ref)(v))(Halogen_Component.queryComponent(c)(q)))(function (v1) {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v2) {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(Data_Maybe.isJust(v2)))(render(ref)))(function () {
	                                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
	                                });
	                            });
	                        });
	                    });
	                };
	            };
	            return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
	                return v.driver;
	            })(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
	                var rc = Halogen_Component.renderComponent(c)(s);
	                var dr = driver(v);
	                var vtree = Halogen_HTML_Renderer_VirtualDOM.renderTree(dr)(rc.tree);
	                var node = Halogen_Internal_VirtualDOM.createElement(vtree);
	                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(v)({
	                    node: node, 
	                    vtree: vtree, 
	                    state: rc.state, 
	                    renderPending: false, 
	                    renderPaused: true
	                }))(function () {
	                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(node))(DOM_HTML_Types.htmlElementToNode(element))))(function () {
	                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAll(Data_List.foldableList))(onInitializers(Data_Foldable.foldableArray)(dr)(rc.hooks)))(function () {
	                            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Aff.forkAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(dr)(Halogen_Component.initializeComponent(c))))(function () {
	                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.modifyVar(function (v1) {
	                                    var $70 = {};
	                                    for (var $71 in v1) {
	                                        if (v1.hasOwnProperty($71)) {
	                                            $70[$71] = v1[$71];
	                                        };
	                                    };
	                                    $70.renderPaused = false;
	                                    return $70;
	                                })(v))(function () {
	                                    return Control_Bind.bind(Control_Monad_Aff.bindAff)(flushRender(v))(function () {
	                                        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
	                                            driver: dr
	                                        });
	                                    });
	                                });
	                            });
	                        });
	                    });
	                });
	            }));
	        };
	    };
	};
	module.exports = {
	    runUI: runUI
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 229 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/Node.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Node.js */ 230);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Data_Enum = __webpack_require__(/*! ./bower_components/purescript-enums/src/Data/Enum.purs */ 231);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_Node_NodeType = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/NodeType.purs */ 234);
	var DOM_Node_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Types.purs */ 173);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var nodeType = function (dictPartial) {
	    return function ($1) {
	        return Data_Maybe.fromJust(dictPartial)(Data_Enum.toEnum(DOM_Node_NodeType.boundedEnumNodeType)($foreign.nodeTypeIndex($1)));
	    };
	};
	module.exports = {
	    nodeType: nodeType, 
	    appendChild: $foreign.appendChild, 
	    baseURI: $foreign.baseURI, 
	    childNodes: $foreign.childNodes, 
	    clone: $foreign.clone, 
	    compareDocumentPositionBits: $foreign.compareDocumentPositionBits, 
	    contains: $foreign.contains, 
	    deepClone: $foreign.deepClone, 
	    firstChild: $foreign.firstChild, 
	    hasChildNodes: $foreign.hasChildNodes, 
	    insertBefore: $foreign.insertBefore, 
	    isDefaultNamespace: $foreign.isDefaultNamespace, 
	    isEqualNode: $foreign.isEqualNode, 
	    lastChild: $foreign.lastChild, 
	    lookupNamespaceURI: $foreign.lookupNamespaceURI, 
	    lookupPrefix: $foreign.lookupPrefix, 
	    nextSibling: $foreign.nextSibling, 
	    nodeName: $foreign.nodeName, 
	    nodeTypeIndex: $foreign.nodeTypeIndex, 
	    nodeValue: $foreign.nodeValue, 
	    normalize: $foreign.normalize, 
	    ownerDocument: $foreign.ownerDocument, 
	    parentElement: $foreign.parentElement, 
	    parentNode: $foreign.parentNode, 
	    previousSibling: $foreign.previousSibling, 
	    removeChild: $foreign.removeChild, 
	    replaceChild: $foreign.replaceChild, 
	    setNodeValue: $foreign.setNodeValue, 
	    setTextContent: $foreign.setTextContent, 
	    textContent: $foreign.textContent
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 230 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/Node.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	var getEffProp = function (name) {
	  return function (node) {
	    return function () {
	      return node[name];
	    };
	  };
	};
	
	exports.nodeTypeIndex = function (node) {
	  return node.nodeType;
	};
	
	exports.nodeName = function (node) {
	  return node.nodeName;
	};
	
	exports.baseURI = getEffProp("baseURI");
	
	exports.ownerDocument = getEffProp("ownerDocument");
	
	exports.parentNode = getEffProp("parentNode");
	
	exports.parentElement = getEffProp("parentElement");
	
	exports.hasChildNodes = function (node) {
	  return function () {
	    return node.hasChildNodes();
	  };
	};
	
	exports.childNodes = getEffProp("childNodes");
	
	exports.firstChild = getEffProp("firstChild");
	
	exports.lastChild = getEffProp("lastChild");
	
	exports.previousSibling = getEffProp("previousSibling");
	
	exports.nextSibling = getEffProp("nextSibling");
	
	exports.nodeValue = getEffProp("nodeValue");
	
	exports.setNodeValue = function (value) {
	  return function (node) {
	    return function () {
	      node.nodeValue = value;
	      return {};
	    };
	  };
	};
	
	exports.textContent = getEffProp("textContent");
	
	exports.setTextContent = function (value) {
	  return function (node) {
	    return function () {
	      node.textContent = value;
	      return {};
	    };
	  };
	};
	
	exports.normalize = function (node) {
	  return function () {
	    node.normalize();
	    return {};
	  };
	};
	
	exports.clone = function (node) {
	  return function () {
	    return node.clone(false);
	  };
	};
	
	exports.deepClone = function (node) {
	  return function () {
	    return node.clone(false);
	  };
	};
	
	exports.isEqualNode = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.isEqualNode(node2);
	    };
	  };
	};
	
	exports.compareDocumentPositionBits = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.compareDocumentPosition(node2);
	    };
	  };
	};
	
	exports.contains = function (node1) {
	  return function (node2) {
	    return function () {
	      return node1.contains(node2);
	    };
	  };
	};
	
	exports.lookupPrefix = function (prefix) {
	  return function (node) {
	    return function () {
	      return node.lookupPrefix(prefix);
	    };
	  };
	};
	
	exports.lookupNamespaceURI = function (ns) {
	  return function (node) {
	    return function () {
	      return node.lookupNamespaceURI(ns);
	    };
	  };
	};
	
	exports.isDefaultNamespace = function (ns) {
	  return function (node) {
	    return function () {
	      return node.isDefaultNamespace(ns);
	    };
	  };
	};
	
	exports.insertBefore = function (node1) {
	  return function (node2) {
	    return function (parent) {
	      return function () {
	        return parent.insertBefore(node1, node2);
	      };
	    };
	  };
	};
	
	exports.appendChild = function (node) {
	  return function (parent) {
	    return function () {
	      return parent.appendChild(node);
	    };
	  };
	};
	
	exports.replaceChild = function (oldChild) {
	  return function (newChild) {
	    return function (parent) {
	      return function () {
	        return parent.replaceChild(oldChild, newChild);
	      };
	    };
	  };
	};
	
	exports.removeChild = function (node) {
	  return function (parent) {
	    return function () {
	      return parent.removeChild(node);
	    };
	  };
	};


/***/ },
/* 231 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-enums/src/Data/Enum.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_MonadPlus = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadPlus.purs */ 124);
	var Data_Char = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/Char.purs */ 232);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Unfoldable = __webpack_require__(/*! ./bower_components/purescript-unfoldable/src/Data/Unfoldable.purs */ 164);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ordering = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ordering.purs */ 62);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_MonadZero = __webpack_require__(/*! ./bower_components/purescript-control/src/Control/MonadZero.purs */ 102);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Cardinality = function (x) {
	    return x;
	};
	var Enum = function (__superclass_Data$dotOrd$dotOrd_0, pred, succ) {
	    this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
	    this.pred = pred;
	    this.succ = succ;
	};
	var BoundedEnum = function (__superclass_Data$dotBounded$dotBounded_0, __superclass_Data$dotEnum$dotEnum_1, cardinality, fromEnum, toEnum) {
	    this["__superclass_Data.Bounded.Bounded_0"] = __superclass_Data$dotBounded$dotBounded_0;
	    this["__superclass_Data.Enum.Enum_1"] = __superclass_Data$dotEnum$dotEnum_1;
	    this.cardinality = cardinality;
	    this.fromEnum = fromEnum;
	    this.toEnum = toEnum;
	};
	var toEnum = function (dict) {
	    return dict.toEnum;
	};
	var succ = function (dict) {
	    return dict.succ;
	};
	var runCardinality = function (v) {
	    return v;
	};
	var pred = function (dict) {
	    return dict.pred;
	};
	var intStepFromTo = function (step) {
	    return function (from) {
	        return function (to) {
	            return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
	                var $51 = e <= to;
	                if ($51) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(new Data_Tuple.Tuple(e, e + step | 0));
	                };
	                if (!$51) {
	                    return Data_Maybe.Nothing.value;
	                };
	                throw new Error("Failed pattern match at Data.Enum line 120, column 13 - line 122, column 25: " + [ $51.constructor.name ]);
	            })(from);
	        };
	    };
	};
	var fromEnum = function (dict) {
	    return dict.fromEnum;
	};
	var enumUnit = new Enum(function () {
	    return Data_Ord.ordUnit;
	}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));
	var enumTuple = function (dictEnum) {
	    return function (dictBoundedEnum) {
	        return new Enum(function () {
	            return Data_Tuple.ordTuple(dictEnum["__superclass_Data.Ord.Ord_0"]())((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(pred(dictEnum)(v.value0)))(function ($98) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($98));
	            })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
	        }, function (v) {
	            return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())))(succ(dictEnum)(v.value0)))(function ($99) {
	                return Data_Maybe.Just.create(Data_Tuple.Tuple.create(v.value0)($99));
	            })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value1));
	        });
	    };
	};
	var enumOrdering = new Enum(function () {
	    return Data_Ord.ordOrdering;
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return Data_Maybe.Nothing.value;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    throw new Error("Failed pattern match at Data.Enum line 70, column 3 - line 70, column 20: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 67, column 3 - line 67, column 20: " + [ v.constructor.name ]);
	});
	var enumMaybe = function (dictBoundedEnum) {
	    return new Enum(function () {
	        return Data_Maybe.ordMaybe((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Maybe.Nothing.value;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Function.apply(Data_Maybe.Just.create)(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 77, column 3 - line 77, column 25: " + [ v.constructor.name ]);
	    }, function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return Data_Function.apply(Data_Maybe.Just.create)(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())));
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	        };
	        throw new Error("Failed pattern match at Data.Enum line 75, column 3 - line 75, column 36: " + [ v.constructor.name ]);
	    });
	};
	var enumInt = new Enum(function () {
	    return Data_Ord.ordInt;
	}, function (n) {
	    var $64 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);
	    if ($64) {
	        return new Data_Maybe.Just(n - 1);
	    };
	    if (!$64) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 52, column 12 - line 52, column 56: " + [ $64.constructor.name ]);
	}, function (n) {
	    var $65 = n < Data_Bounded.top(Data_Bounded.boundedInt);
	    if ($65) {
	        return new Data_Maybe.Just(n + 1 | 0);
	    };
	    if (!$65) {
	        return Data_Maybe.Nothing.value;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 51, column 12 - line 51, column 53: " + [ $65.constructor.name ]);
	});
	var enumFromTo = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return function (from) {
	            return function (to) {
	                var go = function (mx) {
	                    return Control_Bind.bind(Data_Maybe.bindMaybe)(mx)(function (v) {
	                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Ord.lessThanOrEq(dictEnum["__superclass_Data.Ord.Ord_0"]())(v)(to)))(function () {
	                            return Data_Function.apply(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(new Data_Tuple.Tuple(v, succ(dictEnum)(v)));
	                        });
	                    });
	                };
	                return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_Maybe.Just(from));
	            };
	        };
	    };
	};
	var enumFromThenTo = function (dictBoundedEnum) {
	    return Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return function (a) {
	            return function (b) {
	                return function (c) {
	                    var c$prime = fromEnum(dictBoundedEnum)(c);
	                    var b$prime = fromEnum(dictBoundedEnum)(b);
	                    var a$prime = fromEnum(dictBoundedEnum)(a);
	                    return Data_Functor.map(Data_Functor.functorArray)(function ($100) {
	                        return Data_Maybe.fromJust(dictPartial)(toEnum(dictBoundedEnum)($100));
	                    })(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
	                };
	            };
	        };
	    });
	};
	var enumEither = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new Enum(function () {
	            return Data_Either.ordEither((dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]())((dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())["__superclass_Data.Ord.Ord_0"]());
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($101) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($101));
	                })(pred(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Function.apply(Data_Maybe.Just.create)(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]()))))(function ($102) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($102));
	                })(pred(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 83, column 3 - line 83, column 59: " + [ v.constructor.name ]);
	        }, function (v) {
	            if (v instanceof Data_Either.Left) {
	                return Data_Maybe.maybe(Data_Function.apply(Data_Maybe.Just.create)(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]()))))(function ($103) {
	                    return Data_Maybe.Just.create(Data_Either.Left.create($103));
	                })(succ(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            if (v instanceof Data_Either.Right) {
	                return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($104) {
	                    return Data_Maybe.Just.create(Data_Either.Right.create($104));
	                })(succ(dictBoundedEnum1["__superclass_Data.Enum.Enum_1"]())(v.value0));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 81, column 3 - line 81, column 71: " + [ v.constructor.name ]);
	        });
	    };
	};
	var enumBoolean = new Enum(function () {
	    return Data_Ord.ordBoolean;
	}, function (v) {
	    if (v) {
	        return new Data_Maybe.Just(false);
	    };
	    return Data_Maybe.Nothing.value;
	}, function (v) {
	    if (!v) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var diag = function (a) {
	    return new Data_Tuple.Tuple(a, a);
	};
	var downFrom = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($105) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(pred(dictEnum)($105));
	        });
	    };
	};
	var upFrom = function (dictEnum) {
	    return function (dictUnfoldable) {
	        return Data_Unfoldable.unfoldr(dictUnfoldable)(function ($106) {
	            return Data_Functor.map(Data_Maybe.functorMaybe)(diag)(succ(dictEnum)($106));
	        });
	    };
	};
	var defaultToEnum = function (dictBounded) {
	    return function (dictEnum) {
	        return function (n) {
	            if (n < 0) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (n === 0) {
	                return new Data_Maybe.Just(Data_Bounded.bottom(dictBounded));
	            };
	            if (Data_Boolean.otherwise) {
	                return Control_Bind.bind(Data_Maybe.bindMaybe)(defaultToEnum(dictBounded)(dictEnum)(n - 1))(succ(dictEnum));
	            };
	            throw new Error("Failed pattern match at Data.Enum line 237, column 1 - line 240, column 47: " + [ n.constructor.name ]);
	        };
	    };
	};
	var defaultSucc = function (toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) + 1 | 0);
	        };
	    };
	};
	var defaultPred = function (toEnum$prime) {
	    return function (fromEnum$prime) {
	        return function (a) {
	            return toEnum$prime(fromEnum$prime(a) - 1);
	        };
	    };
	};
	var defaultFromEnum = function (dictEnum) {
	    return function ($107) {
	        return Data_Maybe.maybe(0)(function (prd) {
	            return defaultFromEnum(dictEnum)(prd) + 1 | 0;
	        })(pred(dictEnum)($107));
	    };
	};
	var defaultCardinality = function (dictBounded) {
	    return function (dictEnum) {
	        var defaultCardinality$prime = function (i) {
	            return function ($108) {
	                return Data_Maybe.maybe(i)(Data_Function.apply(defaultCardinality$prime)(i + 1 | 0))(succ(dictEnum)($108));
	            };
	        };
	        return Data_Function.apply(Cardinality)(defaultCardinality$prime(1)(Data_Bounded.bottom(dictBounded)));
	    };
	};
	var charToEnum = function (v) {
	    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
	        return Data_Function.apply(Data_Maybe.Just.create)(Data_Char.fromCharCode(v));
	    };
	    return Data_Maybe.Nothing.value;
	};
	var enumChar = new Enum(function () {
	    return Data_Ord.ordChar;
	}, defaultPred(charToEnum)(Data_Char.toCharCode), defaultSucc(charToEnum)(Data_Char.toCharCode));
	var cardinality = function (dict) {
	    return dict.cardinality;
	};
	var boundedEnumUnit = new BoundedEnum(function () {
	    return Data_Bounded.boundedUnit;
	}, function () {
	    return enumUnit;
	}, 1, Data_Function["const"](0), function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Unit.unit);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumTuple = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Tuple.boundedTuple(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
	        }, function () {
	            return enumTuple(dictBoundedEnum["__superclass_Data.Enum.Enum_1"]())(dictBoundedEnum1);
	        }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) * runCardinality(cardinality(dictBoundedEnum1)) | 0), (function () {
	            var from = function (v) {
	                return function (v1) {
	                    return (fromEnum(dictBoundedEnum)(v1.value0) * v | 0) + fromEnum(dictBoundedEnum1)(v1.value1) | 0;
	                };
	            };
	            return from(cardinality(dictBoundedEnum1));
	        })(), (function () {
	            var to = function (v) {
	                return function (n) {
	                    return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(dictBoundedEnum)(n / v | 0)))(toEnum(dictBoundedEnum1)(n % v));
	                };
	            };
	            return to(cardinality(dictBoundedEnum1));
	        })());
	    };
	};
	var boundedEnumOrdering = new BoundedEnum(function () {
	    return Data_Bounded.boundedOrdering;
	}, function () {
	    return enumOrdering;
	}, 3, function (v) {
	    if (v instanceof Data_Ordering.LT) {
	        return 0;
	    };
	    if (v instanceof Data_Ordering.EQ) {
	        return 1;
	    };
	    if (v instanceof Data_Ordering.GT) {
	        return 2;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 186, column 3 - line 187, column 3: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(Data_Ordering.LT.value);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(Data_Ordering.EQ.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(Data_Ordering.GT.value);
	    };
	    return Data_Maybe.Nothing.value;
	});
	var boundedEnumMaybe = function (dictBoundedEnum) {
	    return new BoundedEnum(function () {
	        return Data_Maybe.boundedMaybe(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]());
	    }, function () {
	        return enumMaybe(dictBoundedEnum);
	    }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) + 1 | 0), function (v) {
	        if (v instanceof Data_Maybe.Nothing) {
	            return 0;
	        };
	        if (v instanceof Data_Maybe.Just) {
	            return fromEnum(dictBoundedEnum)(v.value0) + 1 | 0;
	        };
	        throw new Error("Failed pattern match at Data.Enum line 198, column 3 - line 199, column 3: " + [ v.constructor.name ]);
	    }, (function () {
	        var to = function (v) {
	            return function (v1) {
	                if (v1 === 0) {
	                    return Data_Maybe.Nothing.value;
	                };
	                if (v1 <= v) {
	                    return Data_Function.apply(Data_Maybe.Just.create)(toEnum(dictBoundedEnum)(v1 - 1));
	                };
	                return Data_Maybe.Nothing.value;
	            };
	        };
	        return to(cardinality(dictBoundedEnum));
	    })());
	};
	var boundedEnumInt = new BoundedEnum(function () {
	    return Data_Bounded.boundedInt;
	}, function () {
	    return enumInt;
	}, Data_Bounded.top(Data_Bounded.boundedInt) - Data_Bounded.bottom(Data_Bounded.boundedInt), Control_Category.id(Control_Category.categoryFn), Data_Maybe.Just.create);
	var boundedEnumEither = function (dictBoundedEnum) {
	    return function (dictBoundedEnum1) {
	        return new BoundedEnum(function () {
	            return Data_Either.boundedEither(dictBoundedEnum["__superclass_Data.Bounded.Bounded_0"]())(dictBoundedEnum1["__superclass_Data.Bounded.Bounded_0"]());
	        }, function () {
	            return enumEither(dictBoundedEnum)(dictBoundedEnum1);
	        }, Data_Function.apply(Cardinality)(runCardinality(cardinality(dictBoundedEnum)) + runCardinality(cardinality(dictBoundedEnum1)) | 0), function (v) {
	            if (v instanceof Data_Either.Left) {
	                return fromEnum(dictBoundedEnum)(v.value0);
	            };
	            if (v instanceof Data_Either.Right) {
	                return fromEnum(dictBoundedEnum1)(v.value0) + runCardinality(cardinality(dictBoundedEnum)) | 0;
	            };
	            throw new Error("Failed pattern match at Data.Enum line 213, column 3 - line 213, column 33: " + [ v.constructor.name ]);
	        }, (function () {
	            var to = function (v) {
	                return function (v1) {
	                    return function (n) {
	                        if (n >= 0 && n < v) {
	                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(dictBoundedEnum)(n));
	                        };
	                        if (n >= v && n < v1) {
	                            return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(dictBoundedEnum1)(n - v));
	                        };
	                        if (Data_Boolean.otherwise) {
	                            return Data_Maybe.Nothing.value;
	                        };
	                        throw new Error("Failed pattern match at Data.Enum line 209, column 5 - line 212, column 28: " + [ v.constructor.name, v1.constructor.name, n.constructor.name ]);
	                    };
	                };
	            };
	            return to(cardinality(dictBoundedEnum))(cardinality(boundedEnumEither(dictBoundedEnum)(dictBoundedEnum1)));
	        })());
	    };
	};
	var boundedEnumChar = new BoundedEnum(function () {
	    return Data_Bounded.boundedChar;
	}, function () {
	    return enumChar;
	}, Data_Char.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - Data_Char.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)), Data_Char.toCharCode, charToEnum);
	var boundedEnumBoolean = new BoundedEnum(function () {
	    return Data_Bounded.boundedBoolean;
	}, function () {
	    return enumBoolean;
	}, 2, function (v) {
	    if (!v) {
	        return 0;
	    };
	    if (v) {
	        return 1;
	    };
	    throw new Error("Failed pattern match at Data.Enum line 161, column 3 - line 162, column 3: " + [ v.constructor.name ]);
	}, function (v) {
	    if (v === 0) {
	        return new Data_Maybe.Just(false);
	    };
	    if (v === 1) {
	        return new Data_Maybe.Just(true);
	    };
	    return Data_Maybe.Nothing.value;
	});
	module.exports = {
	    Cardinality: Cardinality, 
	    BoundedEnum: BoundedEnum, 
	    Enum: Enum, 
	    cardinality: cardinality, 
	    defaultCardinality: defaultCardinality, 
	    defaultFromEnum: defaultFromEnum, 
	    defaultPred: defaultPred, 
	    defaultSucc: defaultSucc, 
	    defaultToEnum: defaultToEnum, 
	    downFrom: downFrom, 
	    enumFromThenTo: enumFromThenTo, 
	    enumFromTo: enumFromTo, 
	    fromEnum: fromEnum, 
	    pred: pred, 
	    runCardinality: runCardinality, 
	    succ: succ, 
	    toEnum: toEnum, 
	    upFrom: upFrom, 
	    enumBoolean: enumBoolean, 
	    enumInt: enumInt, 
	    enumChar: enumChar, 
	    enumUnit: enumUnit, 
	    enumOrdering: enumOrdering, 
	    enumMaybe: enumMaybe, 
	    enumEither: enumEither, 
	    enumTuple: enumTuple, 
	    boundedEnumBoolean: boundedEnumBoolean, 
	    boundedEnumInt: boundedEnumInt, 
	    boundedEnumChar: boundedEnumChar, 
	    boundedEnumUnit: boundedEnumUnit, 
	    boundedEnumOrdering: boundedEnumOrdering, 
	    boundedEnumMaybe: boundedEnumMaybe, 
	    boundedEnumEither: boundedEnumEither, 
	    boundedEnumTuple: boundedEnumTuple
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 232 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/Char.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 *  | A type and functions for single characters.
	 */
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/Char.js */ 233);
	module.exports = {
	    fromCharCode: $foreign.fromCharCode, 
	    toCharCode: $foreign.toCharCode, 
	    toLower: $foreign.toLower, 
	    toUpper: $foreign.toUpper
	};


/***/ },
/* 233 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-strings/src/Data/Char.js ***!
  \**************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.Char
	
	exports.toCharCode = function (c) {
	  return c.charCodeAt(0);
	};
	
	exports.fromCharCode = function (c) {
	  return String.fromCharCode(c);
	};
	
	exports.toLower = function (c) {
	  return c.toLowerCase();
	};
	
	exports.toUpper = function (c) {
	  return c.toUpperCase();
	};


/***/ },
/* 234 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/NodeType.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Enum = __webpack_require__(/*! ./bower_components/purescript-enums/src/Data/Enum.purs */ 231);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Bounded = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Bounded.purs */ 53);
	var ElementNode = (function () {
	    function ElementNode() {
	
	    };
	    ElementNode.value = new ElementNode();
	    return ElementNode;
	})();
	var AttributeNode = (function () {
	    function AttributeNode() {
	
	    };
	    AttributeNode.value = new AttributeNode();
	    return AttributeNode;
	})();
	var TextNode = (function () {
	    function TextNode() {
	
	    };
	    TextNode.value = new TextNode();
	    return TextNode;
	})();
	var CDATASectionNode = (function () {
	    function CDATASectionNode() {
	
	    };
	    CDATASectionNode.value = new CDATASectionNode();
	    return CDATASectionNode;
	})();
	var EntityReferenceNode = (function () {
	    function EntityReferenceNode() {
	
	    };
	    EntityReferenceNode.value = new EntityReferenceNode();
	    return EntityReferenceNode;
	})();
	var EntityNode = (function () {
	    function EntityNode() {
	
	    };
	    EntityNode.value = new EntityNode();
	    return EntityNode;
	})();
	var ProcessingInstructionNode = (function () {
	    function ProcessingInstructionNode() {
	
	    };
	    ProcessingInstructionNode.value = new ProcessingInstructionNode();
	    return ProcessingInstructionNode;
	})();
	var CommentNode = (function () {
	    function CommentNode() {
	
	    };
	    CommentNode.value = new CommentNode();
	    return CommentNode;
	})();
	var DocumentNode = (function () {
	    function DocumentNode() {
	
	    };
	    DocumentNode.value = new DocumentNode();
	    return DocumentNode;
	})();
	var DocumentTypeNode = (function () {
	    function DocumentTypeNode() {
	
	    };
	    DocumentTypeNode.value = new DocumentTypeNode();
	    return DocumentTypeNode;
	})();
	var DocumentFragmentNode = (function () {
	    function DocumentFragmentNode() {
	
	    };
	    DocumentFragmentNode.value = new DocumentFragmentNode();
	    return DocumentFragmentNode;
	})();
	var NotationNode = (function () {
	    function NotationNode() {
	
	    };
	    NotationNode.value = new NotationNode();
	    return NotationNode;
	})();
	var toEnumNodeType = function (v) {
	    if (v === 1) {
	        return new Data_Maybe.Just(ElementNode.value);
	    };
	    if (v === 2) {
	        return new Data_Maybe.Just(AttributeNode.value);
	    };
	    if (v === 3) {
	        return new Data_Maybe.Just(TextNode.value);
	    };
	    if (v === 4) {
	        return new Data_Maybe.Just(CDATASectionNode.value);
	    };
	    if (v === 5) {
	        return new Data_Maybe.Just(EntityReferenceNode.value);
	    };
	    if (v === 6) {
	        return new Data_Maybe.Just(EntityNode.value);
	    };
	    if (v === 7) {
	        return new Data_Maybe.Just(ProcessingInstructionNode.value);
	    };
	    if (v === 8) {
	        return new Data_Maybe.Just(CommentNode.value);
	    };
	    if (v === 9) {
	        return new Data_Maybe.Just(DocumentNode.value);
	    };
	    if (v === 10) {
	        return new Data_Maybe.Just(DocumentTypeNode.value);
	    };
	    if (v === 11) {
	        return new Data_Maybe.Just(DocumentFragmentNode.value);
	    };
	    if (v === 12) {
	        return new Data_Maybe.Just(NotationNode.value);
	    };
	    return Data_Maybe.Nothing.value;
	};
	var fromEnumNodeType = function (v) {
	    if (v instanceof ElementNode) {
	        return 1;
	    };
	    if (v instanceof AttributeNode) {
	        return 2;
	    };
	    if (v instanceof TextNode) {
	        return 3;
	    };
	    if (v instanceof CDATASectionNode) {
	        return 4;
	    };
	    if (v instanceof EntityReferenceNode) {
	        return 5;
	    };
	    if (v instanceof EntityNode) {
	        return 6;
	    };
	    if (v instanceof ProcessingInstructionNode) {
	        return 7;
	    };
	    if (v instanceof CommentNode) {
	        return 8;
	    };
	    if (v instanceof DocumentNode) {
	        return 9;
	    };
	    if (v instanceof DocumentTypeNode) {
	        return 10;
	    };
	    if (v instanceof DocumentFragmentNode) {
	        return 11;
	    };
	    if (v instanceof NotationNode) {
	        return 12;
	    };
	    throw new Error("Failed pattern match at DOM.Node.NodeType line 55, column 1 - line 56, column 1: " + [ v.constructor.name ]);
	};
	var eqNodeType = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        if (x instanceof ElementNode && y instanceof ElementNode) {
	            return true;
	        };
	        if (x instanceof AttributeNode && y instanceof AttributeNode) {
	            return true;
	        };
	        if (x instanceof TextNode && y instanceof TextNode) {
	            return true;
	        };
	        if (x instanceof CDATASectionNode && y instanceof CDATASectionNode) {
	            return true;
	        };
	        if (x instanceof EntityReferenceNode && y instanceof EntityReferenceNode) {
	            return true;
	        };
	        if (x instanceof EntityNode && y instanceof EntityNode) {
	            return true;
	        };
	        if (x instanceof ProcessingInstructionNode && y instanceof ProcessingInstructionNode) {
	            return true;
	        };
	        if (x instanceof CommentNode && y instanceof CommentNode) {
	            return true;
	        };
	        if (x instanceof DocumentNode && y instanceof DocumentNode) {
	            return true;
	        };
	        if (x instanceof DocumentTypeNode && y instanceof DocumentTypeNode) {
	            return true;
	        };
	        if (x instanceof DocumentFragmentNode && y instanceof DocumentFragmentNode) {
	            return true;
	        };
	        if (x instanceof NotationNode && y instanceof NotationNode) {
	            return true;
	        };
	        return false;
	    };
	});
	var ordNodeType = new Data_Ord.Ord(function () {
	    return eqNodeType;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordInt)(fromEnumNodeType(x))(fromEnumNodeType(y));
	    };
	});
	var enumNodeType = new Data_Enum.Enum(function () {
	    return ordNodeType;
	}, Data_Enum.defaultPred(toEnumNodeType)(fromEnumNodeType), Data_Enum.defaultSucc(toEnumNodeType)(fromEnumNodeType));
	var boundedNodeType = new Data_Bounded.Bounded(function () {
	    return ordNodeType;
	}, ElementNode.value, NotationNode.value);
	var boundedEnumNodeType = new Data_Enum.BoundedEnum(function () {
	    return boundedNodeType;
	}, function () {
	    return enumNodeType;
	}, 12, fromEnumNodeType, toEnumNodeType);
	module.exports = {
	    ElementNode: ElementNode, 
	    AttributeNode: AttributeNode, 
	    TextNode: TextNode, 
	    CDATASectionNode: CDATASectionNode, 
	    EntityReferenceNode: EntityReferenceNode, 
	    EntityNode: EntityNode, 
	    ProcessingInstructionNode: ProcessingInstructionNode, 
	    CommentNode: CommentNode, 
	    DocumentNode: DocumentNode, 
	    DocumentTypeNode: DocumentTypeNode, 
	    DocumentFragmentNode: DocumentFragmentNode, 
	    NotationNode: NotationNode, 
	    eqNodeType: eqNodeType, 
	    ordNodeType: ordNodeType, 
	    boundedNodeType: boundedNodeType, 
	    enumNodeType: enumNodeType, 
	    boundedEnumNodeType: boundedEnumNodeType
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 235 */
/*!*********************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Effects.purs ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Monad_Aff_AVar = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff/AVar.purs */ 143);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 236 */
/*!**************************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Renderer/VirtualDOM.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Data_Exists = __webpack_require__(/*! ./bower_components/purescript-exists/src/Data/Exists.purs */ 188);
	var Data_ExistsR = __webpack_require__(/*! ./lib/purescript-halogen/src/Data/ExistsR.purs */ 217);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_Lazy = __webpack_require__(/*! ./bower_components/purescript-lazy/src/Data/Lazy.purs */ 191);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Halogen_Effects = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Effects.purs */ 235);
	var Halogen_Component_Tree = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/Tree.purs */ 215);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Events_Handler = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs */ 218);
	var Halogen_Internal_VirtualDOM = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Internal/VirtualDOM.purs */ 237);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var handleAff = function ($40) {
	    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($40));
	};
	var renderProp = function (v) {
	    return function (v1) {
	        if (v1 instanceof Halogen_HTML_Core.Prop) {
	            return Data_Exists.runExists(function (v2) {
	                return Data_Function_Uncurried.runFn2(Halogen_Internal_VirtualDOM.prop)(Halogen_HTML_Core.runPropName(v2.value0))(v2.value1);
	            })(v1.value0);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Attr) {
	            return Data_Function_Uncurried.runFn3(Halogen_Internal_VirtualDOM.attrNS)(Data_Function.apply(Data_Nullable.toNullable)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(v1.value0)))(Halogen_HTML_Core.runAttrName(v1.value1))(v1.value2);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Handler) {
	            return Data_ExistsR.runExistsR(function (v2) {
	                return Data_Function_Uncurried.runFn2(Halogen_Internal_VirtualDOM.handlerProp)(Halogen_HTML_Core.runEventName(v2.value0))(function (ev) {
	                    return Data_Function.apply(handleAff)(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_HTML_Events_Handler.runEventHandler(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadEffAff)(ev)(v2.value1(ev)))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(v)));
	                });
	            })(v1.value0);
	        };
	        if (v1 instanceof Halogen_HTML_Core.Ref) {
	            return Halogen_Internal_VirtualDOM.refProp(function ($41) {
	                return handleAff(v(v1.value0($41)));
	            });
	        };
	        return Data_Monoid.mempty(Halogen_Internal_VirtualDOM.monoidProps);
	    };
	};
	var findKey = function (v) {
	    return function (v1) {
	        if (v1 instanceof Halogen_HTML_Core.Key) {
	            return new Data_Maybe.Just(v1.value0);
	        };
	        return v;
	    };
	};
	var renderHTML = function (f) {
	    var go = function (v) {
	        if (v instanceof Halogen_HTML_Core.Text) {
	            return Halogen_Internal_VirtualDOM.vtext(v.value0);
	        };
	        if (v instanceof Halogen_HTML_Core.Element) {
	            var tag = Halogen_HTML_Core.runTagName(v.value1);
	            var ns$prime = Data_Function.apply(Data_Nullable.toNullable)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(v.value0));
	            var key = Data_Function.apply(Data_Nullable.toNullable)(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(v.value2));
	            return Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps)(renderProp(f))(v.value2))(Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	        };
	        if (v instanceof Halogen_HTML_Core.Slot) {
	            return Halogen_Internal_VirtualDOM.vtext("");
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 34, column 3 - line 34, column 26: " + [ v.constructor.name ]);
	    };
	    return go;
	};
	var renderTree = function (f) {
	    return Halogen_Component_Tree.runTree(function (tree) {
	        var go = function (v) {
	            if (v instanceof Halogen_HTML_Core.Text) {
	                return Halogen_Internal_VirtualDOM.vtext(v.value0);
	            };
	            if (v instanceof Halogen_HTML_Core.Slot) {
	                return Halogen_Internal_VirtualDOM.widget(v.value0)(tree.eq)(renderTree(f));
	            };
	            if (v instanceof Halogen_HTML_Core.Element) {
	                var tag = Halogen_HTML_Core.runTagName(v.value1);
	                var ns$prime = Data_Function.apply(Data_Nullable.toNullable)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(v.value0));
	                var key = Data_Function.apply(Data_Nullable.toNullable)(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(v.value2));
	                return Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps)(renderProp(f))(v.value2))(Data_Functor.map(Data_Functor.functorArray)(go)(v.value3));
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 49, column 5 - line 56, column 28: " + [ v.constructor.name ]);
	        };
	        return go(Data_Lazy.force(tree.html));
	    });
	};
	module.exports = {
	    renderHTML: renderHTML, 
	    renderTree: renderTree
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 237 */
/*!*********************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Internal/VirtualDOM.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Internal/VirtualDOM.js */ 238);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var Halogen_Component_Tree = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/Tree.purs */ 215);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var semigroupProps = new Data_Semigroup.Semigroup(Data_Function_Uncurried.runFn2($foreign.concatProps));
	var refProp = $foreign.refPropImpl(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	var monoidProps = new Data_Monoid.Monoid(function () {
	    return semigroupProps;
	}, $foreign.emptyProps);
	module.exports = {
	    refProp: refProp, 
	    semigroupProps: semigroupProps, 
	    monoidProps: monoidProps, 
	    attr: $foreign.attr, 
	    attrNS: $foreign.attrNS, 
	    createElement: $foreign.createElement, 
	    diff: $foreign.diff, 
	    handlerProp: $foreign.handlerProp, 
	    patch: $foreign.patch, 
	    prop: $foreign.prop, 
	    vnode: $foreign.vnode, 
	    vtext: $foreign.vtext, 
	    widget: $foreign.widget
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 238 */
/*!*******************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Internal/VirtualDOM.js ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* global exports, require */
	"use strict";
	
	// module Halogen.Internal.VirtualDOM
	
	var vcreateElement = __webpack_require__(/*! virtual-dom/create-element */ 239);
	var vdiff = __webpack_require__(/*! virtual-dom/diff */ 252);
	var vpatch = __webpack_require__(/*! virtual-dom/patch */ 257);
	var VText = __webpack_require__(/*! virtual-dom/vnode/vtext */ 262);
	var VirtualNode = __webpack_require__(/*! virtual-dom/vnode/vnode */ 263);
	var SoftSetHook = __webpack_require__(/*! virtual-dom/virtual-hyperscript/hooks/soft-set-hook */ 264);
	var attributeHook = __webpack_require__(/*! virtual-dom/virtual-hyperscript/hooks/attribute-hook */ 265);
	
	// jshint maxparams: 2
	exports.prop = function (keys, value) {
	  return function(result) {
	    var target = result, child;
	    for (var i=0; i<keys.length-1; ++i) {
	      child = target[keys[i]] || {};
	      target[keys[i]] = child;
	      target = child;
	    }
	    target[keys[keys.length-1]] = value;
	  };
	};
	
	// jshint maxparams: 2
	exports.attr = function (key, value) {
	  return function(result) {
	    var attrs = result.attributes || {};
	    attrs[key] = value;
	    result.attributes = attrs;
	  };
	};
	
	// jshint maxparams: 3
	exports.attrNS = function (ns, key, value) {
	  return function(result) {
	    result[key] = attributeHook(ns, value);
	  };
	};
	
	function HandlerHook (key, f) {
	  this.key = key;
	  this.callback = function (e) {
	    f(e)();
	  };
	}
	
	HandlerHook.prototype = {
	  hook: function (node) {
	    node.addEventListener(this.key, this.callback);
	  },
	  unhook: function (node) {
	    node.removeEventListener(this.key, this.callback);
	  }
	};
	
	// jshint maxparams: 2
	exports.handlerProp = function (key, f) {
	  const hook = new HandlerHook(key, f);
	  return function(result) {
	    result["halogen-hook-" + key] = hook;
	  };
	};
	
	exports.refPropImpl = function (nothing) {
	  return function (just) {
	
	    var ifHookFn = function (init) {
	      // jshint maxparams: 3
	      return function (node, prop, diff) {
	        // jshint validthis: true
	        if (typeof diff === "undefined") {
	          this.f(init ? just(node) : nothing)();
	        }
	      };
	    };
	
	    // jshint maxparams: 1
	    function RefHook (f) {
	      this.f = f;
	    }
	
	    RefHook.prototype = {
	      hook: ifHookFn(true),
	      unhook: ifHookFn(false)
	    };
	
	    return function (f) {
	      const hook = new RefHook(f); 
	      return function(result) {
	        result["halogen-ref"] = hook;
	      };
	    };
	  };
	};
	
	// jshint maxparams: 3
	function HalogenWidget (tree, eq, render) {
	  this.tree = tree;
	  this.eq = eq;
	  this.render = render;
	  this.vdom = null;
	  this.el = null;
	}
	
	HalogenWidget.prototype = {
	  type: "Widget",
	  init: function () {
	    this.vdom = this.render(this.tree);
	    this.el = vcreateElement(this.vdom);
	    return this.el;
	  },
	  update: function (prev, node) {
	    if (!prev.tree || !this.eq(prev.tree.slot)(this.tree.slot)) {
	      return this.init();
	    }
	    if (this.tree.thunk) {
	      this.vdom = prev.vdom;
	      this.el = prev.el;
	    } else {
	      this.vdom = this.render(this.tree);
	      this.el = vpatch(node, vdiff(prev.vdom, this.vdom));
	    }
	  }
	};
	
	exports.widget = function (tree) {
	  return function (eq) {
	    return function (render) {
	      return new HalogenWidget(tree, eq, render);
	    };
	  };
	};
	
	exports.concatProps = function () {
	  // jshint maxparams: 2
	  // var hOP = Object.prototype.hasOwnProperty;
	  // var copy = function (props, result) {
	  //   for (var key in props) {
	  //     if (hOP.call(props, key)) {
	  //       if (key === "attributes") {
	  //         var attrs = props[key];
	  //         var resultAttrs = result[key] || (result[key] = {});
	  //         for (var attr in attrs) {
	  //           if (hOP.call(attrs, attr)) {
	  //             resultAttrs[attr] = attrs[attr];
	  //           }
	  //         }
	  //       } else {
	  //         result[key] = props[key];
	  //       }
	  //     }
	  //   }
	  //   return result;
	  // };
	  return function (p1, p2) {
	    return function(result) {
	      p1(result);
	      p2(result);
	    }
	  };
	}();
	
	exports.emptyProps = function (result) {};
	
	exports.createElement = function (vtree) {
	  return vcreateElement(vtree);
	};
	
	exports.diff = function (vtree1) {
	  return function (vtree2) {
	    return vdiff(vtree1, vtree2);
	  };
	};
	
	exports.patch = function (p) {
	  return function (node) {
	    return function () {
	      return vpatch(node, p);
	    };
	  };
	};
	
	exports.vtext = function (s) {
	  return new VText(s);
	};
	
	exports.vnode = function (namespace) {
	  return function (name) {
	    return function (key) {
	      return function (props) {
	        return function (children) {
	          var propsObj = {};
	          props(propsObj);
	          if (name === "input" && propsObj.value !== undefined) {
	            propsObj.value = new SoftSetHook(propsObj.value);
	          }
	          return new VirtualNode(name, propsObj, children, key, namespace);
	        };
	      };
	    };
	  };
	};


/***/ },
/* 239 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/create-element.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	var createElement = __webpack_require__(/*! ./vdom/create-element.js */ 240)
	
	module.exports = createElement


/***/ },
/* 240 */
/*!**********************************************!*\
  !*** ./~/virtual-dom/vdom/create-element.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(/*! global/document */ 241)
	
	var applyProperties = __webpack_require__(/*! ./apply-properties */ 243)
	
	var isVNode = __webpack_require__(/*! ../vnode/is-vnode.js */ 246)
	var isVText = __webpack_require__(/*! ../vnode/is-vtext.js */ 248)
	var isWidget = __webpack_require__(/*! ../vnode/is-widget.js */ 249)
	var handleThunk = __webpack_require__(/*! ../vnode/handle-thunk.js */ 250)
	
	module.exports = createElement
	
	function createElement(vnode, opts) {
	    var doc = opts ? opts.document || document : document
	    var warn = opts ? opts.warn : null
	
	    vnode = handleThunk(vnode).a
	
	    if (isWidget(vnode)) {
	        return vnode.init()
	    } else if (isVText(vnode)) {
	        return doc.createTextNode(vnode.text)
	    } else if (!isVNode(vnode)) {
	        if (warn) {
	            warn("Item is not a valid virtual dom node", vnode)
	        }
	        return null
	    }
	
	    var node = (vnode.namespace === null) ?
	        doc.createElement(vnode.tagName) :
	        doc.createElementNS(vnode.namespace, vnode.tagName)
	
	    var props = vnode.properties
	    applyProperties(node, props)
	
	    var children = vnode.children
	
	    for (var i = 0; i < children.length; i++) {
	        var childNode = createElement(children[i], opts)
	        if (childNode) {
	            node.appendChild(childNode)
	        }
	    }
	
	    return node
	}


/***/ },
/* 241 */
/*!******************************!*\
  !*** ./~/global/document.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :
	    typeof window !== 'undefined' ? window : {}
	var minDoc = __webpack_require__(/*! min-document */ 242);
	
	if (typeof document !== 'undefined') {
	    module.exports = document;
	} else {
	    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];
	
	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }
	
	    module.exports = doccy;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 242 */
/*!******************************!*\
  !*** min-document (ignored) ***!
  \******************************/
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 243 */
/*!************************************************!*\
  !*** ./~/virtual-dom/vdom/apply-properties.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(/*! is-object */ 244)
	var isHook = __webpack_require__(/*! ../vnode/is-vhook.js */ 245)
	
	module.exports = applyProperties
	
	function applyProperties(node, props, previous) {
	    for (var propName in props) {
	        var propValue = props[propName]
	
	        if (propValue === undefined) {
	            removeProperty(node, propName, propValue, previous);
	        } else if (isHook(propValue)) {
	            removeProperty(node, propName, propValue, previous)
	            if (propValue.hook) {
	                propValue.hook(node,
	                    propName,
	                    previous ? previous[propName] : undefined)
	            }
	        } else {
	            if (isObject(propValue)) {
	                patchObject(node, props, previous, propName, propValue);
	            } else {
	                node[propName] = propValue
	            }
	        }
	    }
	}
	
	function removeProperty(node, propName, propValue, previous) {
	    if (previous) {
	        var previousValue = previous[propName]
	
	        if (!isHook(previousValue)) {
	            if (propName === "attributes") {
	                for (var attrName in previousValue) {
	                    node.removeAttribute(attrName)
	                }
	            } else if (propName === "style") {
	                for (var i in previousValue) {
	                    node.style[i] = ""
	                }
	            } else if (typeof previousValue === "string") {
	                node[propName] = ""
	            } else {
	                node[propName] = null
	            }
	        } else if (previousValue.unhook) {
	            previousValue.unhook(node, propName, propValue)
	        }
	    }
	}
	
	function patchObject(node, props, previous, propName, propValue) {
	    var previousValue = previous ? previous[propName] : undefined
	
	    // Set attributes
	    if (propName === "attributes") {
	        for (var attrName in propValue) {
	            var attrValue = propValue[attrName]
	
	            if (attrValue === undefined) {
	                node.removeAttribute(attrName)
	            } else {
	                node.setAttribute(attrName, attrValue)
	            }
	        }
	
	        return
	    }
	
	    if(previousValue && isObject(previousValue) &&
	        getPrototype(previousValue) !== getPrototype(propValue)) {
	        node[propName] = propValue
	        return
	    }
	
	    if (!isObject(node[propName])) {
	        node[propName] = {}
	    }
	
	    var replacer = propName === "style" ? "" : undefined
	
	    for (var k in propValue) {
	        var value = propValue[k]
	        node[propName][k] = (value === undefined) ? replacer : value
	    }
	}
	
	function getPrototype(value) {
	    if (Object.getPrototypeOf) {
	        return Object.getPrototypeOf(value)
	    } else if (value.__proto__) {
	        return value.__proto__
	    } else if (value.constructor) {
	        return value.constructor.prototype
	    }
	}


/***/ },
/* 244 */
/*!******************************!*\
  !*** ./~/is-object/index.js ***!
  \******************************/
/***/ function(module, exports) {

	"use strict";
	
	module.exports = function isObject(x) {
		return typeof x === "object" && x !== null;
	};


/***/ },
/* 245 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/vnode/is-vhook.js ***!
  \*****************************************/
/***/ function(module, exports) {

	module.exports = isHook
	
	function isHook(hook) {
	    return hook &&
	      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
	       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
	}


/***/ },
/* 246 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/vnode/is-vnode.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(/*! ./version */ 247)
	
	module.exports = isVirtualNode
	
	function isVirtualNode(x) {
	    return x && x.type === "VirtualNode" && x.version === version
	}


/***/ },
/* 247 */
/*!****************************************!*\
  !*** ./~/virtual-dom/vnode/version.js ***!
  \****************************************/
/***/ function(module, exports) {

	module.exports = "2"


/***/ },
/* 248 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/vnode/is-vtext.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(/*! ./version */ 247)
	
	module.exports = isVirtualText
	
	function isVirtualText(x) {
	    return x && x.type === "VirtualText" && x.version === version
	}


/***/ },
/* 249 */
/*!******************************************!*\
  !*** ./~/virtual-dom/vnode/is-widget.js ***!
  \******************************************/
/***/ function(module, exports) {

	module.exports = isWidget
	
	function isWidget(w) {
	    return w && w.type === "Widget"
	}


/***/ },
/* 250 */
/*!*********************************************!*\
  !*** ./~/virtual-dom/vnode/handle-thunk.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	var isVNode = __webpack_require__(/*! ./is-vnode */ 246)
	var isVText = __webpack_require__(/*! ./is-vtext */ 248)
	var isWidget = __webpack_require__(/*! ./is-widget */ 249)
	var isThunk = __webpack_require__(/*! ./is-thunk */ 251)
	
	module.exports = handleThunk
	
	function handleThunk(a, b) {
	    var renderedA = a
	    var renderedB = b
	
	    if (isThunk(b)) {
	        renderedB = renderThunk(b, a)
	    }
	
	    if (isThunk(a)) {
	        renderedA = renderThunk(a, null)
	    }
	
	    return {
	        a: renderedA,
	        b: renderedB
	    }
	}
	
	function renderThunk(thunk, previous) {
	    var renderedThunk = thunk.vnode
	
	    if (!renderedThunk) {
	        renderedThunk = thunk.vnode = thunk.render(previous)
	    }
	
	    if (!(isVNode(renderedThunk) ||
	            isVText(renderedThunk) ||
	            isWidget(renderedThunk))) {
	        throw new Error("thunk did not return a valid node");
	    }
	
	    return renderedThunk
	}


/***/ },
/* 251 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/vnode/is-thunk.js ***!
  \*****************************************/
/***/ function(module, exports) {

	module.exports = isThunk
	
	function isThunk(t) {
	    return t && t.type === "Thunk"
	}


/***/ },
/* 252 */
/*!*******************************!*\
  !*** ./~/virtual-dom/diff.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	var diff = __webpack_require__(/*! ./vtree/diff.js */ 253)
	
	module.exports = diff


/***/ },
/* 253 */
/*!*************************************!*\
  !*** ./~/virtual-dom/vtree/diff.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(/*! x-is-array */ 254)
	
	var VPatch = __webpack_require__(/*! ../vnode/vpatch */ 255)
	var isVNode = __webpack_require__(/*! ../vnode/is-vnode */ 246)
	var isVText = __webpack_require__(/*! ../vnode/is-vtext */ 248)
	var isWidget = __webpack_require__(/*! ../vnode/is-widget */ 249)
	var isThunk = __webpack_require__(/*! ../vnode/is-thunk */ 251)
	var handleThunk = __webpack_require__(/*! ../vnode/handle-thunk */ 250)
	
	var diffProps = __webpack_require__(/*! ./diff-props */ 256)
	
	module.exports = diff
	
	function diff(a, b) {
	    var patch = { a: a }
	    walk(a, b, patch, 0)
	    return patch
	}
	
	function walk(a, b, patch, index) {
	    if (a === b) {
	        return
	    }
	
	    var apply = patch[index]
	    var applyClear = false
	
	    if (isThunk(a) || isThunk(b)) {
	        thunks(a, b, patch, index)
	    } else if (b == null) {
	
	        // If a is a widget we will add a remove patch for it
	        // Otherwise any child widgets/hooks must be destroyed.
	        // This prevents adding two remove patches for a widget.
	        if (!isWidget(a)) {
	            clearState(a, patch, index)
	            apply = patch[index]
	        }
	
	        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
	    } else if (isVNode(b)) {
	        if (isVNode(a)) {
	            if (a.tagName === b.tagName &&
	                a.namespace === b.namespace &&
	                a.key === b.key) {
	                var propsPatch = diffProps(a.properties, b.properties)
	                if (propsPatch) {
	                    apply = appendPatch(apply,
	                        new VPatch(VPatch.PROPS, a, propsPatch))
	                }
	                apply = diffChildren(a, b, patch, apply, index)
	            } else {
	                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	                applyClear = true
	            }
	        } else {
	            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	            applyClear = true
	        }
	    } else if (isVText(b)) {
	        if (!isVText(a)) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	            applyClear = true
	        } else if (a.text !== b.text) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	        }
	    } else if (isWidget(b)) {
	        if (!isWidget(a)) {
	            applyClear = true
	        }
	
	        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
	    }
	
	    if (apply) {
	        patch[index] = apply
	    }
	
	    if (applyClear) {
	        clearState(a, patch, index)
	    }
	}
	
	function diffChildren(a, b, patch, apply, index) {
	    var aChildren = a.children
	    var orderedSet = reorder(aChildren, b.children)
	    var bChildren = orderedSet.children
	
	    var aLen = aChildren.length
	    var bLen = bChildren.length
	    var len = aLen > bLen ? aLen : bLen
	
	    for (var i = 0; i < len; i++) {
	        var leftNode = aChildren[i]
	        var rightNode = bChildren[i]
	        index += 1
	
	        if (!leftNode) {
	            if (rightNode) {
	                // Excess nodes in b need to be added
	                apply = appendPatch(apply,
	                    new VPatch(VPatch.INSERT, null, rightNode))
	            }
	        } else {
	            walk(leftNode, rightNode, patch, index)
	        }
	
	        if (isVNode(leftNode) && leftNode.count) {
	            index += leftNode.count
	        }
	    }
	
	    if (orderedSet.moves) {
	        // Reorder nodes last
	        apply = appendPatch(apply, new VPatch(
	            VPatch.ORDER,
	            a,
	            orderedSet.moves
	        ))
	    }
	
	    return apply
	}
	
	function clearState(vNode, patch, index) {
	    // TODO: Make this a single walk, not two
	    unhook(vNode, patch, index)
	    destroyWidgets(vNode, patch, index)
	}
	
	// Patch records for all destroyed widgets must be added because we need
	// a DOM node reference for the destroy function
	function destroyWidgets(vNode, patch, index) {
	    if (isWidget(vNode)) {
	        if (typeof vNode.destroy === "function") {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(VPatch.REMOVE, vNode, null)
	            )
	        }
	    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
	        var children = vNode.children
	        var len = children.length
	        for (var i = 0; i < len; i++) {
	            var child = children[i]
	            index += 1
	
	            destroyWidgets(child, patch, index)
	
	            if (isVNode(child) && child.count) {
	                index += child.count
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}
	
	// Create a sub-patch for thunks
	function thunks(a, b, patch, index) {
	    var nodes = handleThunk(a, b)
	    var thunkPatch = diff(nodes.a, nodes.b)
	    if (hasPatches(thunkPatch)) {
	        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
	    }
	}
	
	function hasPatches(patch) {
	    for (var index in patch) {
	        if (index !== "a") {
	            return true
	        }
	    }
	
	    return false
	}
	
	// Execute hooks when two nodes are identical
	function unhook(vNode, patch, index) {
	    if (isVNode(vNode)) {
	        if (vNode.hooks) {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(
	                    VPatch.PROPS,
	                    vNode,
	                    undefinedKeys(vNode.hooks)
	                )
	            )
	        }
	
	        if (vNode.descendantHooks || vNode.hasThunks) {
	            var children = vNode.children
	            var len = children.length
	            for (var i = 0; i < len; i++) {
	                var child = children[i]
	                index += 1
	
	                unhook(child, patch, index)
	
	                if (isVNode(child) && child.count) {
	                    index += child.count
	                }
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}
	
	function undefinedKeys(obj) {
	    var result = {}
	
	    for (var key in obj) {
	        result[key] = undefined
	    }
	
	    return result
	}
	
	// List diff, naive left to right reordering
	function reorder(aChildren, bChildren) {
	    // O(M) time, O(M) memory
	    var bChildIndex = keyIndex(bChildren)
	    var bKeys = bChildIndex.keys
	    var bFree = bChildIndex.free
	
	    if (bFree.length === bChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }
	
	    // O(N) time, O(N) memory
	    var aChildIndex = keyIndex(aChildren)
	    var aKeys = aChildIndex.keys
	    var aFree = aChildIndex.free
	
	    if (aFree.length === aChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }
	
	    // O(MAX(N, M)) memory
	    var newChildren = []
	
	    var freeIndex = 0
	    var freeCount = bFree.length
	    var deletedItems = 0
	
	    // Iterate through a and match a node in b
	    // O(N) time,
	    for (var i = 0 ; i < aChildren.length; i++) {
	        var aItem = aChildren[i]
	        var itemIndex
	
	        if (aItem.key) {
	            if (bKeys.hasOwnProperty(aItem.key)) {
	                // Match up the old keys
	                itemIndex = bKeys[aItem.key]
	                newChildren.push(bChildren[itemIndex])
	
	            } else {
	                // Remove old keyed items
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        } else {
	            // Match the item in a with the next free item in b
	            if (freeIndex < freeCount) {
	                itemIndex = bFree[freeIndex++]
	                newChildren.push(bChildren[itemIndex])
	            } else {
	                // There are no free items in b to match with
	                // the free items in a, so the extra free nodes
	                // are deleted.
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        }
	    }
	
	    var lastFreeIndex = freeIndex >= bFree.length ?
	        bChildren.length :
	        bFree[freeIndex]
	
	    // Iterate through b and append any new keys
	    // O(M) time
	    for (var j = 0; j < bChildren.length; j++) {
	        var newItem = bChildren[j]
	
	        if (newItem.key) {
	            if (!aKeys.hasOwnProperty(newItem.key)) {
	                // Add any new keyed items
	                // We are adding new items to the end and then sorting them
	                // in place. In future we should insert new items in place.
	                newChildren.push(newItem)
	            }
	        } else if (j >= lastFreeIndex) {
	            // Add any leftover non-keyed items
	            newChildren.push(newItem)
	        }
	    }
	
	    var simulate = newChildren.slice()
	    var simulateIndex = 0
	    var removes = []
	    var inserts = []
	    var simulateItem
	
	    for (var k = 0; k < bChildren.length;) {
	        var wantedItem = bChildren[k]
	        simulateItem = simulate[simulateIndex]
	
	        // remove items
	        while (simulateItem === null && simulate.length) {
	            removes.push(remove(simulate, simulateIndex, null))
	            simulateItem = simulate[simulateIndex]
	        }
	
	        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	            // if we need a key in this position...
	            if (wantedItem.key) {
	                if (simulateItem && simulateItem.key) {
	                    // if an insert doesn't put this key in place, it needs to move
	                    if (bKeys[simulateItem.key] !== k + 1) {
	                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
	                        simulateItem = simulate[simulateIndex]
	                        // if the remove didn't put the wanted item in place, we need to insert it
	                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	                            inserts.push({key: wantedItem.key, to: k})
	                        }
	                        // items are matching, so skip ahead
	                        else {
	                            simulateIndex++
	                        }
	                    }
	                    else {
	                        inserts.push({key: wantedItem.key, to: k})
	                    }
	                }
	                else {
	                    inserts.push({key: wantedItem.key, to: k})
	                }
	                k++
	            }
	            // a key in simulate has no matching wanted key, remove it
	            else if (simulateItem && simulateItem.key) {
	                removes.push(remove(simulate, simulateIndex, simulateItem.key))
	            }
	        }
	        else {
	            simulateIndex++
	            k++
	        }
	    }
	
	    // remove all the remaining nodes from simulate
	    while(simulateIndex < simulate.length) {
	        simulateItem = simulate[simulateIndex]
	        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
	    }
	
	    // If the only moves we have are deletes then we can just
	    // let the delete patch remove these items.
	    if (removes.length === deletedItems && !inserts.length) {
	        return {
	            children: newChildren,
	            moves: null
	        }
	    }
	
	    return {
	        children: newChildren,
	        moves: {
	            removes: removes,
	            inserts: inserts
	        }
	    }
	}
	
	function remove(arr, index, key) {
	    arr.splice(index, 1)
	
	    return {
	        from: index,
	        key: key
	    }
	}
	
	function keyIndex(children) {
	    var keys = {}
	    var free = []
	    var length = children.length
	
	    for (var i = 0; i < length; i++) {
	        var child = children[i]
	
	        if (child.key) {
	            keys[child.key] = i
	        } else {
	            free.push(i)
	        }
	    }
	
	    return {
	        keys: keys,     // A hash of key name to index
	        free: free      // An array of unkeyed item indices
	    }
	}
	
	function appendPatch(apply, patch) {
	    if (apply) {
	        if (isArray(apply)) {
	            apply.push(patch)
	        } else {
	            apply = [apply, patch]
	        }
	
	        return apply
	    } else {
	        return patch
	    }
	}


/***/ },
/* 254 */
/*!*******************************!*\
  !*** ./~/x-is-array/index.js ***!
  \*******************************/
/***/ function(module, exports) {

	var nativeIsArray = Array.isArray
	var toString = Object.prototype.toString
	
	module.exports = nativeIsArray || isArray
	
	function isArray(obj) {
	    return toString.call(obj) === "[object Array]"
	}


/***/ },
/* 255 */
/*!***************************************!*\
  !*** ./~/virtual-dom/vnode/vpatch.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(/*! ./version */ 247)
	
	VirtualPatch.NONE = 0
	VirtualPatch.VTEXT = 1
	VirtualPatch.VNODE = 2
	VirtualPatch.WIDGET = 3
	VirtualPatch.PROPS = 4
	VirtualPatch.ORDER = 5
	VirtualPatch.INSERT = 6
	VirtualPatch.REMOVE = 7
	VirtualPatch.THUNK = 8
	
	module.exports = VirtualPatch
	
	function VirtualPatch(type, vNode, patch) {
	    this.type = Number(type)
	    this.vNode = vNode
	    this.patch = patch
	}
	
	VirtualPatch.prototype.version = version
	VirtualPatch.prototype.type = "VirtualPatch"


/***/ },
/* 256 */
/*!*******************************************!*\
  !*** ./~/virtual-dom/vtree/diff-props.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(/*! is-object */ 244)
	var isHook = __webpack_require__(/*! ../vnode/is-vhook */ 245)
	
	module.exports = diffProps
	
	function diffProps(a, b) {
	    var diff
	
	    for (var aKey in a) {
	        if (!(aKey in b)) {
	            diff = diff || {}
	            diff[aKey] = undefined
	        }
	
	        var aValue = a[aKey]
	        var bValue = b[aKey]
	
	        if (aValue === bValue) {
	            continue
	        } else if (isObject(aValue) && isObject(bValue)) {
	            if (getPrototype(bValue) !== getPrototype(aValue)) {
	                diff = diff || {}
	                diff[aKey] = bValue
	            } else if (isHook(bValue)) {
	                 diff = diff || {}
	                 diff[aKey] = bValue
	            } else {
	                var objectDiff = diffProps(aValue, bValue)
	                if (objectDiff) {
	                    diff = diff || {}
	                    diff[aKey] = objectDiff
	                }
	            }
	        } else {
	            diff = diff || {}
	            diff[aKey] = bValue
	        }
	    }
	
	    for (var bKey in b) {
	        if (!(bKey in a)) {
	            diff = diff || {}
	            diff[bKey] = b[bKey]
	        }
	    }
	
	    return diff
	}
	
	function getPrototype(value) {
	  if (Object.getPrototypeOf) {
	    return Object.getPrototypeOf(value)
	  } else if (value.__proto__) {
	    return value.__proto__
	  } else if (value.constructor) {
	    return value.constructor.prototype
	  }
	}


/***/ },
/* 257 */
/*!********************************!*\
  !*** ./~/virtual-dom/patch.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	var patch = __webpack_require__(/*! ./vdom/patch.js */ 258)
	
	module.exports = patch


/***/ },
/* 258 */
/*!*************************************!*\
  !*** ./~/virtual-dom/vdom/patch.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(/*! global/document */ 241)
	var isArray = __webpack_require__(/*! x-is-array */ 254)
	
	var render = __webpack_require__(/*! ./create-element */ 240)
	var domIndex = __webpack_require__(/*! ./dom-index */ 259)
	var patchOp = __webpack_require__(/*! ./patch-op */ 260)
	module.exports = patch
	
	function patch(rootNode, patches, renderOptions) {
	    renderOptions = renderOptions || {}
	    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch
	        ? renderOptions.patch
	        : patchRecursive
	    renderOptions.render = renderOptions.render || render
	
	    return renderOptions.patch(rootNode, patches, renderOptions)
	}
	
	function patchRecursive(rootNode, patches, renderOptions) {
	    var indices = patchIndices(patches)
	
	    if (indices.length === 0) {
	        return rootNode
	    }
	
	    var index = domIndex(rootNode, patches.a, indices)
	    var ownerDocument = rootNode.ownerDocument
	
	    if (!renderOptions.document && ownerDocument !== document) {
	        renderOptions.document = ownerDocument
	    }
	
	    for (var i = 0; i < indices.length; i++) {
	        var nodeIndex = indices[i]
	        rootNode = applyPatch(rootNode,
	            index[nodeIndex],
	            patches[nodeIndex],
	            renderOptions)
	    }
	
	    return rootNode
	}
	
	function applyPatch(rootNode, domNode, patchList, renderOptions) {
	    if (!domNode) {
	        return rootNode
	    }
	
	    var newNode
	
	    if (isArray(patchList)) {
	        for (var i = 0; i < patchList.length; i++) {
	            newNode = patchOp(patchList[i], domNode, renderOptions)
	
	            if (domNode === rootNode) {
	                rootNode = newNode
	            }
	        }
	    } else {
	        newNode = patchOp(patchList, domNode, renderOptions)
	
	        if (domNode === rootNode) {
	            rootNode = newNode
	        }
	    }
	
	    return rootNode
	}
	
	function patchIndices(patches) {
	    var indices = []
	
	    for (var key in patches) {
	        if (key !== "a") {
	            indices.push(Number(key))
	        }
	    }
	
	    return indices
	}


/***/ },
/* 259 */
/*!*****************************************!*\
  !*** ./~/virtual-dom/vdom/dom-index.js ***!
  \*****************************************/
/***/ function(module, exports) {

	// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
	// We don't want to read all of the DOM nodes in the tree so we use
	// the in-order tree indexing to eliminate recursion down certain branches.
	// We only recurse into a DOM node if we know that it contains a child of
	// interest.
	
	var noChild = {}
	
	module.exports = domIndex
	
	function domIndex(rootNode, tree, indices, nodes) {
	    if (!indices || indices.length === 0) {
	        return {}
	    } else {
	        indices.sort(ascending)
	        return recurse(rootNode, tree, indices, nodes, 0)
	    }
	}
	
	function recurse(rootNode, tree, indices, nodes, rootIndex) {
	    nodes = nodes || {}
	
	
	    if (rootNode) {
	        if (indexInRange(indices, rootIndex, rootIndex)) {
	            nodes[rootIndex] = rootNode
	        }
	
	        var vChildren = tree.children
	
	        if (vChildren) {
	
	            var childNodes = rootNode.childNodes
	
	            for (var i = 0; i < tree.children.length; i++) {
	                rootIndex += 1
	
	                var vChild = vChildren[i] || noChild
	                var nextIndex = rootIndex + (vChild.count || 0)
	
	                // skip recursion down the tree if there are no nodes down here
	                if (indexInRange(indices, rootIndex, nextIndex)) {
	                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
	                }
	
	                rootIndex = nextIndex
	            }
	        }
	    }
	
	    return nodes
	}
	
	// Binary search for an index in the interval [left, right]
	function indexInRange(indices, left, right) {
	    if (indices.length === 0) {
	        return false
	    }
	
	    var minIndex = 0
	    var maxIndex = indices.length - 1
	    var currentIndex
	    var currentItem
	
	    while (minIndex <= maxIndex) {
	        currentIndex = ((maxIndex + minIndex) / 2) >> 0
	        currentItem = indices[currentIndex]
	
	        if (minIndex === maxIndex) {
	            return currentItem >= left && currentItem <= right
	        } else if (currentItem < left) {
	            minIndex = currentIndex + 1
	        } else  if (currentItem > right) {
	            maxIndex = currentIndex - 1
	        } else {
	            return true
	        }
	    }
	
	    return false;
	}
	
	function ascending(a, b) {
	    return a > b ? 1 : -1
	}


/***/ },
/* 260 */
/*!****************************************!*\
  !*** ./~/virtual-dom/vdom/patch-op.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	var applyProperties = __webpack_require__(/*! ./apply-properties */ 243)
	
	var isWidget = __webpack_require__(/*! ../vnode/is-widget.js */ 249)
	var VPatch = __webpack_require__(/*! ../vnode/vpatch.js */ 255)
	
	var updateWidget = __webpack_require__(/*! ./update-widget */ 261)
	
	module.exports = applyPatch
	
	function applyPatch(vpatch, domNode, renderOptions) {
	    var type = vpatch.type
	    var vNode = vpatch.vNode
	    var patch = vpatch.patch
	
	    switch (type) {
	        case VPatch.REMOVE:
	            return removeNode(domNode, vNode)
	        case VPatch.INSERT:
	            return insertNode(domNode, patch, renderOptions)
	        case VPatch.VTEXT:
	            return stringPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.WIDGET:
	            return widgetPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.VNODE:
	            return vNodePatch(domNode, vNode, patch, renderOptions)
	        case VPatch.ORDER:
	            reorderChildren(domNode, patch)
	            return domNode
	        case VPatch.PROPS:
	            applyProperties(domNode, patch, vNode.properties)
	            return domNode
	        case VPatch.THUNK:
	            return replaceRoot(domNode,
	                renderOptions.patch(domNode, patch, renderOptions))
	        default:
	            return domNode
	    }
	}
	
	function removeNode(domNode, vNode) {
	    var parentNode = domNode.parentNode
	
	    if (parentNode) {
	        parentNode.removeChild(domNode)
	    }
	
	    destroyWidget(domNode, vNode);
	
	    return null
	}
	
	function insertNode(parentNode, vNode, renderOptions) {
	    var newNode = renderOptions.render(vNode, renderOptions)
	
	    if (parentNode) {
	        parentNode.appendChild(newNode)
	    }
	
	    return parentNode
	}
	
	function stringPatch(domNode, leftVNode, vText, renderOptions) {
	    var newNode
	
	    if (domNode.nodeType === 3) {
	        domNode.replaceData(0, domNode.length, vText.text)
	        newNode = domNode
	    } else {
	        var parentNode = domNode.parentNode
	        newNode = renderOptions.render(vText, renderOptions)
	
	        if (parentNode && newNode !== domNode) {
	            parentNode.replaceChild(newNode, domNode)
	        }
	    }
	
	    return newNode
	}
	
	function widgetPatch(domNode, leftVNode, widget, renderOptions) {
	    var updating = updateWidget(leftVNode, widget)
	    var newNode
	
	    if (updating) {
	        newNode = widget.update(leftVNode, domNode) || domNode
	    } else {
	        newNode = renderOptions.render(widget, renderOptions)
	    }
	
	    var parentNode = domNode.parentNode
	
	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }
	
	    if (!updating) {
	        destroyWidget(domNode, leftVNode)
	    }
	
	    return newNode
	}
	
	function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
	    var parentNode = domNode.parentNode
	    var newNode = renderOptions.render(vNode, renderOptions)
	
	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }
	
	    return newNode
	}
	
	function destroyWidget(domNode, w) {
	    if (typeof w.destroy === "function" && isWidget(w)) {
	        w.destroy(domNode)
	    }
	}
	
	function reorderChildren(domNode, moves) {
	    var childNodes = domNode.childNodes
	    var keyMap = {}
	    var node
	    var remove
	    var insert
	
	    for (var i = 0; i < moves.removes.length; i++) {
	        remove = moves.removes[i]
	        node = childNodes[remove.from]
	        if (remove.key) {
	            keyMap[remove.key] = node
	        }
	        domNode.removeChild(node)
	    }
	
	    var length = childNodes.length
	    for (var j = 0; j < moves.inserts.length; j++) {
	        insert = moves.inserts[j]
	        node = keyMap[insert.key]
	        // this is the weirdest bug i've ever seen in webkit
	        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
	    }
	}
	
	function replaceRoot(oldRoot, newRoot) {
	    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
	        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
	    }
	
	    return newRoot;
	}


/***/ },
/* 261 */
/*!*********************************************!*\
  !*** ./~/virtual-dom/vdom/update-widget.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	var isWidget = __webpack_require__(/*! ../vnode/is-widget.js */ 249)
	
	module.exports = updateWidget
	
	function updateWidget(a, b) {
	    if (isWidget(a) && isWidget(b)) {
	        if ("name" in a && "name" in b) {
	            return a.id === b.id
	        } else {
	            return a.init === b.init
	        }
	    }
	
	    return false
	}


/***/ },
/* 262 */
/*!**************************************!*\
  !*** ./~/virtual-dom/vnode/vtext.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(/*! ./version */ 247)
	
	module.exports = VirtualText
	
	function VirtualText(text) {
	    this.text = String(text)
	}
	
	VirtualText.prototype.version = version
	VirtualText.prototype.type = "VirtualText"


/***/ },
/* 263 */
/*!**************************************!*\
  !*** ./~/virtual-dom/vnode/vnode.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(/*! ./version */ 247)
	var isVNode = __webpack_require__(/*! ./is-vnode */ 246)
	var isWidget = __webpack_require__(/*! ./is-widget */ 249)
	var isThunk = __webpack_require__(/*! ./is-thunk */ 251)
	var isVHook = __webpack_require__(/*! ./is-vhook */ 245)
	
	module.exports = VirtualNode
	
	var noProperties = {}
	var noChildren = []
	
	function VirtualNode(tagName, properties, children, key, namespace) {
	    this.tagName = tagName
	    this.properties = properties || noProperties
	    this.children = children || noChildren
	    this.key = key != null ? String(key) : undefined
	    this.namespace = (typeof namespace === "string") ? namespace : null
	
	    var count = (children && children.length) || 0
	    var descendants = 0
	    var hasWidgets = false
	    var hasThunks = false
	    var descendantHooks = false
	    var hooks
	
	    for (var propName in properties) {
	        if (properties.hasOwnProperty(propName)) {
	            var property = properties[propName]
	            if (isVHook(property) && property.unhook) {
	                if (!hooks) {
	                    hooks = {}
	                }
	
	                hooks[propName] = property
	            }
	        }
	    }
	
	    for (var i = 0; i < count; i++) {
	        var child = children[i]
	        if (isVNode(child)) {
	            descendants += child.count || 0
	
	            if (!hasWidgets && child.hasWidgets) {
	                hasWidgets = true
	            }
	
	            if (!hasThunks && child.hasThunks) {
	                hasThunks = true
	            }
	
	            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
	                descendantHooks = true
	            }
	        } else if (!hasWidgets && isWidget(child)) {
	            if (typeof child.destroy === "function") {
	                hasWidgets = true
	            }
	        } else if (!hasThunks && isThunk(child)) {
	            hasThunks = true;
	        }
	    }
	
	    this.count = count + descendants
	    this.hasWidgets = hasWidgets
	    this.hasThunks = hasThunks
	    this.hooks = hooks
	    this.descendantHooks = descendantHooks
	}
	
	VirtualNode.prototype.version = version
	VirtualNode.prototype.type = "VirtualNode"


/***/ },
/* 264 */
/*!******************************************************************!*\
  !*** ./~/virtual-dom/virtual-hyperscript/hooks/soft-set-hook.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	'use strict';
	
	module.exports = SoftSetHook;
	
	function SoftSetHook(value) {
	    if (!(this instanceof SoftSetHook)) {
	        return new SoftSetHook(value);
	    }
	
	    this.value = value;
	}
	
	SoftSetHook.prototype.hook = function (node, propertyName) {
	    if (node[propertyName] !== this.value) {
	        node[propertyName] = this.value;
	    }
	};


/***/ },
/* 265 */
/*!*******************************************************************!*\
  !*** ./~/virtual-dom/virtual-hyperscript/hooks/attribute-hook.js ***!
  \*******************************************************************/
/***/ function(module, exports) {

	'use strict';
	
	module.exports = AttributeHook;
	
	function AttributeHook(namespace, value) {
	    if (!(this instanceof AttributeHook)) {
	        return new AttributeHook(namespace, value);
	    }
	
	    this.namespace = namespace;
	    this.value = value;
	}
	
	AttributeHook.prototype.hook = function (node, prop, prev) {
	    if (prev && prev.type === 'AttributeHook' &&
	        prev.value === this.value &&
	        prev.namespace === this.namespace) {
	        return;
	    }
	
	    node.setAttributeNS(this.namespace, prop, this.value);
	};
	
	AttributeHook.prototype.unhook = function (node, prop, next) {
	    if (next && next.type === 'AttributeHook' &&
	        next.namespace === this.namespace) {
	        return;
	    }
	
	    var colonPosition = prop.indexOf(':');
	    var localName = colonPosition > -1 ? prop.substr(colonPosition + 1) : prop;
	    node.removeAttributeNS(this.namespace, localName);
	};
	
	AttributeHook.prototype.type = 'AttributeHook';


/***/ },
/* 266 */
/*!*********************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events/Indexed.purs ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Events_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events.purs */ 267);
	var Halogen_HTML_Events_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events.purs */ 267);
	var Halogen_HTML_Events_Forms = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Forms.purs */ 268);
	var Halogen_HTML_Events_Handler = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs */ 218);
	var Halogen_HTML_Events_Types = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Types.purs */ 221);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var refine$prime = Unsafe_Coerce.unsafeCoerce;
	var refine = Unsafe_Coerce.unsafeCoerce;
	var onValueInput = refine$prime(Halogen_HTML_Events_Forms.onValueInput);
	var onValueChange = refine$prime(Halogen_HTML_Events_Forms.onValueChange);
	var onUnload = refine(Halogen_HTML_Events_1.onUnload);
	var onTransitionEnd = refine(Halogen_HTML_Events_1.onTransitionEnd);
	var onSubmit = refine(Halogen_HTML_Events_1.onSubmit);
	var onSelectedIndexChange = refine$prime(Halogen_HTML_Events_Forms.onSelectedIndexChange);
	var onSelect = refine(Halogen_HTML_Events_1.onSelect);
	var onSearch = refine(Halogen_HTML_Events_1.onSearch);
	var onScroll = refine(Halogen_HTML_Events_1.onScroll);
	var onResize = refine(Halogen_HTML_Events_1.onResize);
	var onReset = refine(Halogen_HTML_Events_1.onReset);
	var onPageShow = refine(Halogen_HTML_Events_1.onPageShow);
	var onPageHide = refine(Halogen_HTML_Events_1.onPageHide);
	var onMouseUp = refine(Halogen_HTML_Events_1.onMouseUp);
	var onMouseOver = refine(Halogen_HTML_Events_1.onMouseOver);
	var onMouseOut = refine(Halogen_HTML_Events_1.onMouseOut);
	var onMouseMove = refine(Halogen_HTML_Events_1.onMouseMove);
	var onMouseLeave = refine(Halogen_HTML_Events_1.onMouseLeave);
	var onMouseEnter = refine(Halogen_HTML_Events_1.onMouseEnter);
	var onMouseDown = refine(Halogen_HTML_Events_1.onMouseDown);
	var onLoad = refine(Halogen_HTML_Events_1.onLoad);
	var onKeyUp = refine(Halogen_HTML_Events_1.onKeyUp);
	var onKeyPress = refine(Halogen_HTML_Events_1.onKeyPress);
	var onKeyDown = refine(Halogen_HTML_Events_1.onKeyDown);
	var onInvalid = refine(Halogen_HTML_Events_1.onInvalid);
	var onInput = refine(Halogen_HTML_Events_1.onInput);
	var onHashChange = refine(Halogen_HTML_Events_1.onHashChange);
	var onFocusOut = refine(Halogen_HTML_Events_1.onFocusOut);
	var onFocusIn = refine(Halogen_HTML_Events_1.onFocusIn);
	var onFocus = refine(Halogen_HTML_Events_1.onFocus);
	var onError = refine(Halogen_HTML_Events_1.onError);
	var onDrop = refine(Halogen_HTML_Events_1.onDrop);
	var onDragStart = refine(Halogen_HTML_Events_1.onDragStart);
	var onDragOver = refine(Halogen_HTML_Events_1.onDragOver);
	var onDragLeave = refine(Halogen_HTML_Events_1.onDragLeave);
	var onDragExit = refine(Halogen_HTML_Events_1.onDragExit);
	var onDragEnter = refine(Halogen_HTML_Events_1.onDragEnter);
	var onDragEnd = refine(Halogen_HTML_Events_1.onDragEnd);
	var onDrag = refine(Halogen_HTML_Events_1.onDrag);
	var onDoubleClick = refine(Halogen_HTML_Events_1.onDoubleClick);
	var onContextMenu = refine(Halogen_HTML_Events_1.onContextMenu);
	var onClick = refine(Halogen_HTML_Events_1.onClick);
	var onChecked = refine$prime(Halogen_HTML_Events_Forms.onChecked);
	var onChange = refine(Halogen_HTML_Events_1.onChange);
	var onBlur = refine(Halogen_HTML_Events_1.onBlur);
	var onBeforeUnload = refine(Halogen_HTML_Events_1.onBeforeUnload);
	var onAbort = refine(Halogen_HTML_Events_1.onAbort);
	module.exports = {
	    onAbort: onAbort, 
	    onBeforeUnload: onBeforeUnload, 
	    onBlur: onBlur, 
	    onChange: onChange, 
	    onChecked: onChecked, 
	    onClick: onClick, 
	    onContextMenu: onContextMenu, 
	    onDoubleClick: onDoubleClick, 
	    onDrag: onDrag, 
	    onDragEnd: onDragEnd, 
	    onDragEnter: onDragEnter, 
	    onDragExit: onDragExit, 
	    onDragLeave: onDragLeave, 
	    onDragOver: onDragOver, 
	    onDragStart: onDragStart, 
	    onDrop: onDrop, 
	    onError: onError, 
	    onFocus: onFocus, 
	    onFocusIn: onFocusIn, 
	    onFocusOut: onFocusOut, 
	    onHashChange: onHashChange, 
	    onInput: onInput, 
	    onInvalid: onInvalid, 
	    onKeyDown: onKeyDown, 
	    onKeyPress: onKeyPress, 
	    onKeyUp: onKeyUp, 
	    onLoad: onLoad, 
	    onMouseDown: onMouseDown, 
	    onMouseEnter: onMouseEnter, 
	    onMouseLeave: onMouseLeave, 
	    onMouseMove: onMouseMove, 
	    onMouseOut: onMouseOut, 
	    onMouseOver: onMouseOver, 
	    onMouseUp: onMouseUp, 
	    onPageHide: onPageHide, 
	    onPageShow: onPageShow, 
	    onReset: onReset, 
	    onResize: onResize, 
	    onScroll: onScroll, 
	    onSearch: onSearch, 
	    onSelect: onSelect, 
	    onSelectedIndexChange: onSelectedIndexChange, 
	    onSubmit: onSubmit, 
	    onTransitionEnd: onTransitionEnd, 
	    onUnload: onUnload, 
	    onValueChange: onValueChange, 
	    onValueInput: onValueInput
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 267 */
/*!*************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events.purs ***!
  \*************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Halogen_Query = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Query.purs */ 227);
	var Halogen_HTML_Events_Handler = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs */ 218);
	var Halogen_HTML_Events_Types = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Types.purs */ 221);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var onUnload = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("unload"));
	var onTransitionEnd = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("transitionend"));
	var onSubmit = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("submit"));
	var onSelect = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("select"));
	var onSearch = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("search"));
	var onScroll = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("scroll"));
	var onResize = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("resize"));
	var onReset = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("reset"));
	var onPageShow = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("pageshow"));
	var onPageHide = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("pagehide"));
	var onMouseUp = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseup"));
	var onMouseOver = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseover"));
	var onMouseOut = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseout"));
	var onMouseMove = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mousemove"));
	var onMouseLeave = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseleave"));
	var onMouseEnter = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mouseenter"));
	var onMouseDown = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mousedown"));
	var onLoad = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("load"));
	var onKeyUp = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keyup"));
	var onKeyPress = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keypress"));
	var onKeyDown = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("keydown"));
	var onInvalid = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("invalid"));
	var onInput = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("input"));
	var onHashChange = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("hashchange"));
	var onFocusOut = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focusout"));
	var onFocusIn = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focusin"));
	var onFocus = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("focus"));
	var onError = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("error"));
	var onDrop = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("drop"));
	var onDragStart = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragstart"));
	var onDragOver = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragover"));
	var onDragLeave = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragleave"));
	var onDragExit = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragexit"));
	var onDragEnter = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragenter"));
	var onDragEnd = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dragend"));
	var onDrag = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("drag"));
	var onDoubleClick = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("dblclick"));
	var onContextMenu = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("contextmenu"));
	var onClick = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("click"));
	var onChange = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("change"));
	var onBlur = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("blur"));
	var onBeforeUnload = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("beforeunload"));
	var onAbort = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("abort"));
	var input_ = function (f) {
	    return function (v) {
	        return Data_Function.apply(Control_Applicative.pure(Halogen_HTML_Events_Handler.applicativeEventHandler))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_Query.action(f)));
	    };
	};
	var input = function (f) {
	    return function (x) {
	        return Data_Function.apply(Control_Applicative.pure(Halogen_HTML_Events_Handler.applicativeEventHandler))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_Query.action(f(x))));
	    };
	};
	module.exports = {
	    input: input, 
	    input_: input_, 
	    onAbort: onAbort, 
	    onBeforeUnload: onBeforeUnload, 
	    onBlur: onBlur, 
	    onChange: onChange, 
	    onClick: onClick, 
	    onContextMenu: onContextMenu, 
	    onDoubleClick: onDoubleClick, 
	    onDrag: onDrag, 
	    onDragEnd: onDragEnd, 
	    onDragEnter: onDragEnter, 
	    onDragExit: onDragExit, 
	    onDragLeave: onDragLeave, 
	    onDragOver: onDragOver, 
	    onDragStart: onDragStart, 
	    onDrop: onDrop, 
	    onError: onError, 
	    onFocus: onFocus, 
	    onFocusIn: onFocusIn, 
	    onFocusOut: onFocusOut, 
	    onHashChange: onHashChange, 
	    onInput: onInput, 
	    onInvalid: onInvalid, 
	    onKeyDown: onKeyDown, 
	    onKeyPress: onKeyPress, 
	    onKeyUp: onKeyUp, 
	    onLoad: onLoad, 
	    onMouseDown: onMouseDown, 
	    onMouseEnter: onMouseEnter, 
	    onMouseLeave: onMouseLeave, 
	    onMouseMove: onMouseMove, 
	    onMouseOut: onMouseOut, 
	    onMouseOver: onMouseOver, 
	    onMouseUp: onMouseUp, 
	    onPageHide: onPageHide, 
	    onPageShow: onPageShow, 
	    onReset: onReset, 
	    onResize: onResize, 
	    onScroll: onScroll, 
	    onSearch: onSearch, 
	    onSelect: onSelect, 
	    onSubmit: onSubmit, 
	    onTransitionEnd: onTransitionEnd, 
	    onUnload: onUnload
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 268 */
/*!*******************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Events/Forms.purs ***!
  \*******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Class = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Class.purs */ 161);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Events_Handler = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Events/Handler.purs */ 218);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Foreign_Index = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Index.purs */ 166);
	var addForeignPropHandler = function (dictIsForeign) {
	    return function (key) {
	        return function (prop) {
	            return function (f) {
	                return Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName(key))(function ($2) {
	                    return Data_Either.either(Data_Function.apply(Data_Function["const"])(Control_Applicative.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Data_Maybe.Nothing.value)))(f)(Data_Foreign_Class.readProp(dictIsForeign)(Data_Foreign_Index.indexString)(prop)(Data_Foreign.toForeign((function (v) {
	                        return v.target;
	                    })($2))));
	                });
	            };
	        };
	    };
	};
	var onChecked = addForeignPropHandler(Data_Foreign_Class.booleanIsForeign)("change")("checked");
	var onSelectedIndexChange = addForeignPropHandler(Data_Foreign_Class.intIsForeign)("change")("selectedIndex");
	var onValueChange = addForeignPropHandler(Data_Foreign_Class.stringIsForeign)("change")("value");
	var onValueInput = addForeignPropHandler(Data_Foreign_Class.stringIsForeign)("input")("value");
	module.exports = {
	    onChecked: onChecked, 
	    onSelectedIndexChange: onSelectedIndexChange, 
	    onValueChange: onValueChange, 
	    onValueInput: onValueInput
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 269 */
/*!*************************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs ***!
  \*************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Properties_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties.purs */ 270);
	var Halogen_HTML_Properties_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties.purs */ 270);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var MenuitemCommand = (function () {
	    function MenuitemCommand() {
	
	    };
	    MenuitemCommand.value = new MenuitemCommand();
	    return MenuitemCommand;
	})();
	var MenuitemCheckbox = (function () {
	    function MenuitemCheckbox() {
	
	    };
	    MenuitemCheckbox.value = new MenuitemCheckbox();
	    return MenuitemCheckbox;
	})();
	var MenuitemRadio = (function () {
	    function MenuitemRadio() {
	
	    };
	    MenuitemRadio.value = new MenuitemRadio();
	    return MenuitemRadio;
	})();
	var MenuList = (function () {
	    function MenuList() {
	
	    };
	    MenuList.value = new MenuList();
	    return MenuList;
	})();
	var MenuContext = (function () {
	    function MenuContext() {
	
	    };
	    MenuContext.value = new MenuContext();
	    return MenuContext;
	})();
	var MenuToolbar = (function () {
	    function MenuToolbar() {
	
	    };
	    MenuToolbar.value = new MenuToolbar();
	    return MenuToolbar;
	})();
	var InputButton = (function () {
	    function InputButton() {
	
	    };
	    InputButton.value = new InputButton();
	    return InputButton;
	})();
	var InputCheckbox = (function () {
	    function InputCheckbox() {
	
	    };
	    InputCheckbox.value = new InputCheckbox();
	    return InputCheckbox;
	})();
	var InputColor = (function () {
	    function InputColor() {
	
	    };
	    InputColor.value = new InputColor();
	    return InputColor;
	})();
	var InputDate = (function () {
	    function InputDate() {
	
	    };
	    InputDate.value = new InputDate();
	    return InputDate;
	})();
	var InputDatetime = (function () {
	    function InputDatetime() {
	
	    };
	    InputDatetime.value = new InputDatetime();
	    return InputDatetime;
	})();
	var InputDatetimeLocal = (function () {
	    function InputDatetimeLocal() {
	
	    };
	    InputDatetimeLocal.value = new InputDatetimeLocal();
	    return InputDatetimeLocal;
	})();
	var InputEmail = (function () {
	    function InputEmail() {
	
	    };
	    InputEmail.value = new InputEmail();
	    return InputEmail;
	})();
	var InputFile = (function () {
	    function InputFile() {
	
	    };
	    InputFile.value = new InputFile();
	    return InputFile;
	})();
	var InputHidden = (function () {
	    function InputHidden() {
	
	    };
	    InputHidden.value = new InputHidden();
	    return InputHidden;
	})();
	var InputImage = (function () {
	    function InputImage() {
	
	    };
	    InputImage.value = new InputImage();
	    return InputImage;
	})();
	var InputMonth = (function () {
	    function InputMonth() {
	
	    };
	    InputMonth.value = new InputMonth();
	    return InputMonth;
	})();
	var InputNumber = (function () {
	    function InputNumber() {
	
	    };
	    InputNumber.value = new InputNumber();
	    return InputNumber;
	})();
	var InputPassword = (function () {
	    function InputPassword() {
	
	    };
	    InputPassword.value = new InputPassword();
	    return InputPassword;
	})();
	var InputRadio = (function () {
	    function InputRadio() {
	
	    };
	    InputRadio.value = new InputRadio();
	    return InputRadio;
	})();
	var InputRange = (function () {
	    function InputRange() {
	
	    };
	    InputRange.value = new InputRange();
	    return InputRange;
	})();
	var InputReset = (function () {
	    function InputReset() {
	
	    };
	    InputReset.value = new InputReset();
	    return InputReset;
	})();
	var InputSearch = (function () {
	    function InputSearch() {
	
	    };
	    InputSearch.value = new InputSearch();
	    return InputSearch;
	})();
	var InputSubmit = (function () {
	    function InputSubmit() {
	
	    };
	    InputSubmit.value = new InputSubmit();
	    return InputSubmit;
	})();
	var InputTel = (function () {
	    function InputTel() {
	
	    };
	    InputTel.value = new InputTel();
	    return InputTel;
	})();
	var InputText = (function () {
	    function InputText() {
	
	    };
	    InputText.value = new InputText();
	    return InputText;
	})();
	var InputTime = (function () {
	    function InputTime() {
	
	    };
	    InputTime.value = new InputTime();
	    return InputTime;
	})();
	var InputUrl = (function () {
	    function InputUrl() {
	
	    };
	    InputUrl.value = new InputUrl();
	    return InputUrl;
	})();
	var InputWeek = (function () {
	    function InputWeek() {
	
	    };
	    InputWeek.value = new InputWeek();
	    return InputWeek;
	})();
	var IProp = function (x) {
	    return x;
	};
	var Uppercase = (function () {
	    function Uppercase() {
	
	    };
	    Uppercase.value = new Uppercase();
	    return Uppercase;
	})();
	var Lowercase = (function () {
	    function Lowercase() {
	
	    };
	    Lowercase.value = new Lowercase();
	    return Lowercase;
	})();
	var NumeralDecimal = (function () {
	    function NumeralDecimal() {
	
	    };
	    NumeralDecimal.value = new NumeralDecimal();
	    return NumeralDecimal;
	})();
	var NumeralRoman = (function () {
	    function NumeralRoman(value0) {
	        this.value0 = value0;
	    };
	    NumeralRoman.create = function (value0) {
	        return new NumeralRoman(value0);
	    };
	    return NumeralRoman;
	})();
	var OrderedListNumeric = (function () {
	    function OrderedListNumeric(value0) {
	        this.value0 = value0;
	    };
	    OrderedListNumeric.create = function (value0) {
	        return new OrderedListNumeric(value0);
	    };
	    return OrderedListNumeric;
	})();
	var OrderedListAlphabetic = (function () {
	    function OrderedListAlphabetic(value0) {
	        this.value0 = value0;
	    };
	    OrderedListAlphabetic.create = function (value0) {
	        return new OrderedListAlphabetic(value0);
	    };
	    return OrderedListAlphabetic;
	})();
	var ButtonButton = (function () {
	    function ButtonButton() {
	
	    };
	    ButtonButton.value = new ButtonButton();
	    return ButtonButton;
	})();
	var ButtonSubmit = (function () {
	    function ButtonSubmit() {
	
	    };
	    ButtonSubmit.value = new ButtonSubmit();
	    return ButtonSubmit;
	})();
	var ButtonReset = (function () {
	    function ButtonReset() {
	
	    };
	    ButtonReset.value = new ButtonReset();
	    return ButtonReset;
	})();
	var renderOrderedListType = function (ty) {
	    if (ty instanceof OrderedListNumeric) {
	        if (ty.value0 instanceof NumeralDecimal) {
	            return "1";
	        };
	        if (ty.value0 instanceof NumeralRoman) {
	            if (ty.value0.value0 instanceof Lowercase) {
	                return "i";
	            };
	            if (ty.value0.value0 instanceof Uppercase) {
	                return "I";
	            };
	            throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 296, column 11 - line 299, column 5: " + [ ty.value0.value0.constructor.name ]);
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 293, column 7 - line 299, column 5: " + [ ty.value0.constructor.name ]);
	    };
	    if (ty instanceof OrderedListAlphabetic) {
	        if (ty.value0 instanceof Lowercase) {
	            return "a";
	        };
	        if (ty.value0 instanceof Uppercase) {
	            return "A";
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 300, column 7 - line 304, column 1: " + [ ty.value0.constructor.name ]);
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 291, column 3 - line 304, column 1: " + [ ty.constructor.name ]);
	};
	var renderMenuitemType = function (ty) {
	    if (ty instanceof MenuitemCommand) {
	        return "command";
	    };
	    if (ty instanceof MenuitemCheckbox) {
	        return "checkbox";
	    };
	    if (ty instanceof MenuitemRadio) {
	        return "radio";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 234, column 3 - line 239, column 1: " + [ ty.constructor.name ]);
	};
	var renderMenuType = function (ty) {
	    if (ty instanceof MenuList) {
	        return "list";
	    };
	    if (ty instanceof MenuContext) {
	        return "context";
	    };
	    if (ty instanceof MenuToolbar) {
	        return "toolbar";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 219, column 3 - line 224, column 1: " + [ ty.constructor.name ]);
	};
	var renderMediaType = function (ty) {
	    var renderParameter = function (v) {
	        return v.value0 + ("=" + v.value1);
	    };
	    var renderParameters = function (ps) {
	        if (Data_Array.length(ps) === 0) {
	            return "";
	        };
	        if (Data_Boolean.otherwise) {
	            return ";" + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(";")(Data_Functor.map(Data_Functor.functorArray)(renderParameter)(ps));
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 252, column 5 - line 254, column 68: " + [ ps.constructor.name ]);
	    };
	    return ty.type + ("/" + (ty.subtype + renderParameters(ty.parameters)));
	};
	var renderInputType = function (ty) {
	    if (ty instanceof InputButton) {
	        return "button";
	    };
	    if (ty instanceof InputCheckbox) {
	        return "checkbox";
	    };
	    if (ty instanceof InputColor) {
	        return "color";
	    };
	    if (ty instanceof InputDate) {
	        return "date";
	    };
	    if (ty instanceof InputDatetime) {
	        return "datetime";
	    };
	    if (ty instanceof InputDatetimeLocal) {
	        return "datetime-local";
	    };
	    if (ty instanceof InputEmail) {
	        return "email";
	    };
	    if (ty instanceof InputFile) {
	        return "file";
	    };
	    if (ty instanceof InputHidden) {
	        return "hidden";
	    };
	    if (ty instanceof InputImage) {
	        return "image";
	    };
	    if (ty instanceof InputMonth) {
	        return "month";
	    };
	    if (ty instanceof InputNumber) {
	        return "number";
	    };
	    if (ty instanceof InputPassword) {
	        return "password";
	    };
	    if (ty instanceof InputRadio) {
	        return "radio";
	    };
	    if (ty instanceof InputRange) {
	        return "range";
	    };
	    if (ty instanceof InputReset) {
	        return "reset";
	    };
	    if (ty instanceof InputSearch) {
	        return "search";
	    };
	    if (ty instanceof InputSubmit) {
	        return "submit";
	    };
	    if (ty instanceof InputTel) {
	        return "tel";
	    };
	    if (ty instanceof InputText) {
	        return "text";
	    };
	    if (ty instanceof InputTime) {
	        return "time";
	    };
	    if (ty instanceof InputUrl) {
	        return "url";
	    };
	    if (ty instanceof InputWeek) {
	        return "week";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 184, column 3 - line 209, column 1: " + [ ty.constructor.name ]);
	};
	var renderButtonType = function (ty) {
	    if (ty instanceof ButtonButton) {
	        return "button";
	    };
	    if (ty instanceof ButtonSubmit) {
	        return "submit";
	    };
	    if (ty instanceof ButtonReset) {
	        return "reset";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties.Indexed line 269, column 3 - line 274, column 1: " + [ ty.constructor.name ]);
	};
	var refine = Unsafe_Coerce.unsafeCoerce;
	var rel = refine(Halogen_HTML_Properties_1.rel);
	var required = refine(Halogen_HTML_Properties_1.required);
	var rowSpan = refine(Halogen_HTML_Properties_1.rowSpan);
	var rows = refine(Halogen_HTML_Properties_1.rows);
	var selected = refine(Halogen_HTML_Properties_1.selected);
	var spellcheck = refine(Halogen_HTML_Properties_1.spellcheck);
	var src = refine(Halogen_HTML_Properties_1.src);
	var tabIndex = refine(Halogen_HTML_Properties_1.tabIndex);
	var target = refine(Halogen_HTML_Properties_1.target);
	var title = refine(Halogen_HTML_Properties_1.title);
	var value = refine(Halogen_HTML_Properties_1.value);
	var width = refine(Halogen_HTML_Properties_1.width);
	var ref = refine(Halogen_HTML_Properties_1.ref);
	var readonly = refine(Halogen_HTML_Properties_1.readonly);
	var placeholder = refine(Halogen_HTML_Properties_1.placeholder);
	var olType = function ($16) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderOrderedListType($16));
	};
	var name = refine(Halogen_HTML_Properties_1.name);
	var multiple = refine(Halogen_HTML_Properties_1.multiple);
	var menuitemType = function ($17) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMenuitemType($17));
	};
	var menuType = function ($18) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMenuType($18));
	};
	var mediaType = function ($19) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderMediaType($19));
	};
	var key = refine(Halogen_HTML_Properties_1.key);
	var inputType = function ($20) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderInputType($20));
	};
	var id_ = refine(Halogen_HTML_Properties_1.id_);
	var href = refine(Halogen_HTML_Properties_1.href);
	var height = refine(Halogen_HTML_Properties_1.height);
	var $$for = refine(Halogen_HTML_Properties_1["for"]);
	var draggable = refine(Halogen_HTML_Properties_1.draggable);
	var disabled = refine(Halogen_HTML_Properties_1.disabled);
	var enabled = function ($21) {
	    return disabled(!$21);
	};
	var cols = refine(Halogen_HTML_Properties_1.cols);
	var colSpan = refine(Halogen_HTML_Properties_1.colSpan);
	var classes = refine(Halogen_HTML_Properties_1.classes);
	var class_ = refine(Halogen_HTML_Properties_1.class_);
	var checked = refine(Halogen_HTML_Properties_1.checked);
	var charset = refine(Halogen_HTML_Properties_1.charset);
	var buttonType = function ($22) {
	    return refine(Halogen_HTML_Properties_1.type_)(renderButtonType($22));
	};
	var autofocus = refine(Halogen_HTML_Properties_1.autofocus);
	var autocomplete = refine(Halogen_HTML_Properties_1.autocomplete);
	var alt = refine(Halogen_HTML_Properties_1.alt);
	module.exports = {
	    ButtonButton: ButtonButton, 
	    ButtonSubmit: ButtonSubmit, 
	    ButtonReset: ButtonReset, 
	    Uppercase: Uppercase, 
	    Lowercase: Lowercase, 
	    IProp: IProp, 
	    InputButton: InputButton, 
	    InputCheckbox: InputCheckbox, 
	    InputColor: InputColor, 
	    InputDate: InputDate, 
	    InputDatetime: InputDatetime, 
	    InputDatetimeLocal: InputDatetimeLocal, 
	    InputEmail: InputEmail, 
	    InputFile: InputFile, 
	    InputHidden: InputHidden, 
	    InputImage: InputImage, 
	    InputMonth: InputMonth, 
	    InputNumber: InputNumber, 
	    InputPassword: InputPassword, 
	    InputRadio: InputRadio, 
	    InputRange: InputRange, 
	    InputReset: InputReset, 
	    InputSearch: InputSearch, 
	    InputSubmit: InputSubmit, 
	    InputTel: InputTel, 
	    InputText: InputText, 
	    InputTime: InputTime, 
	    InputUrl: InputUrl, 
	    InputWeek: InputWeek, 
	    MenuList: MenuList, 
	    MenuContext: MenuContext, 
	    MenuToolbar: MenuToolbar, 
	    MenuitemCommand: MenuitemCommand, 
	    MenuitemCheckbox: MenuitemCheckbox, 
	    MenuitemRadio: MenuitemRadio, 
	    NumeralDecimal: NumeralDecimal, 
	    NumeralRoman: NumeralRoman, 
	    OrderedListNumeric: OrderedListNumeric, 
	    OrderedListAlphabetic: OrderedListAlphabetic, 
	    alt: alt, 
	    autocomplete: autocomplete, 
	    autofocus: autofocus, 
	    buttonType: buttonType, 
	    charset: charset, 
	    checked: checked, 
	    class_: class_, 
	    classes: classes, 
	    colSpan: colSpan, 
	    cols: cols, 
	    disabled: disabled, 
	    draggable: draggable, 
	    enabled: enabled, 
	    "for": $$for, 
	    height: height, 
	    href: href, 
	    id_: id_, 
	    inputType: inputType, 
	    key: key, 
	    mediaType: mediaType, 
	    menuType: menuType, 
	    menuitemType: menuitemType, 
	    multiple: multiple, 
	    name: name, 
	    olType: olType, 
	    placeholder: placeholder, 
	    readonly: readonly, 
	    ref: ref, 
	    rel: rel, 
	    required: required, 
	    rowSpan: rowSpan, 
	    rows: rows, 
	    selected: selected, 
	    spellcheck: spellcheck, 
	    src: src, 
	    tabIndex: tabIndex, 
	    target: target, 
	    title: title, 
	    value: value, 
	    width: width
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 270 */
/*!*****************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Properties.purs ***!
  \*****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_String = __webpack_require__(/*! ./bower_components/purescript-strings/src/Data/String.purs */ 157);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Pixels = (function () {
	    function Pixels(value0) {
	        this.value0 = value0;
	    };
	    Pixels.create = function (value0) {
	        return new Pixels(value0);
	    };
	    return Pixels;
	})();
	var Percent = (function () {
	    function Percent(value0) {
	        this.value0 = value0;
	    };
	    Percent.create = function (value0) {
	        return new Percent(value0);
	    };
	    return Percent;
	})();
	var value = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("value"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("value")));
	var type_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("type"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("type")));
	var title = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("title"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("title")));
	var target = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("target"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("target")));
	var tabIndex = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("tabIndex"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("tabindex")));
	var src = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("src"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("src")));
	var spellcheck = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("spellcheck"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("spellcheck")));
	var selected = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("selected"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("selected")));
	var rows = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("rows"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rows")));
	var rowSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("rowSpan"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rowspan")));
	var required = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("required"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("required")));
	var rel = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("rel"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("rel")));
	var ref = Halogen_HTML_Core.Ref.create;
	var readonly = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("readOnly"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("readonly")));
	var printLengthLiteral = function (v) {
	    if (v instanceof Pixels) {
	        return Data_Show.show(Data_Show.showInt)(v.value0);
	    };
	    if (v instanceof Percent) {
	        return Data_Show.show(Data_Show.showNumber)(v.value0) + "%";
	    };
	    throw new Error("Failed pattern match at Halogen.HTML.Properties line 61, column 1 - line 61, column 39: " + [ v.constructor.name ]);
	};
	var width = function ($5) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("width"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("width")))(printLengthLiteral($5));
	};
	var placeholder = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("placeholder"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("placeholder")));
	var name = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("name"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("name")));
	var multiple = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("multiple"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("multiple")));
	var key = Halogen_HTML_Core.Key.create;
	var id_ = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("id"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("id")));
	var href = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("href"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("href")));
	var height = function ($6) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("height"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("height")))(printLengthLiteral($6));
	};
	var $$for = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("htmlFor"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("for")));
	var draggable = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("draggable"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("draggable")));
	var disabled = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("disabled"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("disabled")));
	var enabled = function ($7) {
	    return disabled(!$7);
	};
	var cols = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("cols"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("cols")));
	var colSpan = Halogen_HTML_Core.prop(Halogen_HTML_Core.intIsProp)(Halogen_HTML_Core.propName("colSpan"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("colspan")));
	var classes = function ($8) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("class")))(Data_String.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Halogen_HTML_Core.runClassName)($8)));
	};
	var class_ = function ($9) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("className"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("class")))(Halogen_HTML_Core.runClassName($9));
	};
	var checked = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("checked"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("checked")));
	var charset = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("charset"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("charset")));
	var autofocus = Halogen_HTML_Core.prop(Halogen_HTML_Core.booleanIsProp)(Halogen_HTML_Core.propName("autofocus"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("autofocus")));
	var autocomplete = function ($10) {
	    return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("autocomplete"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("autocomplete")))((function (b) {
	        if (b) {
	            return "on";
	        };
	        if (!b) {
	            return "off";
	        };
	        throw new Error("Failed pattern match at Halogen.HTML.Properties line 155, column 91 - line 155, column 116: " + [ b.constructor.name ]);
	    })($10));
	};
	var alt = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("alt"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("alt")));
	module.exports = {
	    Pixels: Pixels, 
	    Percent: Percent, 
	    alt: alt, 
	    autocomplete: autocomplete, 
	    autofocus: autofocus, 
	    charset: charset, 
	    checked: checked, 
	    class_: class_, 
	    classes: classes, 
	    colSpan: colSpan, 
	    cols: cols, 
	    disabled: disabled, 
	    draggable: draggable, 
	    enabled: enabled, 
	    "for": $$for, 
	    height: height, 
	    href: href, 
	    id_: id_, 
	    key: key, 
	    multiple: multiple, 
	    name: name, 
	    placeholder: placeholder, 
	    readonly: readonly, 
	    ref: ref, 
	    rel: rel, 
	    required: required, 
	    rowSpan: rowSpan, 
	    rows: rows, 
	    selected: selected, 
	    spellcheck: spellcheck, 
	    src: src, 
	    tabIndex: tabIndex, 
	    target: target, 
	    title: title, 
	    type_: type_, 
	    value: value, 
	    width: width
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 271 */
/*!**************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Indexed.purs ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML.purs */ 272);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Elements_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements/Indexed.purs */ 274);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 272 */
/*!******************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML.purs ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_Component = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component.purs */ 177);
	var Halogen_Component_ChildPath = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Component/ChildPath.purs */ 194);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Elements = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements.purs */ 273);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var text = Halogen_HTML_Core.Text.create;
	var slot$prime = function (dictFunctor) {
	    return function (i) {
	        return function (p) {
	            return function (l) {
	                var transform = function (def) {
	                    return {
	                        component: Halogen_Component.transformChild(dictFunctor)(i)(def.component), 
	                        initialState: Halogen_Component_ChildPath.injState(i)(def.initialState)
	                    };
	                };
	                return new Halogen_HTML_Core.Slot(new Halogen_Component.SlotConstructor(Halogen_Component_ChildPath.injSlot(i)(p), Data_Functor.map(Data_Functor.functorFn)(transform)(l)));
	            };
	        };
	    };
	};
	var slot = function (p) {
	    return function (l) {
	        return new Halogen_HTML_Core.Slot(new Halogen_Component.SlotConstructor(p, l));
	    };
	};
	module.exports = {
	    slot: slot, 
	    "slot'": slot$prime, 
	    text: text
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 273 */
/*!***************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Elements.purs ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var wbr = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("wbr"))(props)([  ]);
	};
	var video = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("video"))(xs);
	};
	var video_ = video([  ]);
	var $$var = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("var"))(xs);
	};
	var var_ = $$var([  ]);
	var ul = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ul"))(xs);
	};
	var ul_ = ul([  ]);
	var u = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("u"))(xs);
	};
	var u_ = u([  ]);
	var tt = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tt"))(xs);
	};
	var tt_ = tt([  ]);
	var track = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("track"))(props)([  ]);
	};
	var tr = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tr"))(xs);
	};
	var tr_ = tr([  ]);
	var title = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("title"))(xs);
	};
	var title_ = title([  ]);
	var time = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("time"))(xs);
	};
	var time_ = time([  ]);
	var thead = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("thead"))(xs);
	};
	var thead_ = thead([  ]);
	var th = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("th"))(xs);
	};
	var th_ = th([  ]);
	var tfoot = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tfoot"))(xs);
	};
	var tfoot_ = tfoot([  ]);
	var textarea = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("textarea"))(xs)([  ]);
	};
	var td = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("td"))(xs);
	};
	var td_ = td([  ]);
	var tbody = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("tbody"))(xs);
	};
	var tbody_ = tbody([  ]);
	var table = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("table"))(xs);
	};
	var table_ = table([  ]);
	var sup = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sup"))(xs);
	};
	var sup_ = sup([  ]);
	var summary = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("summary"))(xs);
	};
	var summary_ = summary([  ]);
	var sub = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("sub"))(xs);
	};
	var sub_ = sub([  ]);
	var style = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("style"))(xs);
	};
	var style_ = style([  ]);
	var strong = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strong"))(xs);
	};
	var strong_ = strong([  ]);
	var strike = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("strike"))(xs);
	};
	var strike_ = strike([  ]);
	var span = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("span"))(xs);
	};
	var span_ = span([  ]);
	var source = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("source"))(props)([  ]);
	};
	var small = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("small"))(xs);
	};
	var small_ = small([  ]);
	var select = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("select"))(xs);
	};
	var select_ = select([  ]);
	var section = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("section"))(xs);
	};
	var section_ = section([  ]);
	var script = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("script"))(xs);
	};
	var script_ = script([  ]);
	var samp = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("samp"))(xs);
	};
	var samp_ = samp([  ]);
	var s = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("s"))(xs);
	};
	var s_ = s([  ]);
	var ruby = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ruby"))(xs);
	};
	var ruby_ = ruby([  ]);
	var rt = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rt"))(xs);
	};
	var rt_ = rt([  ]);
	var rp = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("rp"))(xs);
	};
	var rp_ = rp([  ]);
	var q = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("q"))(xs);
	};
	var q_ = q([  ]);
	var progress = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("progress"))(xs);
	};
	var progress_ = progress([  ]);
	var pre = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("pre"))(xs);
	};
	var pre_ = pre([  ]);
	var param = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("param"))(props)([  ]);
	};
	var p = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("p"))(xs);
	};
	var p_ = p([  ]);
	var output = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("output"))(xs);
	};
	var output_ = output([  ]);
	var option = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("option"))(xs);
	};
	var option_ = option([  ]);
	var optgroup = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("optgroup"))(xs);
	};
	var optgroup_ = optgroup([  ]);
	var ol = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ol"))(xs);
	};
	var ol_ = ol([  ]);
	var object = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("object"))(xs);
	};
	var object_ = object([  ]);
	var noscript = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noscript"))(xs);
	};
	var noscript_ = noscript([  ]);
	var noframes = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("noframes"))(xs);
	};
	var noframes_ = noframes([  ]);
	var nav = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("nav"))(xs);
	};
	var nav_ = nav([  ]);
	var meter = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meter"))(xs);
	};
	var meter_ = meter([  ]);
	var meta = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("meta"))(props)([  ]);
	};
	var menuitem = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menuitem"))(xs);
	};
	var menuitem_ = menuitem([  ]);
	var menu = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("menu"))(xs);
	};
	var menu_ = menu([  ]);
	var mark = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("mark"))(xs);
	};
	var mark_ = mark([  ]);
	var map = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("map"))(xs);
	};
	var map_ = map([  ]);
	var main = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("main"))(xs);
	};
	var main_ = main([  ]);
	var link = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("link"))(props)([  ]);
	};
	var li = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("li"))(xs);
	};
	var li_ = li([  ]);
	var legend = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("legend"))(xs);
	};
	var legend_ = legend([  ]);
	var label = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("label"))(xs);
	};
	var label_ = label([  ]);
	var keygen = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("keygen"))(props)([  ]);
	};
	var kbd = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("kbd"))(xs);
	};
	var kbd_ = kbd([  ]);
	var ins = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("ins"))(xs);
	};
	var ins_ = ins([  ]);
	var input = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("input"))(props)([  ]);
	};
	var img = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("img"))(props)([  ]);
	};
	var iframe = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("iframe"))(props)([  ]);
	};
	var i = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("i"))(xs);
	};
	var i_ = i([  ]);
	var html = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("html"))(xs);
	};
	var html_ = html([  ]);
	var hr = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("hr"))(props)([  ]);
	};
	var hr_ = hr([  ]);
	var header = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("header"))(xs);
	};
	var header_ = header([  ]);
	var head = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("head"))(xs);
	};
	var head_ = head([  ]);
	var h6 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h6"))(xs);
	};
	var h6_ = h6([  ]);
	var h5 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h5"))(xs);
	};
	var h5_ = h5([  ]);
	var h4 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h4"))(xs);
	};
	var h4_ = h4([  ]);
	var h3 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h3"))(xs);
	};
	var h3_ = h3([  ]);
	var h2 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h2"))(xs);
	};
	var h2_ = h2([  ]);
	var h1 = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h1"))(xs);
	};
	var h1_ = h1([  ]);
	var frameset = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frameset"))(xs);
	};
	var frameset_ = frameset([  ]);
	var frame = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("frame"))(xs);
	};
	var frame_ = frame([  ]);
	var form = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("form"))(xs);
	};
	var form_ = form([  ]);
	var footer = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("footer"))(xs);
	};
	var footer_ = footer([  ]);
	var font = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("font"))(xs);
	};
	var font_ = font([  ]);
	var figure = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figure"))(xs);
	};
	var figure_ = figure([  ]);
	var figcaption = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("figcaption"))(xs);
	};
	var figcaption_ = figcaption([  ]);
	var fieldset = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("fieldset"))(xs);
	};
	var fieldset_ = fieldset([  ]);
	var embed = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("embed"))(xs);
	};
	var embed_ = embed([  ]);
	var em = Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("em"));
	var em_ = em([  ]);
	var dt = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dt"))(xs);
	};
	var dt_ = dt([  ]);
	var dl = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dl"))(xs);
	};
	var dl_ = dl([  ]);
	var div = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("div"))(xs);
	};
	var div_ = div([  ]);
	var dir = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dir"))(xs);
	};
	var dir_ = dir([  ]);
	var dialog = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dialog"))(xs);
	};
	var dialog_ = dialog([  ]);
	var dfn = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dfn"))(xs);
	};
	var dfn_ = dfn([  ]);
	var details = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("details"))(xs);
	};
	var details_ = details([  ]);
	var del = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("del"))(xs);
	};
	var del_ = del([  ]);
	var dd = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("dd"))(xs);
	};
	var dd_ = dd([  ]);
	var datalist = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("datalist"))(xs);
	};
	var datalist_ = datalist([  ]);
	var command = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("command"))(props)([  ]);
	};
	var colgroup = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("colgroup"))(xs);
	};
	var colgroup_ = colgroup([  ]);
	var col = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("col"))(props)([  ]);
	};
	var code = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("code"))(xs);
	};
	var code_ = code([  ]);
	var cite = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("cite"))(xs);
	};
	var cite_ = cite([  ]);
	var center = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("center"))(xs);
	};
	var center_ = center([  ]);
	var caption = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("caption"))(xs);
	};
	var caption_ = caption([  ]);
	var canvas = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("canvas"))(props)([  ]);
	};
	var button = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("button"))(xs);
	};
	var button_ = button([  ]);
	var br = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("br"))(props)([  ]);
	};
	var br_ = br([  ]);
	var body = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("body"))(xs);
	};
	var body_ = body([  ]);
	var blockquote = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("blockquote"))(xs);
	};
	var blockquote_ = blockquote([  ]);
	var big = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("big"))(xs);
	};
	var big_ = big([  ]);
	var bdo = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdo"))(xs);
	};
	var bdo_ = bdo([  ]);
	var bdi = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("bdi"))(xs);
	};
	var bdi_ = bdi([  ]);
	var basefont = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("basefont"))(xs);
	};
	var basefont_ = basefont([  ]);
	var base = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("base"))(props)([  ]);
	};
	var b = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("b"))(xs);
	};
	var b_ = b([  ]);
	var audio = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("audio"))(xs);
	};
	var audio_ = audio([  ]);
	var aside = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("aside"))(xs);
	};
	var aside_ = aside([  ]);
	var article = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("article"))(xs);
	};
	var article_ = article([  ]);
	var area = function (props) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("area"))(props)([  ]);
	};
	var applet = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("applet"))(xs);
	};
	var applet_ = applet([  ]);
	var address = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("address"))(xs);
	};
	var address_ = address([  ]);
	var acronym = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("acronym"))(xs);
	};
	var acronym_ = acronym([  ]);
	var abbr = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("abbr"))(xs);
	};
	var abbr_ = abbr([  ]);
	var a = function (xs) {
	    return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("a"))(xs);
	};
	var a_ = a([  ]);
	module.exports = {
	    a: a, 
	    a_: a_, 
	    abbr: abbr, 
	    abbr_: abbr_, 
	    acronym: acronym, 
	    acronym_: acronym_, 
	    address: address, 
	    address_: address_, 
	    applet: applet, 
	    applet_: applet_, 
	    area: area, 
	    article: article, 
	    article_: article_, 
	    aside: aside, 
	    aside_: aside_, 
	    audio: audio, 
	    audio_: audio_, 
	    b: b, 
	    b_: b_, 
	    base: base, 
	    basefont: basefont, 
	    basefont_: basefont_, 
	    bdi: bdi, 
	    bdi_: bdi_, 
	    bdo: bdo, 
	    bdo_: bdo_, 
	    big: big, 
	    big_: big_, 
	    blockquote: blockquote, 
	    blockquote_: blockquote_, 
	    body: body, 
	    body_: body_, 
	    br: br, 
	    br_: br_, 
	    button: button, 
	    button_: button_, 
	    canvas: canvas, 
	    caption: caption, 
	    caption_: caption_, 
	    center: center, 
	    center_: center_, 
	    cite: cite, 
	    cite_: cite_, 
	    code: code, 
	    code_: code_, 
	    col: col, 
	    colgroup: colgroup, 
	    colgroup_: colgroup_, 
	    command: command, 
	    datalist: datalist, 
	    datalist_: datalist_, 
	    dd: dd, 
	    dd_: dd_, 
	    del: del, 
	    del_: del_, 
	    details: details, 
	    details_: details_, 
	    dfn: dfn, 
	    dfn_: dfn_, 
	    dialog: dialog, 
	    dialog_: dialog_, 
	    dir: dir, 
	    dir_: dir_, 
	    div: div, 
	    div_: div_, 
	    dl: dl, 
	    dl_: dl_, 
	    dt: dt, 
	    dt_: dt_, 
	    em: em, 
	    em_: em_, 
	    embed: embed, 
	    embed_: embed_, 
	    fieldset: fieldset, 
	    fieldset_: fieldset_, 
	    figcaption: figcaption, 
	    figcaption_: figcaption_, 
	    figure: figure, 
	    figure_: figure_, 
	    font: font, 
	    font_: font_, 
	    footer: footer, 
	    footer_: footer_, 
	    form: form, 
	    form_: form_, 
	    frame: frame, 
	    frame_: frame_, 
	    frameset: frameset, 
	    frameset_: frameset_, 
	    h1: h1, 
	    h1_: h1_, 
	    h2: h2, 
	    h2_: h2_, 
	    h3: h3, 
	    h3_: h3_, 
	    h4: h4, 
	    h4_: h4_, 
	    h5: h5, 
	    h5_: h5_, 
	    h6: h6, 
	    h6_: h6_, 
	    head: head, 
	    head_: head_, 
	    header: header, 
	    header_: header_, 
	    hr: hr, 
	    hr_: hr_, 
	    html: html, 
	    html_: html_, 
	    i: i, 
	    i_: i_, 
	    iframe: iframe, 
	    img: img, 
	    input: input, 
	    ins: ins, 
	    ins_: ins_, 
	    kbd: kbd, 
	    kbd_: kbd_, 
	    keygen: keygen, 
	    label: label, 
	    label_: label_, 
	    legend: legend, 
	    legend_: legend_, 
	    li: li, 
	    li_: li_, 
	    link: link, 
	    main: main, 
	    main_: main_, 
	    map: map, 
	    map_: map_, 
	    mark: mark, 
	    mark_: mark_, 
	    menu: menu, 
	    menu_: menu_, 
	    menuitem: menuitem, 
	    menuitem_: menuitem_, 
	    meta: meta, 
	    meter: meter, 
	    meter_: meter_, 
	    nav: nav, 
	    nav_: nav_, 
	    noframes: noframes, 
	    noframes_: noframes_, 
	    noscript: noscript, 
	    noscript_: noscript_, 
	    object: object, 
	    object_: object_, 
	    ol: ol, 
	    ol_: ol_, 
	    optgroup: optgroup, 
	    optgroup_: optgroup_, 
	    option: option, 
	    option_: option_, 
	    output: output, 
	    output_: output_, 
	    p: p, 
	    p_: p_, 
	    param: param, 
	    pre: pre, 
	    pre_: pre_, 
	    progress: progress, 
	    progress_: progress_, 
	    q: q, 
	    q_: q_, 
	    rp: rp, 
	    rp_: rp_, 
	    rt: rt, 
	    rt_: rt_, 
	    ruby: ruby, 
	    ruby_: ruby_, 
	    s: s, 
	    s_: s_, 
	    samp: samp, 
	    samp_: samp_, 
	    script: script, 
	    script_: script_, 
	    section: section, 
	    section_: section_, 
	    select: select, 
	    select_: select_, 
	    small: small, 
	    small_: small_, 
	    source: source, 
	    span: span, 
	    span_: span_, 
	    strike: strike, 
	    strike_: strike_, 
	    strong: strong, 
	    strong_: strong_, 
	    style: style, 
	    style_: style_, 
	    sub: sub, 
	    sub_: sub_, 
	    summary: summary, 
	    summary_: summary_, 
	    sup: sup, 
	    sup_: sup_, 
	    table: table, 
	    table_: table_, 
	    tbody: tbody, 
	    tbody_: tbody_, 
	    td: td, 
	    td_: td_, 
	    textarea: textarea, 
	    tfoot: tfoot, 
	    tfoot_: tfoot_, 
	    th: th, 
	    th_: th_, 
	    thead: thead, 
	    thead_: thead_, 
	    time: time, 
	    time_: time_, 
	    title: title, 
	    title_: title_, 
	    tr: tr, 
	    tr_: tr_, 
	    track: track, 
	    tt: tt, 
	    tt_: tt_, 
	    u: u, 
	    u_: u_, 
	    ul: ul, 
	    ul_: ul_, 
	    "var": $$var, 
	    var_: var_, 
	    video: video, 
	    video_: video_, 
	    wbr: wbr
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 274 */
/*!***********************************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/HTML/Elements/Indexed.purs ***!
  \***********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Elements_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements.purs */ 273);
	var Halogen_HTML_Elements_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements.purs */ 273);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var wbr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.wbr);
	var video = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.video);
	var $$var = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1["var"]);
	var ul = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ul);
	var u = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.u);
	var tt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tt);
	var track = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.track);
	var tr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tr);
	var title = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.title);
	var time = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.time);
	var thead = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.thead);
	var th = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.th);
	var tfoot = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tfoot);
	var textarea = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.textarea);
	var td = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.td);
	var tbody = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.tbody);
	var table = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.table);
	var sup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.sup);
	var summary = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.summary);
	var sub = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.sub);
	var style = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.style);
	var strong = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.strong);
	var span = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.span);
	var source = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.source);
	var small = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.small);
	var select = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.select);
	var section = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.section);
	var script = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.script);
	var samp = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.samp);
	var s = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.s);
	var ruby = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ruby);
	var rt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.rt);
	var rp = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.rp);
	var q = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.q);
	var progress = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.progress);
	var pre = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.pre);
	var param = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.param);
	var p = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.p);
	var output = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.output);
	var option = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.option);
	var optgroup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.optgroup);
	var ol = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ol);
	var object = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.object);
	var noscript = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.noscript);
	var noframes = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.noframes);
	var nav = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.nav);
	var meter = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.meter);
	var meta = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.meta);
	var menuitem = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.menuitem);
	var menu = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.menu);
	var mark = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.mark);
	var map = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.map);
	var main = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.main);
	var link = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.link);
	var li = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.li);
	var legend = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.legend);
	var label = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.label);
	var keygen = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.keygen);
	var kbd = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.kbd);
	var ins = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.ins);
	var input = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.input);
	var img = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.img);
	var iframe = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.iframe);
	var i = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.i);
	var html = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.html);
	var hr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.hr);
	var header = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.header);
	var head = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.head);
	var h6 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h6);
	var h5 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h5);
	var h4 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h4);
	var h3 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h3);
	var h2 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h2);
	var h1 = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.h1);
	var form = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.form);
	var footer = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.footer);
	var figure = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.figure);
	var figcaption = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.figcaption);
	var fieldset = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.fieldset);
	var embed = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.embed);
	var em = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.em);
	var dt = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dt);
	var dl = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dl);
	var div = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.div);
	var dir = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dir);
	var dialog = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dialog);
	var dfn = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dfn);
	var details = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.details);
	var del = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.del);
	var dd = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.dd);
	var datalist = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.datalist);
	var command = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.command);
	var colgroup = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.colgroup);
	var col = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.col);
	var code = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.code);
	var cite = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.cite);
	var center = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.center);
	var caption = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.caption);
	var canvas = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.canvas);
	var button = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.button);
	var br = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.br);
	var body = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.body);
	var blockquote = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.blockquote);
	var big = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.big);
	var bdo = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.bdo);
	var bdi = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.bdi);
	var basefont = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.basefont);
	var base = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.base);
	var b = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.b);
	var audio = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.audio);
	var aside = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.aside);
	var article = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.article);
	var area = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.area);
	var applet = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.applet);
	var address = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.address);
	var acronym = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.acronym);
	var abbr = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.a);
	var a = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Elements_1.a);
	module.exports = {
	    a: a, 
	    abbr: abbr, 
	    acronym: acronym, 
	    address: address, 
	    applet: applet, 
	    area: area, 
	    article: article, 
	    aside: aside, 
	    audio: audio, 
	    b: b, 
	    base: base, 
	    basefont: basefont, 
	    bdi: bdi, 
	    bdo: bdo, 
	    big: big, 
	    blockquote: blockquote, 
	    body: body, 
	    br: br, 
	    button: button, 
	    canvas: canvas, 
	    caption: caption, 
	    center: center, 
	    cite: cite, 
	    code: code, 
	    col: col, 
	    colgroup: colgroup, 
	    command: command, 
	    datalist: datalist, 
	    dd: dd, 
	    del: del, 
	    details: details, 
	    dfn: dfn, 
	    dialog: dialog, 
	    dir: dir, 
	    div: div, 
	    dl: dl, 
	    dt: dt, 
	    em: em, 
	    embed: embed, 
	    fieldset: fieldset, 
	    figcaption: figcaption, 
	    figure: figure, 
	    footer: footer, 
	    form: form, 
	    h1: h1, 
	    h2: h2, 
	    h3: h3, 
	    h4: h4, 
	    h5: h5, 
	    h6: h6, 
	    head: head, 
	    header: header, 
	    hr: hr, 
	    html: html, 
	    i: i, 
	    iframe: iframe, 
	    img: img, 
	    input: input, 
	    ins: ins, 
	    kbd: kbd, 
	    keygen: keygen, 
	    label: label, 
	    legend: legend, 
	    li: li, 
	    link: link, 
	    main: main, 
	    map: map, 
	    mark: mark, 
	    menu: menu, 
	    menuitem: menuitem, 
	    meta: meta, 
	    meter: meter, 
	    nav: nav, 
	    noframes: noframes, 
	    noscript: noscript, 
	    object: object, 
	    ol: ol, 
	    optgroup: optgroup, 
	    option: option, 
	    output: output, 
	    p: p, 
	    param: param, 
	    pre: pre, 
	    progress: progress, 
	    q: q, 
	    rp: rp, 
	    rt: rt, 
	    ruby: ruby, 
	    s: s, 
	    samp: samp, 
	    script: script, 
	    section: section, 
	    select: select, 
	    small: small, 
	    source: source, 
	    span: span, 
	    strong: strong, 
	    style: style, 
	    sub: sub, 
	    summary: summary, 
	    sup: sup, 
	    table: table, 
	    tbody: tbody, 
	    td: td, 
	    textarea: textarea, 
	    tfoot: tfoot, 
	    th: th, 
	    thead: thead, 
	    time: time, 
	    title: title, 
	    tr: tr, 
	    track: track, 
	    tt: tt, 
	    u: u, 
	    ul: ul, 
	    "var": $$var, 
	    video: video, 
	    wbr: wbr
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 275 */
/*!**************************************************!*\
  !*** ./src/Halogen/HTML/Properties/Tweened.purs ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Properties_Indexed_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Properties_Indexed_1 = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var tweenProp = function (id) {
	    return function (mkProp) {
	        return function (val) {
	            return Timeline_Tween.tween(id)(function ($0) {
	                return mkProp(val($0));
	            });
	        };
	    };
	};
	var ttweenProp$prime = function (id) {
	    return function (mkProp) {
	        return function (val) {
	            return Timeline_Tween["ttween'"](id)(function ($1) {
	                return mkProp(val($1));
	            });
	        };
	    };
	};
	var ttweenProp = function (mkProp) {
	    return function (val) {
	        return Timeline_Tween.ttween(function ($2) {
	            return mkProp(val($2));
	        });
	    };
	};
	var class_ = function ($3) {
	    return Control_Applicative.pure(Timeline_Build.applicativeTimeline)(Control_Applicative.pure(Timeline_Tween.applicativeTween)(Halogen_HTML_Properties_Indexed_1.class_($3)));
	};
	module.exports = {
	    class_: class_, 
	    ttweenProp: ttweenProp, 
	    "ttweenProp'": ttweenProp$prime, 
	    tweenProp: tweenProp
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 276 */
/*!*********************************!*\
  !*** ./src/Timeline/Tween.purs ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Tween = function (x) {
	    return x;
	};
	var tween = function (i) {
	    return function (f) {
	        return function (progress) {
	            return f(progress(i));
	        };
	    };
	};
	var ttween$prime = function (i) {
	    return function (f) {
	        return Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(tween(i)(f));
	    };
	};
	var ttween = function (f) {
	    return Control_Bind.bind(Timeline_Build.bindTimeline)(Timeline_Build.newStep)(function (v) {
	        return Control_Bind.bind(Timeline_Build.bindTimeline)(Debug_Trace.traceAnyA(Timeline_Build.applicativeTimeline)(v))(function () {
	            return ttween$prime(v)(f);
	        });
	    });
	};
	var evalTween = function (v) {
	    return v;
	};
	var functorTween = new Data_Functor.Functor(function (f) {
	    return function (tx) {
	        return Data_Function.apply(Tween)(function (p) {
	            var x = evalTween(tx)(p);
	            return f(x);
	        });
	    };
	});
	var applyTween = new Control_Apply.Apply(function () {
	    return functorTween;
	}, function (tf) {
	    return function (tx) {
	        return Data_Function.apply(Tween)(function (p) {
	            var x = evalTween(tx)(p);
	            var f = evalTween(tf)(p);
	            return f(x);
	        });
	    };
	});
	var bindTween = new Control_Bind.Bind(function () {
	    return applyTween;
	}, function (tx) {
	    return function (f) {
	        return Data_Function.apply(Tween)(function (p) {
	            return evalTween(f(evalTween(tx)(p)))(p);
	        });
	    };
	});
	var applicativeTween = new Control_Applicative.Applicative(function () {
	    return applyTween;
	}, function (x) {
	    return Data_Function.apply(Tween)(function (v) {
	        return x;
	    });
	});
	var monadTween = new Control_Monad.Monad(function () {
	    return applicativeTween;
	}, function () {
	    return bindTween;
	});
	module.exports = {
	    Tween: Tween, 
	    evalTween: evalTween, 
	    ttween: ttween, 
	    "ttween'": ttween$prime, 
	    tween: tween, 
	    functorTween: functorTween, 
	    applyTween: applyTween, 
	    applicativeTween: applicativeTween, 
	    bindTween: bindTween, 
	    monadTween: monadTween
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 277 */
/*!*********************************!*\
  !*** ./src/Timeline/Build.purs ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Int = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int.purs */ 151);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Time_Duration = __webpack_require__(/*! ./bower_components/purescript-datetime/src/Data/Time/Duration.purs */ 278);
	var Halogen = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen.purs */ 176);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Monad.purs */ 48);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var StepId = function (x) {
	    return x;
	};
	var StepBegin = (function () {
	    function StepBegin() {
	
	    };
	    StepBegin.value = new StepBegin();
	    return StepBegin;
	})();
	var StepEnd = (function () {
	    function StepEnd() {
	
	    };
	    StepEnd.value = new StepEnd();
	    return StepEnd;
	})();
	var StepBefore = (function () {
	    function StepBefore(value0) {
	        this.value0 = value0;
	    };
	    StepBefore.create = function (value0) {
	        return new StepBefore(value0);
	    };
	    return StepBefore;
	})();
	var StepAfter = (function () {
	    function StepAfter(value0) {
	        this.value0 = value0;
	    };
	    StepAfter.create = function (value0) {
	        return new StepAfter(value0);
	    };
	    return StepAfter;
	})();
	var Gen = (function () {
	    function Gen(value0, value1) {
	        this.value0 = value0;
	        this.value1 = value1;
	    };
	    Gen.create = function (value0) {
	        return function (value1) {
	            return new Gen(value0, value1);
	        };
	    };
	    return Gen;
	})();
	var Timeline = function (x) {
	    return x;
	};
	var timelineProps = function (v) {
	    return v;
	};
	var newStep$prime = function (dictDuration) {
	    return function (position) {
	        return function (duration) {
	            return Data_Function.apply(Timeline)(function (g) {
	                var steps = Data_Array.singleton({
	                    id: g.value0, 
	                    duration: Data_Time_Duration.fromDuration(dictDuration)(duration), 
	                    position: position
	                });
	                return {
	                    steps: steps, 
	                    value: g.value0, 
	                    idGen: g.value1(Data_Unit.unit)
	                };
	            });
	        };
	    };
	};
	var initIdGen = (function () {
	    var go = function (i) {
	        return new Gen(i, function (v) {
	            return go(i + 1 | 0);
	        });
	    };
	    return go(0);
	})();
	var functorTimeline = new Data_Functor.Functor(function (f) {
	    return function (tx) {
	        return Data_Function.apply(Timeline)(function (g) {
	            var x = timelineProps(tx)(g);
	            var $10 = {};
	            for (var $11 in x) {
	                if (x.hasOwnProperty($11)) {
	                    $10[$11] = x[$11];
	                };
	            };
	            $10.value = f(x.value);
	            return $10;
	        });
	    };
	});
	var eqStepId = new Data_Eq.Eq(function (v) {
	    return function (v1) {
	        return v === v1;
	    };
	});
	var defaultDuration = 0.1;
	var newStep = newStep$prime(Data_Time_Duration.durationSeconds)(StepEnd.value)(defaultDuration);
	var applyTimeline = new Control_Apply.Apply(function () {
	    return functorTimeline;
	}, function (tf) {
	    return function (tx) {
	        return Data_Function.apply(Timeline)(function (g) {
	            var f = timelineProps(tf)(g);
	            var x = timelineProps(tx)(f.idGen);
	            return {
	                steps: Data_Semigroup.append(Data_Semigroup.semigroupArray)(f.steps)(x.steps), 
	                value: f.value(x.value), 
	                idGen: x.idGen
	            };
	        });
	    };
	});
	var bindTimeline = new Control_Bind.Bind(function () {
	    return applyTimeline;
	}, function (tx) {
	    return function (f) {
	        return Data_Function.apply(Timeline)(function (g) {
	            var x = timelineProps(tx)(g);
	            var y = timelineProps(f(x.value))(x.idGen);
	            var $14 = {};
	            for (var $15 in y) {
	                if (y.hasOwnProperty($15)) {
	                    $14[$15] = y[$15];
	                };
	            };
	            $14.steps = Data_Semigroup.append(Data_Semigroup.semigroupArray)(x.steps)(y.steps);
	            return $14;
	        });
	    };
	});
	var applicativeTimeline = new Control_Applicative.Applicative(function () {
	    return applyTimeline;
	}, function (x) {
	    return Data_Function.apply(Timeline)(function (g) {
	        return {
	            steps: Data_Monoid.mempty(Data_Monoid.monoidArray), 
	            value: x, 
	            idGen: g
	        };
	    });
	});
	var monadTimeline = new Control_Monad.Monad(function () {
	    return applicativeTimeline;
	}, function () {
	    return bindTimeline;
	});
	module.exports = {
	    Gen: Gen, 
	    StepId: StepId, 
	    StepBegin: StepBegin, 
	    StepEnd: StepEnd, 
	    StepBefore: StepBefore, 
	    StepAfter: StepAfter, 
	    Timeline: Timeline, 
	    defaultDuration: defaultDuration, 
	    initIdGen: initIdGen, 
	    newStep: newStep, 
	    "newStep'": newStep$prime, 
	    timelineProps: timelineProps, 
	    eqStepId: eqStepId, 
	    functorTimeline: functorTimeline, 
	    applyTimeline: applyTimeline, 
	    applicativeTimeline: applicativeTimeline, 
	    bindTimeline: bindTimeline, 
	    monadTimeline: monadTimeline
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 278 */
/*!**************************************************************************!*\
  !*** ./bower_components/purescript-datetime/src/Data/Time/Duration.purs ***!
  \**************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Generic = __webpack_require__(/*! ./bower_components/purescript-generics/src/Data/Generic.purs */ 182);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Seconds = function (x) {
	    return x;
	};
	var Minutes = function (x) {
	    return x;
	};
	var Milliseconds = function (x) {
	    return x;
	};
	var Hours = function (x) {
	    return x;
	};
	var Days = function (x) {
	    return x;
	};
	var Duration = function (fromDuration, toDuration) {
	    this.fromDuration = fromDuration;
	    this.toDuration = toDuration;
	};
	var unSeconds = function (v) {
	    return v;
	};
	var unMinutes = function (v) {
	    return v;
	};
	var unMilliseconds = function (v) {
	    return v;
	};
	var unHours = function (v) {
	    return v;
	};
	var unDays = function (v) {
	    return v;
	};
	var toDuration = function (dict) {
	    return dict.toDuration;
	};
	var showSeconds = new Data_Show.Show(function (v) {
	    return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showMinutes = new Data_Show.Show(function (v) {
	    return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showMilliseconds = new Data_Show.Show(function (v) {
	    return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showHours = new Data_Show.Show(function (v) {
	    return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var showDays = new Data_Show.Show(function (v) {
	    return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
	});
	var semiringSeconds = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return v + v1;
	    };
	}, function (v) {
	    return function (v1) {
	        return v * v1;
	    };
	}, 1.0, 0.0);
	var semiringMinutes = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return v + v1;
	    };
	}, function (v) {
	    return function (v1) {
	        return v * v1;
	    };
	}, 1.0, 0.0);
	var semiringMilliseconds = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return v + v1;
	    };
	}, function (v) {
	    return function (v1) {
	        return v * v1;
	    };
	}, 1.0, 0.0);
	var semiringHours = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return v + v1;
	    };
	}, function (v) {
	    return function (v1) {
	        return v * v1;
	    };
	}, 1.0, 0.0);
	var semiringDays = new Data_Semiring.Semiring(function (v) {
	    return function (v1) {
	        return v + v1;
	    };
	}, function (v) {
	    return function (v1) {
	        return v * v1;
	    };
	}, 1.0, 0.0);
	var ringSeconds = new Data_Ring.Ring(function () {
	    return semiringSeconds;
	}, function (v) {
	    return function (v1) {
	        return v - v1;
	    };
	});
	var ringMinutes = new Data_Ring.Ring(function () {
	    return semiringMinutes;
	}, function (v) {
	    return function (v1) {
	        return v - v1;
	    };
	});
	var ringMilliseconds = new Data_Ring.Ring(function () {
	    return semiringMilliseconds;
	}, function (v) {
	    return function (v1) {
	        return v - v1;
	    };
	});
	var ringHours = new Data_Ring.Ring(function () {
	    return semiringHours;
	}, function (v) {
	    return function (v1) {
	        return v - v1;
	    };
	});
	var ringDays = new Data_Ring.Ring(function () {
	    return semiringDays;
	}, function (v) {
	    return function (v1) {
	        return v - v1;
	    };
	});
	var genericSeconds = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Seconds" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Seconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Seconds", [ {
	        sigConstructor: "Data.Time.Duration.Seconds", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Seconds", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericMinutes = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Minutes" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Minutes))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Minutes", [ {
	        sigConstructor: "Data.Time.Duration.Minutes", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Minutes", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericMilliseconds = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Milliseconds" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Milliseconds))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Milliseconds", [ {
	        sigConstructor: "Data.Time.Duration.Milliseconds", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Milliseconds", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericHours = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Hours" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Hours))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Hours", [ {
	        sigConstructor: "Data.Time.Duration.Hours", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Hours", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var genericDays = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.Time.Duration.Days" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Days))(Data_Generic.fromSpine(Data_Generic.genericNumber)(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("Data.Time.Duration.Days", [ {
	        sigConstructor: "Data.Time.Duration.Days", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericNumber)(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("Data.Time.Duration.Days", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericNumber)(v);
	    } ]);
	});
	var fromDuration = function (dict) {
	    return dict.fromDuration;
	};
	var eqSeconds = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordSeconds = new Data_Ord.Ord(function () {
	    return eqSeconds;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
	    };
	});
	var eqMinutes = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordMinutes = new Data_Ord.Ord(function () {
	    return eqMinutes;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
	    };
	});
	var eqMilliseconds = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordMilliseconds = new Data_Ord.Ord(function () {
	    return eqMilliseconds;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
	    };
	});
	var eqHours = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordHours = new Data_Ord.Ord(function () {
	    return eqHours;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
	    };
	});
	var eqDays = new Data_Eq.Eq(function (x) {
	    return function (y) {
	        return x === y;
	    };
	});
	var ordDays = new Data_Ord.Ord(function () {
	    return eqDays;
	}, function (x) {
	    return function (y) {
	        return Data_Ord.compare(Data_Ord.ordNumber)(x)(y);
	    };
	});
	var durationSeconds = new Duration(function ($199) {
	    return Milliseconds((function (v) {
	        return v * 1000.0;
	    })(unSeconds($199)));
	}, function (v) {
	    return v / 1000.0;
	});
	var durationMinutes = new Duration(function ($200) {
	    return Milliseconds((function (v) {
	        return v * 60000.0;
	    })(unMinutes($200)));
	}, function (v) {
	    return v / 60000.0;
	});
	var durationMilliseconds = new Duration(Control_Category.id(Control_Category.categoryFn), Control_Category.id(Control_Category.categoryFn));
	var durationHours = new Duration(function ($201) {
	    return Milliseconds((function (v) {
	        return v * 3600000.0;
	    })(unHours($201)));
	}, function (v) {
	    return v / 3600000.0;
	});
	var durationDays = new Duration(function ($202) {
	    return Milliseconds((function (v) {
	        return v * 8.64e7;
	    })(unDays($202)));
	}, function (v) {
	    return v / 8.64e7;
	});
	var convertDuration = function (dictDuration) {
	    return function (dictDuration1) {
	        return function ($203) {
	            return toDuration(dictDuration1)(fromDuration(dictDuration)($203));
	        };
	    };
	};
	module.exports = {
	    Days: Days, 
	    Hours: Hours, 
	    Milliseconds: Milliseconds, 
	    Minutes: Minutes, 
	    Seconds: Seconds, 
	    Duration: Duration, 
	    convertDuration: convertDuration, 
	    fromDuration: fromDuration, 
	    toDuration: toDuration, 
	    unDays: unDays, 
	    unHours: unHours, 
	    unMilliseconds: unMilliseconds, 
	    unMinutes: unMinutes, 
	    unSeconds: unSeconds, 
	    eqMilliseconds: eqMilliseconds, 
	    ordMilliseconds: ordMilliseconds, 
	    genericMilliseconds: genericMilliseconds, 
	    semiringMilliseconds: semiringMilliseconds, 
	    ringMilliseconds: ringMilliseconds, 
	    showMilliseconds: showMilliseconds, 
	    eqSeconds: eqSeconds, 
	    ordSeconds: ordSeconds, 
	    genericSeconds: genericSeconds, 
	    semiringSeconds: semiringSeconds, 
	    ringSeconds: ringSeconds, 
	    showSeconds: showSeconds, 
	    eqMinutes: eqMinutes, 
	    ordMinutes: ordMinutes, 
	    genericMinutes: genericMinutes, 
	    semiringMinutes: semiringMinutes, 
	    ringMinutes: ringMinutes, 
	    showMinutes: showMinutes, 
	    eqHours: eqHours, 
	    ordHours: ordHours, 
	    genericHours: genericHours, 
	    semiringHours: semiringHours, 
	    ringHours: ringHours, 
	    showHours: showHours, 
	    eqDays: eqDays, 
	    ordDays: ordDays, 
	    genericDays: genericDays, 
	    semiringDays: semiringDays, 
	    ringDays: ringDays, 
	    showDays: showDays, 
	    durationMilliseconds: durationMilliseconds, 
	    durationSeconds: durationSeconds, 
	    durationMinutes: durationMinutes, 
	    durationHours: durationHours, 
	    durationDays: durationDays
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 279 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-debug/src/Debug/Trace.purs ***!
  \****************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.js */ 280);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var traceShowM = function (dictShow) {
	    return function (dictMonad) {
	        return function (s) {
	            return $foreign.traceAny(Data_Show.show(dictShow)(s))(function (v) {
	                return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(s);
	            });
	        };
	    };
	};
	var traceShow = function (dictShow) {
	    return function ($16) {
	        return $foreign.traceAny(Data_Show.show(dictShow)($16));
	    };
	};
	var traceAnyM = function (dictMonad) {
	    return function (s) {
	        return $foreign.traceAny(s)(function (v) {
	            return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(s);
	        });
	    };
	};
	var traceAnyA = function (dictApplicative) {
	    return function (s) {
	        return $foreign.traceAny(s)(function (v) {
	            return Control_Applicative.pure(dictApplicative)(Data_Unit.unit);
	        });
	    };
	};
	var traceShowA = function (dictShow) {
	    return function (dictApplicative) {
	        return function ($17) {
	            return traceAnyA(dictApplicative)(Data_Show.show(dictShow)($17));
	        };
	    };
	};
	var traceA = function (dictApplicative) {
	    return traceAnyA(dictApplicative);
	};
	var trace = $foreign.traceAny;
	var spy = function (a) {
	    return $foreign.traceAny(a)(function (v) {
	        return a;
	    });
	};
	module.exports = {
	    spy: spy, 
	    trace: trace, 
	    traceA: traceA, 
	    traceAnyA: traceAnyA, 
	    traceAnyM: traceAnyM, 
	    traceShow: traceShow, 
	    traceShowA: traceShowA, 
	    traceShowM: traceShowM, 
	    traceAny: $foreign.traceAny
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 280 */
/*!**************************************************************!*\
  !*** ./bower_components/purescript-debug/src/Debug/Trace.js ***!
  \**************************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {"use strict";
	
	// module Debug.Trace
	
	// Alias require to prevent webpack or browserify from actually requiring.
	var req =  false ? undefined : module.require;
	var util = req === undefined ? undefined : req("util");
	
	exports.traceAny = function (x) {
	  return function (k) {
	    // node only recurses two levels into an object before printing
	    // "[object]" for further objects when using console.log()
	    if (util !== undefined) {
	      console.log(util.inspect(x, { depth: null, colors: true }));
	    } else {
	      console.log(x);
	    }
	    return k({});
	  };
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../../~/webpack/buildin/module.js */ 281)(module)))

/***/ },
/* 281 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 282 */
/*!******************************************************!*\
  !*** ./lib/purescript-halogen/src/Halogen/Util.purs ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_Aff = __webpack_require__(/*! ./bower_components/purescript-aff/src/Control/Monad/Aff.purs */ 76);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Class = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Class.purs */ 112);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Control_Monad_Error_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs */ 113);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_Event_EventTarget = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/EventTarget.purs */ 283);
	var DOM_HTML_Event_EventTypes = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Event/EventTypes.purs */ 285);
	var DOM_HTML = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML.purs */ 145);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var DOM_HTML_Window = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Window.purs */ 174);
	var DOM_Node_ParentNode = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/ParentNode.purs */ 286);
	var Halogen_Effects = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/Effects.purs */ 235);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var selectElement = function (query) {
	    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff))(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($8) {
	        return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($8));
	    })(DOM_HTML_Window.document))(DOM_HTML.window))))(function (v) {
	        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
	            if (v instanceof Data_Maybe.Nothing) {
	                return Data_Maybe.Nothing.value;
	            };
	            if (v instanceof Data_Maybe.Just) {
	                return Data_Function.apply(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create))(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0)));
	            };
	            throw new Error("Failed pattern match at Halogen.Util line 54, column 3 - line 56, column 76: " + [ v.constructor.name ]);
	        })());
	    });
	};
	var runHalogenAff = function ($9) {
	    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($9));
	};
	var awaitLoad = Control_Monad_Aff.makeAff(function (v) {
	    return function (callback) {
	        return Data_Function.apply(Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff))(function __do() {
	            var $10 = DOM_HTML.window();
	            return DOM_Event_EventTarget.addEventListener(DOM_HTML_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(function (v1) {
	                return callback(Data_Unit.unit);
	            }))(false)(DOM_HTML_Types.windowToEventTarget($10))();
	        });
	    };
	});
	var awaitBody = Control_Bind.bind(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
	    return Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)))(selectElement("body"));
	});
	module.exports = {
	    awaitBody: awaitBody, 
	    awaitLoad: awaitLoad, 
	    runHalogenAff: runHalogenAff, 
	    selectElement: selectElement
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 283 */
/*!************************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Event/EventTarget.purs ***!
  \************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/EventTarget.js */ 284);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_Event_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/Types.purs */ 171);
	module.exports = {
	    addEventListener: $foreign.addEventListener, 
	    dispatchEvent: $foreign.dispatchEvent, 
	    eventListener: $foreign.eventListener, 
	    removeEventListener: $foreign.removeEventListener
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 284 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Event/EventTarget.js ***!
  \**********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	exports.eventListener = function (fn) {
	  return function (event) {
	    return fn(event)();
	  };
	};
	
	exports.addEventListener = function (type) {
	  return function (listener) {
	    return function (useCapture) {
	      return function (target) {
	        return function () {
	          target.addEventListener(type, listener, useCapture);
	          return {};
	        };
	      };
	    };
	  };
	};
	
	exports.removeEventListener = function (type) {
	  return function (listener) {
	    return function (useCapture) {
	      return function (target) {
	        return function () {
	          target.removeEventListener(type, listener, useCapture);
	          return {};
	        };
	      };
	    };
	  };
	};
	
	exports.dispatchEvent = function (event) {
	  return function (target) {
	    return function () {
	      return target.dispatchEvent(event);
	    };
	  };
	};


/***/ },
/* 285 */
/*!****************************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/HTML/Event/EventTypes.purs ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var DOM_Event_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Event/Types.purs */ 171);
	var wheel = "wheel";
	var visibilitychange = "visibilitychange";
	var unload = "unload";
	var transitionend = "transitionend";
	var touchstart = "touchstart";
	var touchmove = "touchmove";
	var touchleave = "touchleave";
	var touchenter = "touchenter";
	var touchend = "touchend";
	var touchcancel = "touchcancel";
	var timeupdate = "timeupdate";
	var timeout = "timeout";
	var suspend = "suspend";
	var submit = "submit";
	var stalled = "stalled";
	var show = "show";
	var select = "select";
	var seeking = "seeking";
	var seeked = "seeked";
	var scroll = "scroll";
	var resize = "resize";
	var reset = "reset";
	var readystatechange = "readystatechange";
	var ratechange = "ratechange";
	var progress = "progress";
	var popstate = "popstate";
	var playing = "playing";
	var play = "play";
	var pause = "pause";
	var pageshow = "pageshow";
	var pagehide = "pagehide";
	var open = "open";
	var mouseup = "mouseup";
	var mouseover = "mouseover";
	var mouseout = "mouseout";
	var mousemove = "mousemove";
	var mouseleave = "mouseleave";
	var mouseenter = "mouseenter";
	var mousedown = "mousedown";
	var message = "message";
	var loadstart = "loadstart";
	var loadend = "loadend";
	var loadedmetadata = "loadedmetadata";
	var loadeddata = "loadeddata";
	var load = "load";
	var keyup = "keyup";
	var keypress = "keypress";
	var keydown = "keydown";
	var input = "input";
	var hashchange = "hashchange";
	var focus = "focus";
	var error = "error";
	var drop = "drop";
	var dragstart = "dragstart";
	var dragover = "dragover";
	var dragleave = "dragleave";
	var dragenter = "dragenter";
	var dragend = "dragend";
	var drag = "drag";
	var dblclick = "dblclick";
	var contextmenu = "contextmenu";
	var compositionupdate = "compositionupdate";
	var compositionstart = "compositionstart";
	var compositionend = "compositionend";
	var complete = "complete";
	var click = "click";
	var change = "change";
	var blur = "blur";
	var beforeunload = "beforeunload";
	var animationstart = "animationstart";
	var animationiteration = "animationiteration";
	var animationend = "animationend";
	var abort = "abort";
	module.exports = {
	    abort: abort, 
	    animationend: animationend, 
	    animationiteration: animationiteration, 
	    animationstart: animationstart, 
	    beforeunload: beforeunload, 
	    blur: blur, 
	    change: change, 
	    click: click, 
	    complete: complete, 
	    compositionend: compositionend, 
	    compositionstart: compositionstart, 
	    compositionupdate: compositionupdate, 
	    contextmenu: contextmenu, 
	    dblclick: dblclick, 
	    drag: drag, 
	    dragend: dragend, 
	    dragenter: dragenter, 
	    dragleave: dragleave, 
	    dragover: dragover, 
	    dragstart: dragstart, 
	    drop: drop, 
	    error: error, 
	    focus: focus, 
	    hashchange: hashchange, 
	    input: input, 
	    keydown: keydown, 
	    keypress: keypress, 
	    keyup: keyup, 
	    load: load, 
	    loadeddata: loadeddata, 
	    loadedmetadata: loadedmetadata, 
	    loadend: loadend, 
	    loadstart: loadstart, 
	    message: message, 
	    mousedown: mousedown, 
	    mouseenter: mouseenter, 
	    mouseleave: mouseleave, 
	    mousemove: mousemove, 
	    mouseout: mouseout, 
	    mouseover: mouseover, 
	    mouseup: mouseup, 
	    open: open, 
	    pagehide: pagehide, 
	    pageshow: pageshow, 
	    pause: pause, 
	    play: play, 
	    playing: playing, 
	    popstate: popstate, 
	    progress: progress, 
	    ratechange: ratechange, 
	    readystatechange: readystatechange, 
	    reset: reset, 
	    resize: resize, 
	    scroll: scroll, 
	    seeked: seeked, 
	    seeking: seeking, 
	    select: select, 
	    show: show, 
	    stalled: stalled, 
	    submit: submit, 
	    suspend: suspend, 
	    timeout: timeout, 
	    timeupdate: timeupdate, 
	    touchcancel: touchcancel, 
	    touchend: touchend, 
	    touchenter: touchenter, 
	    touchleave: touchleave, 
	    touchmove: touchmove, 
	    touchstart: touchstart, 
	    transitionend: transitionend, 
	    unload: unload, 
	    visibilitychange: visibilitychange, 
	    wheel: wheel
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 286 */
/*!**********************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/ParentNode.purs ***!
  \**********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/ParentNode.js */ 287);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_Node_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Types.purs */ 173);
	module.exports = {
	    childElementCount: $foreign.childElementCount, 
	    children: $foreign.children, 
	    firstElementChild: $foreign.firstElementChild, 
	    lastElementChild: $foreign.lastElementChild, 
	    querySelector: $foreign.querySelector, 
	    querySelectorAll: $foreign.querySelectorAll
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 287 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-dom/src/DOM/Node/ParentNode.js ***!
  \********************************************************************/
/***/ function(module, exports) {

	"use strict";
	
	var getEffProp = function (name) {
	  return function (node) {
	    return function () {
	      return node[name];
	    };
	  };
	};
	
	exports.children = getEffProp("children");
	
	exports.firstElementChild = getEffProp("firstElementChild");
	
	exports.lastElementChild = getEffProp("lastElementChild");
	
	exports.childElementCount = getEffProp("childElementCount");
	
	exports.querySelector = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelector(selector);
	    };
	  };
	};
	
	exports.querySelectorAll = function (selector) {
	  return function (node) {
	    return function () {
	      return node.querySelectorAll(selector);
	    };
	  };
	};


/***/ },
/* 288 */
/*!***************************!*\
  !*** ./src/Keyboard.purs ***!
  \***************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./src/Keyboard.js */ 289);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var DOM_Node_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/Node/Types.purs */ 173);
	var onKeyUp = function (document) {
	    return function (fn) {
	        return Data_Function_Uncurried.runFn3($foreign.addEventListenerImpl)("keyup")(fn)(document);
	    };
	};
	module.exports = {
	    onKeyUp: onKeyUp, 
	    preventDefault: $foreign.preventDefault, 
	    readKeyboardEvent: $foreign.readKeyboardEvent
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 289 */
/*!*************************!*\
  !*** ./src/Keyboard.js ***!
  \*************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Keyboard
	exports.addEventListenerImpl = function(eventName, fn, element) {
	    return function() {
	        element.addEventListener(eventName, function(e) {
	            fn(e)();
	        });
	    };
	};
	
	exports.readKeyboardEvent = function(e) {
	    return e;
	};
	
	exports.preventDefault = function(e) {
	    return function() {
	        e.preventDefault();
	    };
	};

/***/ },
/* 290 */
/*!****************************************!*\
  !*** ./src/RequestAnimationFrame.purs ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./src/RequestAnimationFrame.js */ 291);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var DOM = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM.purs */ 144);
	var DOM_HTML = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML.purs */ 145);
	var DOM_HTML_Types = __webpack_require__(/*! ./bower_components/purescript-dom/src/DOM/HTML/Types.purs */ 147);
	var Data_Time_Duration = __webpack_require__(/*! ./bower_components/purescript-datetime/src/Data/Time/Duration.purs */ 278);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var requestAnimationFrame_ = function (dictDuration) {
	    return function (window) {
	        return function (action) {
	            return Data_Function.apply($foreign.requestAnimationFrameImpl(window))(function ($6) {
	                return action(Data_Time_Duration.toDuration(dictDuration)(Data_Time_Duration.Milliseconds($6)));
	            });
	        };
	    };
	};
	var requestAnimationFrame = function (dictDuration) {
	    return function (action) {
	        return function __do() {
	            var v = DOM_HTML.window();
	            return requestAnimationFrame_(dictDuration)(v)(action)();
	        };
	    };
	};
	var onAnimationFrameDelta = function (dictDuration) {
	    return function (fn) {
	        var fn$prime = function (tPrev) {
	            return function (t) {
	                return function __do() {
	                    fn(Data_Time_Duration.toDuration(dictDuration)(Data_Ring.sub(Data_Time_Duration.ringMilliseconds)(t)(tPrev)))();
	                    return requestAnimationFrame(Data_Time_Duration.durationMilliseconds)(fn$prime(t))();
	                };
	            };
	        };
	        var fn0 = function (t) {
	            return requestAnimationFrame(Data_Time_Duration.durationMilliseconds)(fn$prime(t));
	        };
	        return requestAnimationFrame(Data_Time_Duration.durationMilliseconds)(fn0);
	    };
	};
	var onAnimationFrame = function (dictDuration) {
	    return function (fn) {
	        var fn$prime = function (t) {
	            return function __do() {
	                fn(t)();
	                return requestAnimationFrame(dictDuration)(fn$prime)();
	            };
	        };
	        return requestAnimationFrame(dictDuration)(fn$prime);
	    };
	};
	module.exports = {
	    onAnimationFrame: onAnimationFrame, 
	    onAnimationFrameDelta: onAnimationFrameDelta, 
	    requestAnimationFrame: requestAnimationFrame, 
	    requestAnimationFrame_: requestAnimationFrame_
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 291 */
/*!**************************************!*\
  !*** ./src/RequestAnimationFrame.js ***!
  \**************************************/
/***/ function(module, exports) {

	"use strict";
	
	// module DOM.RequestAnimationFrame 
	
	var requestAnimationFrame = null;
	
	// http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	exports.requestAnimationFrameImpl = function(window_) {
	    return function(action) {
	
	        if (!requestAnimationFrame) {
	            requestAnimationFrame = (function() {
	                return window_.requestAnimationFrame ||
	                    window_.webkitRequestAnimationFrame ||
	                    window_.mozRequestAnimationFrame ||
	                    function(callback) {
	                        window_.setTimeout(callback, 1000 / 60);
	                    };
	            })();
	        }
	
	        return function() {
	            return requestAnimationFrame(function(t) { action(t)(); });
	        };
	    }
	};

/***/ },
/* 292 */
/*!***********************************!*\
  !*** ./src/Timeline/Compile.purs ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Maybe_Unsafe = __webpack_require__(/*! ./src/Data/Maybe/Unsafe.purs */ 293);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Compiled = (function () {
	    function Compiled(value0) {
	        this.value0 = value0;
	    };
	    Compiled.create = function (value0) {
	        return new Compiled(value0);
	    };
	    return Compiled;
	})();
	var numSteps = function (v) {
	    return Data_Array.length(v.value0.steps);
	};
	var compiledProps = function (v) {
	    return v.value0;
	};
	var compile = function (tt) {
	    var t = Timeline_Build.timelineProps(tt)(Timeline_Build.initIdGen);
	    var insertStep = function (prevStepsM) {
	        return function (step) {
	            if (step.position instanceof Timeline_Build.StepBegin) {
	                return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.cons(step))(prevStepsM);
	            };
	            if (step.position instanceof Timeline_Build.StepEnd) {
	                return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.snoc)(prevStepsM))(Control_Applicative.pure(Data_Maybe.applicativeMaybe)(step));
	            };
	            if (step.position instanceof Timeline_Build.StepBefore) {
	                return Control_Bind.bind(Data_Maybe.bindMaybe)(prevStepsM)(function (v) {
	                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.findIndex(function (step1) {
	                        return Data_Eq.eq(Timeline_Build.eqStepId)(step1.id)(step.position.value0);
	                    })(v))(function (v1) {
	                        return Data_Array.insertAt(v1)(step)(v);
	                    });
	                });
	            };
	            if (step.position instanceof Timeline_Build.StepAfter) {
	                return Control_Bind.bind(Data_Maybe.bindMaybe)(prevStepsM)(function (v) {
	                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.findLastIndex(function (step1) {
	                        return Data_Eq.eq(Timeline_Build.eqStepId)(step1.id)(step.position.value0);
	                    })(v))(function (v1) {
	                        return Data_Array.insertAt(v1 + 1 | 0)(step)(v);
	                    });
	                });
	            };
	            throw new Error("Failed pattern match at Timeline.Compile line 37, column 34 - line 47, column 44: " + [ step.position.constructor.name ]);
	        };
	    };
	    var steps = Data_Function.applyFlipped(Data_Foldable.foldl(Data_Foldable.foldableArray)(insertStep)(new Data_Maybe.Just(Data_Monoid.mempty(Data_Monoid.monoidArray)))(t.steps))(Data_Maybe_Unsafe.unsafeFromMaybeWith("error compiling timeline"));
	    var n = Data_Array.length(steps);
	    var slowLookup = function (i) {
	        return Data_Function.apply(Debug_Trace.traceAny({
	            slowLookup: i, 
	            steps: steps
	        }))(function (v) {
	            return Data_Function.applyFlipped(Data_Array.findIndex(function (step) {
	                return Data_Eq.eq(Timeline_Build.eqStepId)(step.id)(i);
	            })(steps))(Data_Maybe_Unsafe.unsafeFromMaybeWith("error constructing step lookup table"));
	        });
	    };
	    var lookupArr = Data_Functor.map(Data_Functor.functorArray)(slowLookup)(Data_Array.range(0)(n - 1));
	    var lookupStep = function (v) {
	        return Data_Function.applyFlipped(Data_Array.index(lookupArr)(v))(Data_Maybe_Unsafe.unsafeFromMaybeWith("error looking up step"));
	    };
	    return new Compiled({
	        steps: steps, 
	        lookupStep: lookupStep, 
	        value: t.value
	    });
	};
	module.exports = {
	    Compiled: Compiled, 
	    compile: compile, 
	    compiledProps: compiledProps, 
	    numSteps: numSteps
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 293 */
/*!************************************!*\
  !*** ./src/Data/Maybe/Unsafe.purs ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var unsafeFromMaybeWith = function (msg) {
	    return Data_Maybe["fromMaybe'"](function (v) {
	        return Partial_Unsafe.unsafeCrashWith(msg);
	    });
	};
	module.exports = {
	    unsafeFromMaybeWith: unsafeFromMaybeWith
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 294 */
/*!*******************************!*\
  !*** ./src/Timeline/Run.purs ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Time_Duration = __webpack_require__(/*! ./bower_components/purescript-datetime/src/Data/Time/Duration.purs */ 278);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Int = __webpack_require__(/*! ./bower_components/purescript-integers/src/Data/Int.purs */ 151);
	var Data_Maybe_Unsafe = __webpack_require__(/*! ./src/Data/Maybe/Unsafe.purs */ 293);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Halogen = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen.purs */ 176);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Timeline_Compile = __webpack_require__(/*! ./src/Timeline/Compile.purs */ 292);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var MoveForward = (function () {
	    function MoveForward() {
	
	    };
	    MoveForward.value = new MoveForward();
	    return MoveForward;
	})();
	var MoveReverse = (function () {
	    function MoveReverse() {
	
	    };
	    MoveReverse.value = new MoveReverse();
	    return MoveReverse;
	})();
	var MoveBegin = (function () {
	    function MoveBegin() {
	
	    };
	    MoveBegin.value = new MoveBegin();
	    return MoveBegin;
	})();
	var MoveEnd = (function () {
	    function MoveEnd() {
	
	    };
	    MoveEnd.value = new MoveEnd();
	    return MoveEnd;
	})();
	var Forward = (function () {
	    function Forward() {
	
	    };
	    Forward.value = new Forward();
	    return Forward;
	})();
	var Reverse = (function () {
	    function Reverse() {
	
	    };
	    Reverse.value = new Reverse();
	    return Reverse;
	})();
	var StepPaused = (function () {
	    function StepPaused(value0) {
	        this.value0 = value0;
	    };
	    StepPaused.create = function (value0) {
	        return new StepPaused(value0);
	    };
	    return StepPaused;
	})();
	var StepTrans = (function () {
	    function StepTrans(value0) {
	        this.value0 = value0;
	    };
	    StepTrans.create = function (value0) {
	        return new StepTrans(value0);
	    };
	    return StepTrans;
	})();
	var State = (function () {
	    function State(value0) {
	        this.value0 = value0;
	    };
	    State.create = function (value0) {
	        return new State(value0);
	    };
	    return State;
	})();
	var stateProps = function (v) {
	    return v.value0;
	};
	var initialState = function (t) {
	    return new State({
	        compiled: Timeline_Compile.compile(t), 
	        stepState: new StepPaused(0)
	    });
	};
	var getValue$prime = function (v) {
	    var t = (function () {
	        if (v.stepState instanceof StepPaused) {
	            return Data_Int.toNumber(v.stepState.value0 + 1 | 0);
	        };
	        if (v.stepState instanceof StepTrans) {
	            return Data_Function.apply(Debug_Trace.traceAny({
	                stepIndex: v.stepState.value0.stepIndex, 
	                progress: v.stepState.value0.progress
	            }))(function (v1) {
	                return Data_Int.toNumber(v.stepState.value0.stepIndex) + v.stepState.value0.progress;
	            });
	        };
	        throw new Error("Failed pattern match at Timeline.Run line 123, column 9 - line 125, column 108: " + [ v.stepState.constructor.name ]);
	    })();
	    var getProgress = function (i) {
	        return Data_Function.applyFlipped(t - Data_Function.applyFlipped(v.compiled.value0.lookupStep(i))(Data_Int.toNumber))(Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0));
	    };
	    return v.compiled.value0.value(getProgress);
	};
	var getValue = function (state) {
	    return getValue$prime(stateProps(state));
	};
	var clampState = function (state) {
	    var n = Timeline_Compile.numSteps(state.compiled);
	    var stepState = (function () {
	        if (state.stepState instanceof StepPaused) {
	            return Data_Function.apply(StepPaused.create)(Data_Ord.clamp(Data_Ord.ordInt)(0)(n - 1)(state.stepState.value0));
	        };
	        if (state.stepState instanceof StepTrans) {
	            var $22 = state.stepState.value0.stepIndex < 0;
	            if ($22) {
	                return new StepPaused(0);
	            };
	            if (!$22) {
	                var $23 = state.stepState.value0.stepIndex >= n;
	                if ($23) {
	                    return new StepPaused(n - 1);
	                };
	                if (!$23) {
	                    return new StepTrans(state.stepState.value0);
	                };
	                throw new Error("Failed pattern match at Timeline.Run line 62, column 12 - line 64, column 33: " + [ $23.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Timeline.Run line 60, column 7 - line 64, column 33: " + [ $22.constructor.name ]);
	        };
	        throw new Error("Failed pattern match at Timeline.Run line 57, column 15 - line 64, column 33: " + [ state.stepState.constructor.name ]);
	    })();
	    return {
	        compiled: state.compiled, 
	        stepState: stepState
	    };
	};
	var move$prime = function (target) {
	    return function (state) {
	        var completedStepIndex = (function () {
	            if (state.stepState instanceof StepPaused) {
	                return state.stepState.value0;
	            };
	            if (state.stepState instanceof StepTrans) {
	                if (state.stepState.value0.direction instanceof Forward) {
	                    return state.stepState.value0.stepIndex;
	                };
	                if (state.stepState.value0.direction instanceof Reverse) {
	                    return state.stepState.value0.stepIndex - 1;
	                };
	                throw new Error("Failed pattern match at Timeline.Run line 73, column 41 - line 76, column 3: " + [ state.stepState.value0.direction.constructor.name ]);
	            };
	            throw new Error("Failed pattern match at Timeline.Run line 71, column 24 - line 76, column 3: " + [ state.stepState.constructor.name ]);
	        })();
	        var stepState = (function () {
	            if (target instanceof MoveForward) {
	                return new StepTrans({
	                    stepIndex: completedStepIndex + 1 | 0, 
	                    progress: 0.0, 
	                    direction: Forward.value
	                });
	            };
	            if (target instanceof MoveReverse) {
	                return new StepTrans({
	                    stepIndex: completedStepIndex, 
	                    progress: 1.0, 
	                    direction: Reverse.value
	                });
	            };
	            if (target instanceof MoveBegin) {
	                return new StepPaused(0);
	            };
	            if (target instanceof MoveEnd) {
	                return new StepPaused(Timeline_Compile.numSteps(state.compiled) - 1);
	            };
	            throw new Error("Failed pattern match at Timeline.Run line 76, column 15 - line 88, column 56: " + [ target.constructor.name ]);
	        })();
	        return Data_Function.applyFlipped({
	            compiled: state.compiled, 
	            stepState: stepState
	        })(clampState);
	    };
	};
	var move = function (target) {
	    return function (state) {
	        return Data_Function.apply(Debug_Trace.traceAny({
	            target: target, 
	            state: state
	        }))(function (v) {
	            return Data_Function.apply(Debug_Trace.spy)(new State(move$prime(target)(stateProps(state))));
	        });
	    };
	};
	var tick$prime = function (dt) {
	    return function (state) {
	        var cp = Timeline_Compile.compiledProps(state.compiled);
	        var stepState = (function () {
	            if (state.stepState instanceof StepPaused) {
	                return state.stepState;
	            };
	            if (state.stepState instanceof StepTrans) {
	                return Data_Function.apply(Debug_Trace.traceAny(state.stepState.value0))(function (v) {
	                    var duration = Data_Function.applyFlipped(Data_Function.applyFlipped(Data_Function.applyFlipped(state.stepState.value0.stepIndex)(Data_Array.index(cp.steps)))(Data_Maybe_Unsafe.unsafeFromMaybeWith("error looking up step duration")))(function (step) {
	                        return step.duration;
	                    });
	                    var d = (function () {
	                        if (state.stepState.value0.direction instanceof Forward) {
	                            return 1.0;
	                        };
	                        if (state.stepState.value0.direction instanceof Reverse) {
	                            return -1.0;
	                        };
	                        throw new Error("Failed pattern match at Timeline.Run line 101, column 15 - line 104, column 11: " + [ state.stepState.value0.direction.constructor.name ]);
	                    })();
	                    var speed = d / Data_Time_Duration.unMilliseconds(duration);
	                    var progress = Data_Function.applyFlipped(state.stepState.value0.progress + speed * Data_Time_Duration.unMilliseconds(dt))(Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0));
	                    var $37 = progress <= 0.0 && d < 0.0;
	                    if ($37) {
	                        return new StepPaused(state.stepState.value0.stepIndex - 1);
	                    };
	                    if (!$37) {
	                        var $38 = progress >= 1.0 && d > 0.0;
	                        if ($38) {
	                            return new StepPaused(state.stepState.value0.stepIndex);
	                        };
	                        if (!$38) {
	                            return Data_Function.apply(StepTrans.create)((function () {
	                                var $39 = {};
	                                for (var $40 in state.stepState.value0) {
	                                    if (state.stepState.value0.hasOwnProperty($40)) {
	                                        $39[$40] = state.stepState.value0[$40];
	                                    };
	                                };
	                                $39.progress = progress;
	                                return $39;
	                            })());
	                        };
	                        throw new Error("Failed pattern match at Timeline.Run line 112, column 16 - line 114, column 63: " + [ $38.constructor.name ]);
	                    };
	                    throw new Error("Failed pattern match at Timeline.Run line 110, column 10 - line 114, column 63: " + [ $37.constructor.name ]);
	                });
	            };
	            throw new Error("Failed pattern match at Timeline.Run line 98, column 15 - line 114, column 63: " + [ state.stepState.constructor.name ]);
	        })();
	        return Data_Function.applyFlipped({
	            compiled: state.compiled, 
	            stepState: stepState
	        })(clampState);
	    };
	};
	var tick = function (dt) {
	    return function (state) {
	        return new State(tick$prime(dt)(stateProps(state)));
	    };
	};
	module.exports = {
	    Forward: Forward, 
	    Reverse: Reverse, 
	    MoveForward: MoveForward, 
	    MoveReverse: MoveReverse, 
	    MoveBegin: MoveBegin, 
	    MoveEnd: MoveEnd, 
	    State: State, 
	    StepPaused: StepPaused, 
	    StepTrans: StepTrans, 
	    clampState: clampState, 
	    getValue: getValue, 
	    "getValue'": getValue$prime, 
	    initialState: initialState, 
	    move: move, 
	    "move'": move$prime, 
	    stateProps: stateProps, 
	    tick: tick, 
	    "tick'": tick$prime
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 295 */
/*!**********************************!*\
  !*** ./src/Timeline/Slides.purs ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Elements_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Elements/Tweened.purs */ 296);
	var Halogen_HTML_Properties_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Tweened.purs */ 275);
	var Halogen_HTML_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Indexed.purs */ 271);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Styles_Indexed = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Indexed.purs */ 297);
	var Halogen_HTML_Styles = __webpack_require__(/*! ./src/Halogen/HTML/Styles.purs */ 298);
	var Halogen_HTML_Properties = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties.purs */ 270);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Exists = __webpack_require__(/*! ./bower_components/purescript-exists/src/Data/Exists.purs */ 188);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_State_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Trans.purs */ 206);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Debug_Trace = __webpack_require__(/*! ./bower_components/purescript-debug/src/Debug/Trace.purs */ 279);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Control_Monad_Trans = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/Trans.purs */ 133);
	var Control_Monad_State_Class = __webpack_require__(/*! ./bower_components/purescript-transformers/src/Control/Monad/State/Class.purs */ 128);
	var Halogen_HTML_Elements_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements/Indexed.purs */ 274);
	var FadeIn = (function () {
	    function FadeIn() {
	
	    };
	    FadeIn.value = new FadeIn();
	    return FadeIn;
	})();
	var FadeOut = (function () {
	    function FadeOut() {
	
	    };
	    FadeOut.value = new FadeOut();
	    return FadeOut;
	})();
	var updateProp = function (v) {
	    return function (v1) {
	        return function (v2) {
	            return function (v3) {
	                if (v3 instanceof Halogen_HTML_Core.Element) {
	                    var updatePropF = function (value$prime) {
	                        return function (v4) {
	                            return new Halogen_HTML_Core.PropF(v4.value0, value$prime, v4.value2);
	                        };
	                    };
	                    var tryPropF = function (accum) {
	                        return function (v4) {
	                            var $29 = Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(Halogen_HTML_Core.runPropName(v4.value0))(Halogen_HTML_Core.runPropName(v));
	                            if ($29) {
	                                return {
	                                    accum: true, 
	                                    value: Control_Bind.bind(Data_Maybe.bindMaybe)(v2(Data_Function.apply(Unsafe_Coerce.unsafeCoerce)(new Data_Maybe.Just(v4.value1))))(function (v5) {
	                                        return Data_Function.apply(Control_Applicative.pure(Data_Maybe.applicativeMaybe))(Data_Function.apply(Halogen_HTML_Core.Prop.create)(Data_Function.apply(Data_Exists.mkExists)(new Halogen_HTML_Core.PropF(v4.value0, Unsafe_Coerce.unsafeCoerce(v5), v4.value2))));
	                                    })
	                                };
	                            };
	                            if (!$29) {
	                                return {
	                                    accum: accum, 
	                                    value: Data_Function.apply(Data_Maybe.Just.create)(Data_Function.apply(Halogen_HTML_Core.Prop.create)(Data_Exists.mkExists(v4)))
	                                };
	                            };
	                            throw new Error("Failed pattern match at Timeline.Slides line 47, column 5 - line 54, column 49: " + [ $29.constructor.name ]);
	                        };
	                    };
	                    var tryProp = function (accum) {
	                        return function (v4) {
	                            if (v4 instanceof Halogen_HTML_Core.Prop) {
	                                return Data_Function.applyFlipped(v4.value0)(Data_Exists.runExists(tryPropF(accum)));
	                            };
	                            return {
	                                accum: accum, 
	                                value: new Data_Maybe.Just(v4)
	                            };
	                        };
	                    };
	                    var res = Data_Traversable.mapAccumL(Data_Traversable.traversableArray)(tryProp)(false)(v3.value2);
	                    var propMaybes = (function () {
	                        if (res.accum) {
	                            return res.value;
	                        };
	                        if (!res.accum) {
	                            return Data_Array.snoc(res.value)(Data_Functor.map(Data_Maybe.functorMaybe)(v1)(v2(Data_Maybe.Nothing.value)));
	                        };
	                        throw new Error("Failed pattern match at Timeline.Slides line 38, column 5 - line 40, column 55: " + [ res.accum.constructor.name ]);
	                    })();
	                    var props$prime = Data_Array.catMaybes(propMaybes);
	                    return new Halogen_HTML_Core.Element(v3.value0, v3.value1, props$prime, v3.value3);
	                };
	                return v3;
	            };
	        };
	    };
	};
	var transitionProp = function (name) {
	    return function (newProp) {
	        return function (tf) {
	            var go = function (tc) {
	                return Control_Bind.bind(Timeline_Tween.bindTween)(tf)(function (v) {
	                    return Data_Function.apply(Control_Applicative.pure(Timeline_Tween.applicativeTween))(updateProp(name)(newProp)(v)(tc));
	                });
	            };
	            return Data_Functor.map(Timeline_Build.functorTimeline)(Control_Bind.bindFlipped(Timeline_Tween.bindTween)(go));
	        };
	    };
	};
	var hide = function (dir) {
	    return function (i) {
	        var go = function (v) {
	            if (v instanceof Halogen_HTML_Core.Element) {
	                return Control_Bind.bind(Timeline_Tween.bindTween)(Data_Function.apply(Timeline_Tween.tween(i))(function (t$prime) {
	                    if (dir instanceof FadeIn) {
	                        return t$prime;
	                    };
	                    if (dir instanceof FadeOut) {
	                        return 1.0 - t$prime;
	                    };
	                    throw new Error("Failed pattern match at Timeline.Slides line 100, column 27 - line 102, column 26: " + [ dir.constructor.name ]);
	                }))(function (v1) {
	                    var props$prime = (function () {
	                        var $46 = v1 <= 0.0;
	                        if ($46) {
	                            return Data_Array.snoc(v.value2)(Halogen_HTML_Properties.class_(Halogen_HTML_Core.className("hidden")));
	                        };
	                        if (!$46) {
	                            return v.value2;
	                        };
	                        throw new Error("Failed pattern match at Timeline.Slides line 104, column 11 - line 106, column 21: " + [ $46.constructor.name ]);
	                    })();
	                    return Data_Function.apply(Control_Applicative.pure(Timeline_Tween.applicativeTween))(new Halogen_HTML_Core.Element(v.value0, v.value1, props$prime, v.value3));
	                });
	            };
	            return Control_Applicative.pure(Timeline_Tween.applicativeTween)(v);
	        };
	        return Data_Functor.map(Timeline_Build.functorTimeline)(Control_Bind.bindFlipped(Timeline_Tween.bindTween)(go));
	    };
	};
	var hideAfter = hide(FadeOut.value);
	var hideBefore = hide(FadeIn.value);
	var fade = function (d) {
	    return function (i) {
	        var updateOpacity = function (__copy_t) {
	            return function (__copy_v) {
	                var t = __copy_t;
	                var v = __copy_v;
	                tco: while (true) {
	                    if (v instanceof Data_Maybe.Nothing) {
	                        return Data_Function.apply(Data_Maybe.Just.create)((function () {
	                            if (d instanceof FadeIn) {
	                                return t;
	                            };
	                            if (d instanceof FadeOut) {
	                                return 1.0 - t;
	                            };
	                            throw new Error("Failed pattern match at Timeline.Slides line 82, column 5 - line 84, column 25: " + [ d.constructor.name ]);
	                        })());
	                    };
	                    if (v instanceof Data_Maybe.Just) {
	                        var $54 = t > 0.0;
	                        if ($54) {
	                            var __tco_t = t;
	                            t = __tco_t;
	                            v = Data_Maybe.Nothing.value;
	                            continue tco;
	                        };
	                        if (!$54) {
	                            return new Data_Maybe.Just(v.value0);
	                        };
	                        throw new Error("Failed pattern match at Timeline.Slides line 86, column 5 - line 88, column 16: " + [ $54.constructor.name ]);
	                    };
	                    throw new Error("Failed pattern match at Timeline.Slides line 79, column 1 - line 88, column 16: " + [ t.constructor.name, v.constructor.name ]);
	                };
	            };
	        };
	        return transitionProp(Halogen_HTML_Core.propNames([ "style", "opacity" ]))(Halogen_HTML_Styles.opacity)(Timeline_Tween.tween(i)(updateOpacity));
	    };
	};
	var fadeIn = fade(FadeIn.value);
	var fadeOut = fade(FadeOut.value);
	var slides = function (content) {
	    var fadeSlide = function (prevStep) {
	        return function (nextStep) {
	            return function (slideContent) {
	                return Data_Function.apply(fadeOut(nextStep))(Data_Function.apply(hideAfter(nextStep))(Data_Function.apply(fadeIn(prevStep))(Data_Function.apply(hideBefore(prevStep))(Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("slide-background")) ])([ Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("slide")) ])([ Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("slide-content")) ])([ Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(slideContent) ]) ]) ])))));
	            };
	        };
	    };
	    var go = function (getSlideContent) {
	        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Timeline_Build.monadTimeline))(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(Timeline_Build.monadTimeline)(getSlideContent))(function (v) {
	            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Timeline_Build.monadTimeline))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Timeline_Build.monadTimeline)))(function (v1) {
	                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Timeline_Build.monadTimeline))(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(Timeline_Build.monadTimeline)(Timeline_Build.newStep))(function (v2) {
	                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Timeline_Build.monadTimeline))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Timeline_Build.monadTimeline))(v2))(function () {
	                        return Data_Function.apply(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(Timeline_Build.monadTimeline))(fadeSlide(v1)(v2)(v));
	                    });
	                });
	            });
	        });
	    };
	    var getContent$prime = Control_Bind.bind(Timeline_Build.bindTimeline)(Timeline_Build.newStep)(function (v) {
	        return Control_Bind.bind(Timeline_Build.bindTimeline)(Control_Monad_State_Trans.evalStateT(Timeline_Build.functorTimeline)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Timeline_Build.monadTimeline))(go)(content))(v))(function (v1) {
	            return Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Timeline_Tween.applicativeTween)(v1));
	        });
	    });
	    return Control_Bind.bind(Timeline_Build.bindTimeline)(getContent$prime)(function (v) {
	        return Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(Data_Functor.map(Timeline_Tween.functorTween)(Halogen_HTML_Elements_Indexed.div([ Halogen_HTML_Properties_Indexed.class_(Halogen_HTML_Core.className("slide-background")) ]))(v));
	    });
	};
	module.exports = {
	    FadeIn: FadeIn, 
	    FadeOut: FadeOut, 
	    fade: fade, 
	    fadeIn: fadeIn, 
	    fadeOut: fadeOut, 
	    hide: hide, 
	    hideAfter: hideAfter, 
	    hideBefore: hideBefore, 
	    slides: slides, 
	    transitionProp: transitionProp, 
	    updateProp: updateProp
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 296 */
/*!************************************************!*\
  !*** ./src/Halogen/HTML/Elements/Tweened.purs ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Indexed.purs */ 271);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Halogen_HTML = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML.purs */ 272);
	var Halogen_HTML_Elements_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Elements/Indexed.purs */ 274);
	var ttweenNode = function (f) {
	    return function (attrs) {
	        return function (children) {
	            return Control_Bind.bind(Timeline_Build.bindTimeline)(Data_Functor.map(Timeline_Build.functorTimeline)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Timeline_Tween.applicativeTween))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Timeline_Build.applicativeTimeline)(attrs)))(function (v) {
	                return Control_Bind.bind(Timeline_Build.bindTimeline)(Data_Functor.map(Timeline_Build.functorTimeline)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Timeline_Tween.applicativeTween))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Timeline_Build.applicativeTimeline)(children)))(function (v1) {
	                    return Data_Function.apply(Control_Applicative.pure(Timeline_Build.applicativeTimeline))(Control_Apply.apply(Timeline_Tween.applyTween)(Data_Functor.map(Timeline_Tween.functorTween)(f)(v))(v1));
	                });
	            });
	        };
	    };
	};
	var text = function ($4) {
	    return Control_Applicative.pure(Timeline_Build.applicativeTimeline)(Control_Applicative.pure(Timeline_Tween.applicativeTween)(Halogen_HTML.text($4)));
	};
	var span = ttweenNode(Halogen_HTML_Elements_Indexed.span);
	var p = ttweenNode(Halogen_HTML_Elements_Indexed.p);
	var div = ttweenNode(Halogen_HTML_Elements_Indexed.div);
	module.exports = {
	    div: div, 
	    p: p, 
	    span: span, 
	    text: text, 
	    ttweenNode: ttweenNode
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 297 */
/*!**********************************************!*\
  !*** ./src/Halogen/HTML/Styles/Indexed.purs ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML_Styles = __webpack_require__(/*! ./src/Halogen/HTML/Styles.purs */ 298);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Properties_Indexed_Internal = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Indexed/Internal.purs */ 300);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var style = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_HTML_Styles.style);
	var opacity = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_HTML_Styles.opacity);
	var backgroundColor = function (dictIsColor) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_HTML_Styles.backgroundColor(dictIsColor));
	};
	module.exports = {
	    backgroundColor: backgroundColor, 
	    opacity: opacity, 
	    style: style
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 298 */
/*!**************************************!*\
  !*** ./src/Halogen/HTML/Styles.purs ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var width = Halogen_HTML_Core.prop(Halogen_HTML_Core.numberIsProp)(Halogen_HTML_Core.propNames([ "style", "width" ]))(Data_Maybe.Nothing.value);
	var visibility = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propNames([ "style", "visibility" ]))(Data_Maybe.Nothing.value);
	var style = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propName("style"))(Data_Function.apply(Data_Maybe.Just.create)(Halogen_HTML_Core.attrName("style")));
	var overflow = Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propNames([ "style", "overflow" ]))(Data_Maybe.Nothing.value);
	var opacity = Halogen_HTML_Core.prop(Halogen_HTML_Core.numberIsProp)(Halogen_HTML_Core.propNames([ "style", "opacity" ]))(Data_Maybe.Nothing.value);
	var height = Halogen_HTML_Core.prop(Halogen_HTML_Core.numberIsProp)(Halogen_HTML_Core.propNames([ "style", "height" ]))(Data_Maybe.Nothing.value);
	var colorStyle = function (name) {
	    return function (dictIsColor) {
	        return function ($2) {
	            return Halogen_HTML_Core.prop(Halogen_HTML_Core.stringIsProp)(Halogen_HTML_Core.propNames([ "style", name ]))(Data_Maybe.Nothing.value)(Halogen_CSS_Colors.toColorString(dictIsColor)($2));
	        };
	    };
	};
	var backgroundColor = function (dictIsColor) {
	    return colorStyle("background-color")(dictIsColor);
	};
	module.exports = {
	    backgroundColor: backgroundColor, 
	    colorStyle: colorStyle, 
	    height: height, 
	    opacity: opacity, 
	    overflow: overflow, 
	    style: style, 
	    visibility: visibility, 
	    width: width
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 299 */
/*!*************************************!*\
  !*** ./src/Halogen/CSS/Colors.purs ***!
  \*************************************/
/***/ function(module, exports) {

	"use strict";
	var IsColor = function (toColorString) {
	    this.toColorString = toColorString;
	};
	var toColorString = function (dict) {
	    return dict.toColorString;
	};
	var isColorString = new IsColor(function (s) {
	    return s;
	});
	module.exports = {
	    IsColor: IsColor, 
	    toColorString: toColorString, 
	    isColorString: isColorString
	};


/***/ },
/* 300 */
/*!***********************************************************!*\
  !*** ./src/Halogen/HTML/Properties/Indexed/Internal.purs ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var refine = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    refine: refine
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 301 */
/*!**********************************************!*\
  !*** ./src/Halogen/HTML/Styles/Tweened.purs ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Styles_Indexed = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Indexed.purs */ 297);
	var Halogen_HTML_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Indexed.purs */ 271);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var style = function ($1) {
	    return Control_Applicative.pure(Timeline_Build.applicativeTimeline)(Control_Applicative.pure(Timeline_Tween.applicativeTween)(Halogen_HTML_Styles_Indexed.style($1)));
	};
	var opacity = function ($2) {
	    return Control_Applicative.pure(Timeline_Build.applicativeTimeline)(Control_Applicative.pure(Timeline_Tween.applicativeTween)(Halogen_HTML_Styles_Indexed.opacity($2)));
	};
	var backgroundColor = function (dictIsColor) {
	    return function ($3) {
	        return Control_Applicative.pure(Timeline_Build.applicativeTimeline)(Control_Applicative.pure(Timeline_Tween.applicativeTween)(Halogen_HTML_Styles_Indexed.backgroundColor(dictIsColor)($3)));
	    };
	};
	module.exports = {
	    backgroundColor: backgroundColor, 
	    opacity: opacity, 
	    style: style
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 302 */
/*!*************************!*\
  !*** ./src/Slides.purs ***!
  \*************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Slides_Title = __webpack_require__(/*! ./src/Slides/Title.purs */ 303);
	var Pokeball = __webpack_require__(/*! ./src/Pokeball.purs */ 305);
	var Slides_Util = __webpack_require__(/*! ./src/Slides/Util.purs */ 304);
	var slides = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Slides_Title.slides)([ Pokeball.pokeball ]);
	module.exports = {
	    slides: slides
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 303 */
/*!*******************************!*\
  !*** ./src/Slides/Title.purs ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Slides_Util = __webpack_require__(/*! ./src/Slides/Util.purs */ 304);
	var Halogen_HTML_Elements_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Elements/Tweened.purs */ 296);
	var Halogen_HTML_Properties_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Tweened.purs */ 275);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var titleSlide = Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("title-slide")) ]);
	var title = function (s) {
	    return Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("talk-title")) ])([ Halogen_HTML_Elements_Tweened.text(s) ]);
	};
	var speaker = function (s) {
	    return Halogen_HTML_Elements_Tweened.span([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("speaker")) ])([ Halogen_HTML_Elements_Tweened.text(s) ]);
	};
	var instituteRef = function (s) {
	    return Halogen_HTML_Elements_Tweened.span([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("institute-ref")) ])([ Halogen_HTML_Elements_Tweened.text(s) ]);
	};
	var institute = function (ref) {
	    return function (inst) {
	        return Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("institute")) ])([ instituteRef(ref), Halogen_HTML_Elements_Tweened.text(inst) ]);
	    };
	};
	var conference = function (s) {
	    return Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("institute")) ])([ Halogen_HTML_Elements_Tweened.text(s) ]);
	};
	var authors = Halogen_HTML_Elements_Tweened.div([ Halogen_HTML_Properties_Tweened.class_(Halogen_HTML_Core.className("author")) ]);
	var slides = [ titleSlide([ title("Recognizing Frame Matroids"), authors([ Halogen_HTML_Elements_Tweened.text("R. Chen"), instituteRef("1"), Halogen_HTML_Elements_Tweened.text("\u2001J. Geelen"), instituteRef("2"), Halogen_HTML_Elements_Tweened.text("\u2001"), speaker("B. Joeris"), instituteRef("2"), Halogen_HTML_Elements_Tweened.text("\u2001P. Nelson"), instituteRef("2") ]), institute("1")("Fuzhou University"), institute("2")("University of Waterloo"), conference("2016 Workshop on Graphs and Matroids") ]) ];
	module.exports = {
	    slides: slides
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 304 */
/*!******************************!*\
  !*** ./src/Slides/Util.purs ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML.purs */ 272);
	var Halogen_HTML_Elements_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Elements/Tweened.purs */ 296);
	var Halogen_HTML_Properties_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Tweened.purs */ 275);
	var Halogen_HTML_Styles_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Tweened.purs */ 301);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	module.exports = {};
	//# sourceMappingURL=index.js.map


/***/ },
/* 305 */
/*!***************************!*\
  !*** ./src/Pokeball.purs ***!
  \***************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Time_Duration = __webpack_require__(/*! ./bower_components/purescript-datetime/src/Data/Time/Duration.purs */ 278);
	var Halogen_HTML = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML.purs */ 272);
	var Halogen_CSS_Units = __webpack_require__(/*! ./src/Halogen/CSS/Units.purs */ 306);
	var Halogen_SVG_Elements_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Elements/Indexed.purs */ 307);
	var Halogen_SVG_Properties_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Properties/Indexed.purs */ 309);
	var Halogen_SVG_Elements_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Elements/Indexed.purs */ 307);
	var Halogen_SVG_Elements_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Elements/Indexed.purs */ 307);
	var Halogen_SVG_Properties_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Properties/Indexed.purs */ 309);
	var Halogen_SVG_Properties_Indexed_2 = __webpack_require__(/*! ./src/Halogen/SVG/Properties/Indexed.purs */ 309);
	var Halogen_HTML_Styles_Indexed = __webpack_require__(/*! ./src/Halogen/HTML/Styles/Indexed.purs */ 297);
	var Halogen_HTML_Properties_Tweened = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Tweened.purs */ 275);
	var Halogen_SVG_Properties = __webpack_require__(/*! ./src/Halogen/SVG/Properties.purs */ 310);
	var Timeline_Build = __webpack_require__(/*! ./src/Timeline/Build.purs */ 277);
	var Timeline_Tween_1 = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var Timeline_Compile = __webpack_require__(/*! ./src/Timeline/Compile.purs */ 292);
	var Timeline_Run = __webpack_require__(/*! ./src/Timeline/Run.purs */ 294);
	var Timeline_Tween_1 = __webpack_require__(/*! ./src/Timeline/Tween.purs */ 276);
	var D3_Geo_1 = __webpack_require__(/*! ./src/D3/Geo.purs */ 312);
	var D3_Geo_1 = __webpack_require__(/*! ./src/D3/Geo.purs */ 312);
	var $$Math = __webpack_require__(/*! ./bower_components/purescript-math/src/Math.purs */ 155);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Ring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ring.purs */ 65);
	var Data_Semiring = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semiring.purs */ 67);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_EuclideanRing = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/EuclideanRing.purs */ 70);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var pokeball = (function () {
	    var width = Data_Function.applyFlipped(50.0)(Halogen_CSS_Units.rem);
	    var rotation = D3_Geo_1.rotation(-15.0)(100.0)(0.0);
	    var projection = Data_Function.applyFlipped(Data_Function.applyFlipped(Data_Function.applyFlipped(Data_Function.applyFlipped(D3_Geo_1.geoOrthographic)(D3_Geo_1.translate(D3_Geo_1.coord(0.0)(0.0))))(D3_Geo_1.scale(0.95)))(D3_Geo_1.clipAngle(new Data_Maybe.Just(90.0))))(D3_Geo_1.rotate(rotation));
	    var pathGen = D3_Geo_1.pathString(Data_Function.applyFlipped(D3_Geo_1.geoPath)(D3_Geo_1.projection(new Data_Maybe.Just(projection))));
	    var sphere = Data_Function.apply(pathGen)(D3_Geo_1.Sphere.value);
	    var height = Data_Function.applyFlipped(50.0)(Halogen_CSS_Units.rem);
	    var vertex1Center = D3_Geo_1.coord(90.0)(-90.0 + 15.0);
	    var vertex2Center = D3_Geo_1.coord(-90.0)(-90.0 + 15.0);
	    var vertex3Center = D3_Geo_1.coord(0.0)(-90.0 + 15.0);
	    var backProjection = Data_Function.applyFlipped(projection)(D3_Geo_1.clipAngle(new Data_Maybe.Just(180.0)));
	    var backPathGen = D3_Geo_1.pathString(Data_Function.applyFlipped(D3_Geo_1.geoPath)(D3_Geo_1.projection(new Data_Maybe.Just(backProjection))));
	    var pokeball$prime = function (i0) {
	        return function (i1) {
	            return function (i2) {
	                return function (i3) {
	                    return function (i4) {
	                        return Control_Bind.bind(Timeline_Tween_1.bindTween)(Timeline_Tween_1.tween(i0)(function (t) {
	                            return t;
	                        }))(function (v) {
	                            return Control_Bind.bind(Timeline_Tween_1.bindTween)(Timeline_Tween_1.tween(i1)(function (t) {
	                                return t;
	                            }))(function (v1) {
	                                return Control_Bind.bind(Timeline_Tween_1.bindTween)(Timeline_Tween_1.tween(i2)(function (t) {
	                                    return t;
	                                }))(function (v2) {
	                                    return Control_Bind.bind(Timeline_Tween_1.bindTween)(Timeline_Tween_1.tween(i3)(function (t) {
	                                        return t;
	                                    }))(function (v3) {
	                                        return Control_Bind.bind(Timeline_Tween_1.bindTween)(Timeline_Tween_1.tween(i4)(function (t) {
	                                            return t;
	                                        }))(function (v4) {
	                                            var path2 = Data_Function.apply(pathGen)(D3_Geo_1.geoCircle(D3_Geo_1.coord(0.0)(-90.0))(15.0));
	                                            var lowlight = Data_Function.apply(pathGen)(D3_Geo_1.geoCircle(D3_Geo_1.coord(-10.0)(-200.0))(50.0));
	                                            var highlight = Data_Function.apply(pathGen)(D3_Geo_1.geoCircle(D3_Geo_1.coord(-40.0)(-20.0))(20.0));
	                                            var gradientProps = [ Halogen_SVG_Properties_Indexed_2.x1(Halogen_CSS_Units.isLengthNumber)(-0.7), Halogen_SVG_Properties_Indexed_2.y1(Halogen_CSS_Units.isLengthNumber)(-0.7), Halogen_SVG_Properties_Indexed_2.x2(Halogen_CSS_Units.isLengthNumber)(1.2), Halogen_SVG_Properties_Indexed_2.y2(Halogen_CSS_Units.isLengthNumber)(1.2), Halogen_SVG_Properties_Indexed_2.gradientUnits(Halogen_SVG_Properties.userSpaceOnUse) ];
	                                            var face2 = Data_Function.apply(pathGen)(D3_Geo_1.geoCircle(D3_Geo_1.coord(0.0)(-90.0))(15.0));
	                                            var face1CenterY = -70.0 * (1.0 - v4);
	                                            var face1Center = D3_Geo_1.coord(0.0)(face1CenterY);
	                                            var distRad = D3_Geo_1.geoDistance(face1Center)(vertex1Center);
	                                            var distDeg = (distRad * 180.0) / $$Math.pi;
	                                            var face1Geo = D3_Geo_1.geoCircle(face1Center)(distDeg);
	                                            var face1 = pathGen(face1Geo);
	                                            var path1Geo = Data_Function.apply(D3_Geo_1.LineString.create)((function () {
	                                                if (face1Geo instanceof D3_Geo_1.Polygon) {
	                                                    return Data_Function.applyFlipped(Data_Array.index(face1Geo.value0)(0))(Data_Maybe.fromMaybe([  ]));
	                                                };
	                                                return [  ];
	                                            })());
	                                            var path1 = pathGen(path1Geo);
	                                            var vertex4Center = D3_Geo_1.coord(0.0)(face1CenterY + distDeg);
	                                            var path3 = Data_Function.apply(pathGen)(new D3_Geo_1.LineString([ vertex3Center, vertex4Center ]));
	                                            var vertexPaths = Data_Functor.map(Data_Functor.functorArray)(function (v5) {
	                                                return Halogen_SVG_Elements_Indexed_2.path([ Data_Function.apply(Halogen_SVG_Properties_Indexed_2.d)(Data_Function.apply(pathGen)(D3_Geo_1.geoCircle(v5)(6.0))), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("black"), Halogen_SVG_Properties_Indexed_2.stroke(Halogen_CSS_Colors.isColorString)("url(#white-gradient)"), Halogen_SVG_Properties_Indexed_2.strokeWidth(Halogen_CSS_Units.isLengthNumber)(4.0e-2 / 4.0) ])([  ]);
	                                            })([ vertex1Center, vertex2Center, vertex3Center, vertex4Center ]);
	                                            var backPath1 = backPathGen(path1Geo);
	                                            return Data_Function.apply(Control_Applicative.pure(Timeline_Tween_1.applicativeTween))(Halogen_SVG_Elements_Indexed_2.svg([ Halogen_SVG_Properties_Indexed_2.width(Halogen_CSS_Units.isUnitIsLength(Halogen_CSS_Units.isUnitRem))(width), Halogen_SVG_Properties_Indexed_2.height(Halogen_CSS_Units.isUnitIsLength(Halogen_CSS_Units.isUnitRem))(height), Halogen_SVG_Properties_Indexed_2.viewBox(-1.0)(-1.0)(2.0)(2.0), Halogen_SVG_Properties_Indexed_2.preserveAspectRatio(Halogen_SVG_Properties.Mid.value)(Halogen_SVG_Properties.Mid.value) ])([ Halogen_SVG_Elements_Indexed_2.defs([  ])([ Halogen_SVG_Elements_Indexed_2.filter([ Halogen_SVG_Properties_Indexed_2.id("f1"), Halogen_SVG_Properties_Indexed_2.x(Halogen_CSS_Units.isLengthNumber)(0.0), Halogen_SVG_Properties_Indexed_2.y(Halogen_CSS_Units.isLengthNumber)(0.0) ])([ Halogen_SVG_Elements_Indexed_2.feGaussianBlur([ Halogen_SVG_Properties_Indexed_2.in_("SourceGraphic"), Halogen_SVG_Properties_Indexed_2.stdDeviation(0.1) ])([  ]) ]), Halogen_SVG_Elements_Indexed_2.clipPath([ Halogen_SVG_Properties_Indexed_2.id("clip-sphere") ])([ Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(sphere) ])([  ]) ]), Halogen_SVG_Elements_Indexed_2.linearGradient(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_SVG_Properties_Indexed_2.id("red-gradient") ])(gradientProps))([ Halogen_SVG_Elements_Indexed_2.stop([ Halogen_SVG_Properties_Indexed_2.offset(0.0), Halogen_SVG_Properties_Indexed_2.stopColor(Halogen_CSS_Colors.isColorString)("#ff3a37") ])([  ]), Halogen_SVG_Elements_Indexed_2.stop([ Halogen_SVG_Properties_Indexed_2.offset(1.0), Halogen_SVG_Properties_Indexed_2.stopColor(Halogen_CSS_Colors.isColorString)("#501010") ])([  ]) ]), Halogen_SVG_Elements_Indexed_2.linearGradient(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_SVG_Properties_Indexed_2.id("white-gradient") ])(gradientProps))([ Halogen_SVG_Elements_Indexed_2.stop([ Halogen_SVG_Properties_Indexed_2.offset(0.0), Halogen_SVG_Properties_Indexed_2.stopColor(Halogen_CSS_Colors.isColorString)("#f8f8f8") ])([  ]), Halogen_SVG_Elements_Indexed_2.stop([ Halogen_SVG_Properties_Indexed_2.offset(1.0), Halogen_SVG_Properties_Indexed_2.stopColor(Halogen_CSS_Colors.isColorString)("#909090") ])([  ]) ]) ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(sphere), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#white-gradient)") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(sphere), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#red-gradient)"), Halogen_HTML_Styles_Indexed.opacity(v2 - v3) ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(face1), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#white-gradient)") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(face1), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#red-gradient)"), Halogen_HTML_Styles_Indexed.opacity(v3) ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(backPath1), Halogen_SVG_Properties_Indexed_2.stroke(Halogen_CSS_Colors.isColorString)("black"), Halogen_SVG_Properties_Indexed_2.strokeWidth(Halogen_CSS_Units.isLengthNumber)(5.0e-3), Halogen_HTML_Styles_Indexed.opacity(0.3), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("none") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(path1), Halogen_SVG_Properties_Indexed_2.stroke(Halogen_CSS_Colors.isColorString)("black"), Halogen_SVG_Properties_Indexed_2.strokeWidth(Halogen_CSS_Units.isLengthNumber)(4.0e-2), Halogen_SVG_Properties_Indexed_2.strokeLinecap(Halogen_SVG_Properties.round(Halogen_SVG_Properties.isRoundLinecap)), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("none") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(face2), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#white-gradient)") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(face2), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("url(#red-gradient)"), Halogen_HTML_Styles_Indexed.opacity(v1 - v2) ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(path2), Halogen_SVG_Properties_Indexed_2.stroke(Halogen_CSS_Colors.isColorString)("black"), Halogen_SVG_Properties_Indexed_2.strokeWidth(Halogen_CSS_Units.isLengthNumber)(4.0e-2), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("none") ])([  ]), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(path3), Halogen_SVG_Properties_Indexed_2.stroke(Halogen_CSS_Colors.isColorString)("black"), Halogen_SVG_Properties_Indexed_2.strokeWidth(Halogen_CSS_Units.isLengthNumber)(4.0e-2), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("none"), Halogen_HTML_Styles_Indexed.opacity(1.0 - v) ])([  ]), Halogen_SVG_Elements_Indexed_2.g([ Halogen_HTML_Styles_Indexed.opacity(1.0 - v4) ])(vertexPaths), Halogen_SVG_Elements_Indexed_2.path([ Halogen_SVG_Properties_Indexed_2.d(highlight), Halogen_SVG_Properties_Indexed_2.fill(Halogen_CSS_Colors.isColorString)("white"), Halogen_HTML_Styles_Indexed.opacity(0.9), Halogen_SVG_Properties_Indexed_2.filter("url(#f1)"), Halogen_SVG_Properties_Indexed_2.clipPath("url(#clip-sphere)") ])([  ]) ]));
	                                        });
	                                    });
	                                });
	                            });
	                        });
	                    };
	                };
	            };
	        };
	    };
	    return Control_Apply.apply(Timeline_Build.applyTimeline)(Control_Apply.apply(Timeline_Build.applyTimeline)(Control_Apply.apply(Timeline_Build.applyTimeline)(Control_Apply.apply(Timeline_Build.applyTimeline)(Data_Functor.map(Timeline_Build.functorTimeline)(pokeball$prime)(Timeline_Build.newStep))(Timeline_Build.newStep))(Timeline_Build.newStep))(Timeline_Build.newStep))(Timeline_Build["newStep'"](Data_Time_Duration.durationSeconds)(Timeline_Build.StepEnd.value)(1.0));
	})();
	module.exports = {
	    pokeball: pokeball
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 306 */
/*!************************************!*\
  !*** ./src/Halogen/CSS/Units.purs ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var UnitSuffix = function (x) {
	    return x;
	};
	var Length = (function () {
	    function Length(value0) {
	        this.value0 = value0;
	    };
	    Length.create = function (value0) {
	        return new Length(value0);
	    };
	    return Length;
	})();
	var IsUnit = function (unitSuffix) {
	    this.unitSuffix = unitSuffix;
	};
	var IsLength = function (toLengthString) {
	    this.toLengthString = toLengthString;
	};
	var unitSuffix = function (dict) {
	    return dict.unitSuffix;
	};
	var unUnitSuffix = function (v) {
	    return v;
	};
	var toLengthString = function (dict) {
	    return dict.toLengthString;
	};
	var rem = Length.create;
	var px = Length.create;
	var isUnitRem = new IsUnit("rem");
	var isUnitPx = new IsUnit("px");
	var isUnitIsLength = function (dictIsUnit) {
	    return new IsLength(function (v) {
	        return Data_Show.show(Data_Show.showNumber)(v.value0) + unUnitSuffix(unitSuffix(dictIsUnit));
	    });
	};
	var isUnitEm = new IsUnit("em");
	var isLengthNumber = new IsLength(Data_Show.show(Data_Show.showNumber));
	var em = Length.create;
	module.exports = {
	    Length: Length, 
	    UnitSuffix: UnitSuffix, 
	    IsLength: IsLength, 
	    IsUnit: IsUnit, 
	    em: em, 
	    px: px, 
	    rem: rem, 
	    toLengthString: toLengthString, 
	    unUnitSuffix: unUnitSuffix, 
	    unitSuffix: unitSuffix, 
	    isUnitEm: isUnitEm, 
	    isUnitRem: isUnitRem, 
	    isUnitPx: isUnitPx, 
	    isLengthNumber: isLengthNumber, 
	    isUnitIsLength: isUnitIsLength
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 307 */
/*!***********************************************!*\
  !*** ./src/Halogen/SVG/Elements/Indexed.purs ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML_Elements_Indexed_Internal = __webpack_require__(/*! ./src/Halogen/HTML/Elements/Indexed/Internal.purs */ 308);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_SVG_Properties_Indexed = __webpack_require__(/*! ./src/Halogen/SVG/Properties/Indexed.purs */ 309);
	var Halogen_SVG_Elements_1 = __webpack_require__(/*! ./src/Halogen/SVG/Elements.purs */ 311);
	var Halogen_SVG_Elements_1 = __webpack_require__(/*! ./src/Halogen/SVG/Elements.purs */ 311);
	var svg = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.svg);
	var stop = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.stop);
	var path = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.path);
	var linearGradient = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.linearGradient);
	var g = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.g);
	var filter = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.filter);
	var feGaussianBlur = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.feGaussianBlur);
	var defs = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.defs);
	var clipPath = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.clipPath);
	var circle = Halogen_HTML_Elements_Indexed_Internal.refine(Halogen_SVG_Elements_1.circle);
	module.exports = {
	    circle: circle, 
	    clipPath: clipPath, 
	    defs: defs, 
	    feGaussianBlur: feGaussianBlur, 
	    filter: filter, 
	    g: g, 
	    linearGradient: linearGradient, 
	    path: path, 
	    stop: stop, 
	    svg: svg
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 308 */
/*!*********************************************************!*\
  !*** ./src/Halogen/HTML/Elements/Indexed/Internal.purs ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var refine = Unsafe_Coerce.unsafeCoerce;
	module.exports = {
	    refine: refine
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 309 */
/*!*************************************************!*\
  !*** ./src/Halogen/SVG/Properties/Indexed.purs ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Halogen_HTML_Properties_Indexed = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Properties/Indexed.purs */ 269);
	var Halogen_HTML_Properties_Indexed_Internal = __webpack_require__(/*! ./src/Halogen/HTML/Properties/Indexed/Internal.purs */ 300);
	var Halogen_SVG_Properties = __webpack_require__(/*! ./src/Halogen/SVG/Properties.purs */ 310);
	var Halogen_CSS_Units = __webpack_require__(/*! ./src/Halogen/CSS/Units.purs */ 306);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var Unsafe_Coerce = __webpack_require__(/*! ./bower_components/purescript-unsafe-coerce/src/Unsafe/Coerce.purs */ 141);
	var y2 = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.y2(dictIsLength));
	};
	var y1 = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.y1(dictIsLength));
	};
	var y = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.y(dictIsLength));
	};
	var x2 = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.x2(dictIsLength));
	};
	var x1 = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.x1(dictIsLength));
	};
	var x = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.x(dictIsLength));
	};
	var width = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.width(dictIsLength));
	};
	var viewBox = Unsafe_Coerce.unsafeCoerce(Halogen_SVG_Properties.viewBox);
	var strokeWidth = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.strokeWidth(dictIsLength));
	};
	var strokeLinejoin = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.strokeLinejoin);
	var strokeLinecap = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.strokeLinecap);
	var stroke = function (dictIsColor) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.stroke(dictIsColor));
	};
	var stopColor = function (dictIsColor) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.stopColor(dictIsColor));
	};
	var stdDeviation = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.stdDeviation);
	var r = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.r(dictIsLength));
	};
	var preserveAspectRatio = Unsafe_Coerce.unsafeCoerce(Halogen_SVG_Properties.preserveAspectRatio);
	var offset = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.offset);
	var in_ = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.in_);
	var id = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.id);
	var height = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.height(dictIsLength));
	};
	var gradientUnits = Unsafe_Coerce.unsafeCoerce(Halogen_SVG_Properties.gradientUnits);
	var filter = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.filter);
	var fill = function (dictIsColor) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.fill(dictIsColor));
	};
	var d = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.d);
	var cy = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.cy(dictIsLength));
	};
	var cx = function (dictIsLength) {
	    return Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.cx(dictIsLength));
	};
	var clipPath = Halogen_HTML_Properties_Indexed_Internal.refine(Halogen_SVG_Properties.clipPath);
	module.exports = {
	    clipPath: clipPath, 
	    cx: cx, 
	    cy: cy, 
	    d: d, 
	    fill: fill, 
	    filter: filter, 
	    gradientUnits: gradientUnits, 
	    height: height, 
	    id: id, 
	    in_: in_, 
	    offset: offset, 
	    preserveAspectRatio: preserveAspectRatio, 
	    r: r, 
	    stdDeviation: stdDeviation, 
	    stopColor: stopColor, 
	    stroke: stroke, 
	    strokeLinecap: strokeLinecap, 
	    strokeLinejoin: strokeLinejoin, 
	    strokeWidth: strokeWidth, 
	    viewBox: viewBox, 
	    width: width, 
	    x: x, 
	    x1: x1, 
	    x2: x2, 
	    y: y, 
	    y1: y1, 
	    y2: y2
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 310 */
/*!*****************************************!*\
  !*** ./src/Halogen/SVG/Properties.purs ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Exists = __webpack_require__(/*! ./bower_components/purescript-exists/src/Data/Exists.purs */ 188);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Halogen_SVG_Elements = __webpack_require__(/*! ./src/Halogen/SVG/Elements.purs */ 311);
	var Halogen_CSS_Units = __webpack_require__(/*! ./src/Halogen/CSS/Units.purs */ 306);
	var Halogen_CSS_Colors = __webpack_require__(/*! ./src/Halogen/CSS/Colors.purs */ 299);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Min = (function () {
	    function Min() {
	
	    };
	    Min.value = new Min();
	    return Min;
	})();
	var Mid = (function () {
	    function Mid() {
	
	    };
	    Mid.value = new Mid();
	    return Mid;
	})();
	var Max = (function () {
	    function Max() {
	
	    };
	    Max.value = new Max();
	    return Max;
	})();
	var LinejoinMiter = (function () {
	    function LinejoinMiter() {
	
	    };
	    LinejoinMiter.value = new LinejoinMiter();
	    return LinejoinMiter;
	})();
	var LinejoinRound = (function () {
	    function LinejoinRound() {
	
	    };
	    LinejoinRound.value = new LinejoinRound();
	    return LinejoinRound;
	})();
	var LinejoinBevel = (function () {
	    function LinejoinBevel() {
	
	    };
	    LinejoinBevel.value = new LinejoinBevel();
	    return LinejoinBevel;
	})();
	var LinecapButt = (function () {
	    function LinecapButt() {
	
	    };
	    LinecapButt.value = new LinecapButt();
	    return LinecapButt;
	})();
	var LinecapRound = (function () {
	    function LinecapRound() {
	
	    };
	    LinecapRound.value = new LinecapRound();
	    return LinecapRound;
	})();
	var LinecapSquare = (function () {
	    function LinecapSquare() {
	
	    };
	    LinecapSquare.value = new LinecapSquare();
	    return LinecapSquare;
	})();
	var UserSpaceOnUse = (function () {
	    function UserSpaceOnUse() {
	
	    };
	    UserSpaceOnUse.value = new UserSpaceOnUse();
	    return UserSpaceOnUse;
	})();
	var ObjectBoundingBox = (function () {
	    function ObjectBoundingBox() {
	
	    };
	    ObjectBoundingBox.value = new ObjectBoundingBox();
	    return ObjectBoundingBox;
	})();
	var IsRound = function (round) {
	    this.round = round;
	};
	var viewBox = function (x11) {
	    return function (y11) {
	        return function (x21) {
	            return function (y21) {
	                return new Halogen_HTML_Core.Attr(Data_Maybe.Nothing.value, Halogen_HTML_Core.attrName("viewBox"), Data_Show.show(Data_Show.showNumber)(x11) + (" " + (Data_Show.show(Data_Show.showNumber)(y11) + (" " + (Data_Show.show(Data_Show.showNumber)(x21) + (" " + Data_Show.show(Data_Show.showNumber)(y21)))))));
	            };
	        };
	    };
	};
	var userSpaceOnUse = UserSpaceOnUse.value;
	var strokeLinejoin = function (join) {
	    return Data_Function.apply(Halogen_HTML_Core.Attr.create(Data_Maybe.Nothing.value)(Halogen_HTML_Core.attrName("stroke-linejoin")))((function () {
	        if (join instanceof LinejoinMiter) {
	            return "miter";
	        };
	        if (join instanceof LinejoinRound) {
	            return "round";
	        };
	        if (join instanceof LinejoinBevel) {
	            return "bevel";
	        };
	        throw new Error("Failed pattern match at Halogen.SVG.Properties line 132, column 3 - line 137, column 1: " + [ join.constructor.name ]);
	    })());
	};
	var strokeLinecap = function (cap) {
	    return Data_Function.apply(Halogen_HTML_Core.Attr.create(Data_Maybe.Nothing.value)(Halogen_HTML_Core.attrName("stroke-linecap")))((function () {
	        if (cap instanceof LinecapButt) {
	            return "butt";
	        };
	        if (cap instanceof LinecapRound) {
	            return "round";
	        };
	        if (cap instanceof LinecapSquare) {
	            return "square";
	        };
	        throw new Error("Failed pattern match at Halogen.SVG.Properties line 125, column 3 - line 130, column 1: " + [ cap.constructor.name ]);
	    })());
	};
	var square = LinecapSquare.value;
	var round = function (dict) {
	    return dict.round;
	};
	var preserveAspectRatio = function (x3) {
	    return function (y3) {
	        var str = function (v) {
	            if (v instanceof Min) {
	                return "Min";
	            };
	            if (v instanceof Mid) {
	                return "Mid";
	            };
	            if (v instanceof Max) {
	                return "Max";
	            };
	            throw new Error("Failed pattern match at Halogen.SVG.Properties line 156, column 3 - line 157, column 3: " + [ v.constructor.name ]);
	        };
	        return new Halogen_HTML_Core.Attr(Data_Maybe.Nothing.value, Halogen_HTML_Core.attrName("preserveAspectRatio"), "x" + (str(x3) + ("Y" + str(y3))));
	    };
	};
	var objectBoundingBox = ObjectBoundingBox.value;
	var numAttr = function (name) {
	    return function (v) {
	        return new Halogen_HTML_Core.Attr(Data_Maybe.Nothing.value, Halogen_HTML_Core.attrName(name), Data_Show.show(Data_Show.showNumber)(v));
	    };
	};
	var offset = numAttr("offset");
	var stdDeviation = numAttr("stdDeviation");
	var miter = LinejoinMiter.value;
	var lengthAttr = function (dictIsLength) {
	    return function (name) {
	        return function (v) {
	            return new Halogen_HTML_Core.Attr(Data_Maybe.Nothing.value, Halogen_HTML_Core.attrName(name), Halogen_CSS_Units.toLengthString(dictIsLength)(v));
	        };
	    };
	};
	var r = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("r");
	};
	var strokeWidth = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("stroke-width");
	};
	var width = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("width");
	};
	var x = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("x");
	};
	var x1 = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("x1");
	};
	var x2 = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("x2");
	};
	var y = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("y");
	};
	var y1 = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("y1");
	};
	var y2 = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("y2");
	};
	var isRoundLinejoin = new IsRound(LinejoinRound.value);
	var isRoundLinecap = new IsRound(LinecapRound.value);
	var height = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("height");
	};
	var gradientUnits = function (u) {
	    return Data_Function.apply(Halogen_HTML_Core.Attr.create(Data_Maybe.Nothing.value)(Halogen_HTML_Core.attrName("gradientUnits")))((function () {
	        if (u instanceof UserSpaceOnUse) {
	            return "userSpaceOnUse";
	        };
	        if (u instanceof ObjectBoundingBox) {
	            return "objectBoundingBox";
	        };
	        throw new Error("Failed pattern match at Halogen.SVG.Properties line 172, column 3 - line 174, column 26: " + [ u.constructor.name ]);
	    })());
	};
	var cy = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("cy");
	};
	var cx = function (dictIsLength) {
	    return lengthAttr(dictIsLength)("cx");
	};
	var colorAttr = function (dictIsColor) {
	    return function (name) {
	        return function (v) {
	            return new Halogen_HTML_Core.Attr(Data_Maybe.Nothing.value, Halogen_HTML_Core.attrName(name), Halogen_CSS_Colors.toColorString(dictIsColor)(v));
	        };
	    };
	};
	var fill = function (dictIsColor) {
	    return colorAttr(dictIsColor)("fill");
	};
	var stopColor = function (dictIsColor) {
	    return colorAttr(dictIsColor)("stop-color");
	};
	var stroke = function (dictIsColor) {
	    return colorAttr(dictIsColor)("stroke");
	};
	var butt = LinecapButt.value;
	var bevel = LinejoinBevel.value;
	var attr = function ($22) {
	    return Halogen_HTML_Core.Attr.create(Data_Maybe.Nothing.value)(Halogen_HTML_Core.attrName($22));
	};
	var clipPath = attr("clip-path");
	var d = attr("d");
	var filter = attr("filter");
	var id = attr("id");
	var in_ = attr("in");
	module.exports = {
	    UserSpaceOnUse: UserSpaceOnUse, 
	    ObjectBoundingBox: ObjectBoundingBox, 
	    LinecapButt: LinecapButt, 
	    LinecapRound: LinecapRound, 
	    LinecapSquare: LinecapSquare, 
	    LinejoinMiter: LinejoinMiter, 
	    LinejoinRound: LinejoinRound, 
	    LinejoinBevel: LinejoinBevel, 
	    Min: Min, 
	    Mid: Mid, 
	    Max: Max, 
	    IsRound: IsRound, 
	    attr: attr, 
	    bevel: bevel, 
	    butt: butt, 
	    clipPath: clipPath, 
	    colorAttr: colorAttr, 
	    cx: cx, 
	    cy: cy, 
	    d: d, 
	    fill: fill, 
	    filter: filter, 
	    gradientUnits: gradientUnits, 
	    height: height, 
	    id: id, 
	    in_: in_, 
	    lengthAttr: lengthAttr, 
	    miter: miter, 
	    numAttr: numAttr, 
	    objectBoundingBox: objectBoundingBox, 
	    offset: offset, 
	    preserveAspectRatio: preserveAspectRatio, 
	    r: r, 
	    round: round, 
	    square: square, 
	    stdDeviation: stdDeviation, 
	    stopColor: stopColor, 
	    stroke: stroke, 
	    strokeLinecap: strokeLinecap, 
	    strokeLinejoin: strokeLinejoin, 
	    strokeWidth: strokeWidth, 
	    userSpaceOnUse: userSpaceOnUse, 
	    viewBox: viewBox, 
	    width: width, 
	    x: x, 
	    x1: x1, 
	    x2: x2, 
	    y: y, 
	    y1: y1, 
	    y2: y2, 
	    isRoundLinecap: isRoundLinecap, 
	    isRoundLinejoin: isRoundLinejoin
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 311 */
/*!***************************************!*\
  !*** ./src/Halogen/SVG/Elements.purs ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Halogen_HTML_Core = __webpack_require__(/*! ./lib/purescript-halogen/src/Halogen/HTML/Core.purs */ 216);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var svgNS = Halogen_HTML_Core.namespace("http://www.w3.org/2000/svg");
	var svg = Data_Function.apply(Halogen_HTML_Core.Element.create(new Data_Maybe.Just(svgNS)))(Halogen_HTML_Core.tagName("svg"));
	var element = function ($0) {
	    return Halogen_HTML_Core.Element.create(new Data_Maybe.Just(svgNS))(Halogen_HTML_Core.tagName($0));
	};
	var feGaussianBlur = element("feGaussianBlur");
	var filter = element("filter");
	var g = element("g");
	var linearGradient = element("linearGradient");
	var path = element("path");
	var stop = element("stop");
	var defs = element("defs");
	var clipPath = element("clipPath");
	var circle = element("circle");
	module.exports = {
	    circle: circle, 
	    clipPath: clipPath, 
	    defs: defs, 
	    element: element, 
	    feGaussianBlur: feGaussianBlur, 
	    filter: filter, 
	    g: g, 
	    linearGradient: linearGradient, 
	    path: path, 
	    stop: stop, 
	    svg: svg, 
	    svgNS: svgNS
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 312 */
/*!*************************!*\
  !*** ./src/D3/Geo.purs ***!
  \*************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./src/D3/Geo.js */ 313);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Class = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Class.purs */ 161);
	var Data_Either_1 = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foreign_Generic_1 = __webpack_require__(/*! ./bower_components/purescript-foreign-generic/src/Data/Foreign/Generic.purs */ 315);
	var Data_Foreign_Generic_1 = __webpack_require__(/*! ./bower_components/purescript-foreign-generic/src/Data/Foreign/Generic.purs */ 315);
	var Data_Generic = __webpack_require__(/*! ./bower_components/purescript-generics/src/Data/Generic.purs */ 182);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var $$Math = __webpack_require__(/*! ./bower_components/purescript-math/src/Math.purs */ 155);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Partial_Unsafe = __webpack_require__(/*! ./bower_components/purescript-partial/src/Partial/Unsafe.purs */ 120);
	var Data_Either_1 = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Foreign_Index = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Index.purs */ 166);
	var Rotation = function (x) {
	    return x;
	};
	var Extent = function (x) {
	    return x;
	};
	var Coord = function (x) {
	    return x;
	};
	var Point = (function () {
	    function Point(value0) {
	        this.value0 = value0;
	    };
	    Point.create = function (value0) {
	        return new Point(value0);
	    };
	    return Point;
	})();
	var LineString = (function () {
	    function LineString(value0) {
	        this.value0 = value0;
	    };
	    LineString.create = function (value0) {
	        return new LineString(value0);
	    };
	    return LineString;
	})();
	var Polygon = (function () {
	    function Polygon(value0) {
	        this.value0 = value0;
	    };
	    Polygon.create = function (value0) {
	        return new Polygon(value0);
	    };
	    return Polygon;
	})();
	var MultiPoint = (function () {
	    function MultiPoint(value0) {
	        this.value0 = value0;
	    };
	    MultiPoint.create = function (value0) {
	        return new MultiPoint(value0);
	    };
	    return MultiPoint;
	})();
	var MultiLineString = (function () {
	    function MultiLineString(value0) {
	        this.value0 = value0;
	    };
	    MultiLineString.create = function (value0) {
	        return new MultiLineString(value0);
	    };
	    return MultiLineString;
	})();
	var MultiPolygon = (function () {
	    function MultiPolygon(value0) {
	        this.value0 = value0;
	    };
	    MultiPolygon.create = function (value0) {
	        return new MultiPolygon(value0);
	    };
	    return MultiPolygon;
	})();
	var Sphere = (function () {
	    function Sphere() {
	
	    };
	    Sphere.value = new Sphere();
	    return Sphere;
	})();
	var rotationGeneric = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.Rotation" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Rotation))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericNumber))(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("D3.Geo.Rotation", [ {
	        sigConstructor: "D3.Geo.Rotation", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericNumber))(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("D3.Geo.Rotation", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericNumber))(v);
	    } ]);
	});
	var rotation = function (lambda) {
	    return function (phi) {
	        return function (gamma) {
	            return [ lambda, phi, gamma ];
	        };
	    };
	};
	var projection = function ($76) {
	    return $foreign.projectionImpl(Data_Nullable.toNullable($76));
	};
	var geometryToForeign = function (g) {
	    var $$export = function (t) {
	        return function (c) {
	            return Data_Foreign.toForeign({
	                type: t, 
	                coordinates: c
	            });
	        };
	    };
	    if (g instanceof Point) {
	        return $$export("Point")(g.value0);
	    };
	    if (g instanceof LineString) {
	        return $$export("LineString")(g.value0);
	    };
	    if (g instanceof Polygon) {
	        return $$export("Polygon")(g.value0);
	    };
	    if (g instanceof MultiPoint) {
	        return $$export("MultiPoint")(g.value0);
	    };
	    if (g instanceof MultiLineString) {
	        return $$export("MultiLineString")(g.value0);
	    };
	    if (g instanceof MultiPolygon) {
	        return $$export("MultiPolygon")(g.value0);
	    };
	    if (g instanceof Sphere) {
	        return Data_Foreign.toForeign({
	            type: "Sphere"
	        });
	    };
	    throw new Error("Failed pattern match at D3.Geo line 60, column 23 - line 67, column 42: " + [ g.constructor.name ]);
	};
	var pathString = function (path) {
	    return function ($77) {
	        return $foreign.pathStringImpl(path)(geometryToForeign($77));
	    };
	};
	var foreignOptions = (function () {
	    var $37 = {};
	    for (var $38 in Data_Foreign_Generic_1.defaultOptions) {
	        if (Data_Foreign_Generic_1.defaultOptions.hasOwnProperty($38)) {
	            $37[$38] = Data_Foreign_Generic_1.defaultOptions[$38];
	        };
	    };
	    $37.sumEncoding = new Data_Foreign_Generic_1.TaggedObject({
	        tagFieldName: "type", 
	        contentsFieldName: "coordinates"
	    });
	    $37.unwrapNewtypes = true;
	    return $37;
	})();
	var rotationIsForeign = new Data_Foreign_Class.IsForeign(Data_Foreign_Generic_1.readGeneric(rotationGeneric)(foreignOptions));
	var extent = function (left) {
	    return function (top) {
	        return function (right) {
	            return function (bottom) {
	                return [ [ left, top ], [ right, bottom ] ];
	            };
	        };
	    };
	};
	var coordGeneric = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.Coord" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Coord))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericNumber))(v.value1[0](Data_Unit.unit)));
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("D3.Geo.Coord", [ {
	        sigConstructor: "D3.Geo.Coord", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericNumber))(Data_Generic.anyProxy);
	        } ]
	    } ]);
	}, function (v) {
	    return new Data_Generic.SProd("D3.Geo.Coord", [ function ($dollarq) {
	        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericNumber))(v);
	    } ]);
	});
	var coordIsForeign = new Data_Foreign_Class.IsForeign(Data_Foreign_Generic_1.readGeneric(coordGeneric)(foreignOptions));
	var geometryIsForeign = new Data_Foreign_Class.IsForeign(function (value) {
	    return Control_Bind.bind(Data_Either_1.bindEither)(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("type")(value))(function (v) {
	        var coords = function (dictIsForeign) {
	            return Data_Foreign_Class.readProp(dictIsForeign)(Data_Foreign_Index.indexString)("coordinates")(value);
	        };
	        if (v === "Point") {
	            return Data_Functor.map(Data_Either_1.functorEither)(Point.create)(coords(coordIsForeign));
	        };
	        if (v === "LineString") {
	            return Data_Functor.map(Data_Either_1.functorEither)(LineString.create)(coords(Data_Foreign_Class.arrayIsForeign(coordIsForeign)));
	        };
	        if (v === "Polygon") {
	            return Data_Functor.map(Data_Either_1.functorEither)(Polygon.create)(coords(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.arrayIsForeign(coordIsForeign))));
	        };
	        if (v === "MultiPoint") {
	            return Data_Functor.map(Data_Either_1.functorEither)(MultiPoint.create)(coords(Data_Foreign_Class.arrayIsForeign(coordIsForeign)));
	        };
	        if (v === "MultiLineString") {
	            return Data_Functor.map(Data_Either_1.functorEither)(MultiLineString.create)(coords(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.arrayIsForeign(coordIsForeign))));
	        };
	        if (v === "MuiltyPolygon") {
	            return Data_Functor.map(Data_Either_1.functorEither)(MultiPolygon.create)(coords(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.arrayIsForeign(coordIsForeign)))));
	        };
	        if (v === "Sphere") {
	            return Control_Applicative.pure(Data_Either_1.applicativeEither)(Sphere.value);
	        };
	        return Data_Function.apply(Data_Either_1.Left.create)(Data_Function.apply(Data_Foreign.JSONError.create)("Invalid geometry type '" + (v + "'.")));
	    });
	});
	var geoCircle$prime = function (props) {
	    return Data_Function.applyFlipped(Data_Function.applyFlipped($foreign.geoCircleImpl(props))(Data_Foreign_Class.read(geometryIsForeign)))(Partial_Unsafe.unsafePartial(function (dictPartial) {
	        return Data_Either_1.fromRight(dictPartial);
	    }));
	};
	var geometryGeneric = new Data_Generic.Generic(function (v) {
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.Point" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Point.create))(Data_Generic.fromSpine(coordGeneric)(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.LineString" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(LineString.create))(Data_Generic.fromSpine(Data_Generic.genericArray(coordGeneric))(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.Polygon" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Polygon.create))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.MultiPoint" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MultiPoint.create))(Data_Generic.fromSpine(Data_Generic.genericArray(coordGeneric))(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.MultiLineString" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MultiLineString.create))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.MultiPolygon" && v.value1.length === 1)) {
	        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(MultiPolygon.create))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric))))(v.value1[0](Data_Unit.unit)));
	    };
	    if (v instanceof Data_Generic.SProd && (v.value0 === "D3.Geo.Sphere" && v.value1.length === 0)) {
	        return new Data_Maybe.Just(Sphere.value);
	    };
	    return Data_Maybe.Nothing.value;
	}, function ($dollarq) {
	    return new Data_Generic.SigProd("D3.Geo.Geometry", [ {
	        sigConstructor: "D3.Geo.Point", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(coordGeneric)(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.LineString", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(coordGeneric))(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.Polygon", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.MultiPoint", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(coordGeneric))(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.MultiLineString", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.MultiPolygon", 
	        sigValues: [ function ($dollarq1) {
	            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric))))(Data_Generic.anyProxy);
	        } ]
	    }, {
	        sigConstructor: "D3.Geo.Sphere", 
	        sigValues: [  ]
	    } ]);
	}, function (v) {
	    if (v instanceof Point) {
	        return new Data_Generic.SProd("D3.Geo.Point", [ function ($dollarq) {
	            return Data_Generic.toSpine(coordGeneric)(v.value0);
	        } ]);
	    };
	    if (v instanceof LineString) {
	        return new Data_Generic.SProd("D3.Geo.LineString", [ function ($dollarq) {
	            return Data_Generic.toSpine(Data_Generic.genericArray(coordGeneric))(v.value0);
	        } ]);
	    };
	    if (v instanceof Polygon) {
	        return new Data_Generic.SProd("D3.Geo.Polygon", [ function ($dollarq) {
	            return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(v.value0);
	        } ]);
	    };
	    if (v instanceof MultiPoint) {
	        return new Data_Generic.SProd("D3.Geo.MultiPoint", [ function ($dollarq) {
	            return Data_Generic.toSpine(Data_Generic.genericArray(coordGeneric))(v.value0);
	        } ]);
	    };
	    if (v instanceof MultiLineString) {
	        return new Data_Generic.SProd("D3.Geo.MultiLineString", [ function ($dollarq) {
	            return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric)))(v.value0);
	        } ]);
	    };
	    if (v instanceof MultiPolygon) {
	        return new Data_Generic.SProd("D3.Geo.MultiPolygon", [ function ($dollarq) {
	            return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericArray(Data_Generic.genericArray(coordGeneric))))(v.value0);
	        } ]);
	    };
	    if (v instanceof Sphere) {
	        return new Data_Generic.SProd("D3.Geo.Sphere", [  ]);
	    };
	    throw new Error("Failed pattern match at D3.Geo line 56, column 1 - line 56, column 52: " + [ v.constructor.name ]);
	});
	var coord = function (x) {
	    return function (y) {
	        return [ x, y ];
	    };
	};
	var geoCircleProps = {
	    center: coord(0.0)(0.0), 
	    radius: 90.0, 
	    precision: 6.0
	};
	var geoCircle = function (c) {
	    return function (r) {
	        return geoCircle$prime((function () {
	            var $74 = {};
	            for (var $75 in geoCircleProps) {
	                if (geoCircleProps.hasOwnProperty($75)) {
	                    $74[$75] = geoCircleProps[$75];
	                };
	            };
	            $74.center = c;
	            $74.radius = r;
	            return $74;
	        })());
	    };
	};
	var clipExtent = function ($78) {
	    return $foreign.clipExtentImpl(Data_Nullable.toNullable($78));
	};
	var clipAngle = function ($79) {
	    return $foreign.clipAngleImpl(Data_Nullable.toNullable($79));
	};
	module.exports = {
	    Coord: Coord, 
	    Extent: Extent, 
	    Point: Point, 
	    LineString: LineString, 
	    Polygon: Polygon, 
	    MultiPoint: MultiPoint, 
	    MultiLineString: MultiLineString, 
	    MultiPolygon: MultiPolygon, 
	    Sphere: Sphere, 
	    Rotation: Rotation, 
	    clipAngle: clipAngle, 
	    clipExtent: clipExtent, 
	    coord: coord, 
	    extent: extent, 
	    foreignOptions: foreignOptions, 
	    geoCircle: geoCircle, 
	    "geoCircle'": geoCircle$prime, 
	    geoCircleProps: geoCircleProps, 
	    geometryToForeign: geometryToForeign, 
	    pathString: pathString, 
	    projection: projection, 
	    rotation: rotation, 
	    rotationGeneric: rotationGeneric, 
	    rotationIsForeign: rotationIsForeign, 
	    coordGeneric: coordGeneric, 
	    coordIsForeign: coordIsForeign, 
	    geometryGeneric: geometryGeneric, 
	    geometryIsForeign: geometryIsForeign, 
	    center: $foreign.center, 
	    clipAngleImpl: $foreign.clipAngleImpl, 
	    clipExtentImpl: $foreign.clipExtentImpl, 
	    geoCircleImpl: $foreign.geoCircleImpl, 
	    geoDistance: $foreign.geoDistance, 
	    geoOrthographic: $foreign.geoOrthographic, 
	    geoPath: $foreign.geoPath, 
	    pathStringImpl: $foreign.pathStringImpl, 
	    pointRadius: $foreign.pointRadius, 
	    precision: $foreign.precision, 
	    projectionImpl: $foreign.projectionImpl, 
	    rotate: $foreign.rotate, 
	    scale: $foreign.scale, 
	    translate: $foreign.translate
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 313 */
/*!***********************!*\
  !*** ./src/D3/Geo.js ***!
  \***********************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var d3 = __webpack_require__(/*! d3/d3 */ 314);
	
	exports.geoCircleImpl = function(options) {
	    return d3.geoCircle()
	      .center(options.center)
	      .radius(options.radius)
	      .precision(options.precision)();
	};
	
	exports.geoDistance = function(point1) {
	    return function(point2) {
	        return d3.geoDistance(point1, point2);
	    }
	}
	
	function caching(fn) {
	    return {
	        newValue : fn,
	    }
	}
	
	function cachingUpdate(fn) {
	    return function(c) {
	        return caching(function() {
	            return fn(c.newValue());
	        });
	    };
	}
	
	function getValue(c) {
	    if (typeof(c.cachedValue) === 'undefined') {
	        c.cachedValue = c.newValue();
	    }
	    return c.cachedValue;
	}
	
	exports.geoOrthographic = caching(d3.geoOrthographic);
	
	exports.clipAngleImpl = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.clipAngle( value );
	    });
	};
	
	exports.clipExtentImpl = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.clipExtent( value );
	    });
	};
	
	exports.scale = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.scale( value );
	    });
	};
	
	exports.translate = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.translate( value );
	    });
	};
	
	exports.center = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.center( value );
	    });
	};
	
	exports.rotate = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.rotate( value );
	    });
	};
	
	exports.precision = function(value) {
	    return cachingUpdate( function(projection) { 
	        return projection.precision( value );
	    });
	};
	
	exports.geoPath = caching(d3.geoPath);
	
	exports.pointRadius = function(value) {
	    return cachingUpdate( function(path) { 
	        return path.pointRadius( value );
	    });
	};
	
	exports.projectionImpl = function(value) {
	    return cachingUpdate( function(path) { 
	        return path.projection( getValue(value) );
	    });
	};
	
	exports.pathStringImpl = getValue;

/***/ },
/* 314 */
/*!***********************************!*\
  !*** ./bower_components/d3/d3.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	// https://d3js.org Version 4.1.1. Copyright 2016 Mike Bostock.
	(function (global, factory) {
	   true ? factory(exports) :
	  typeof define === 'function' && define.amd ? define(['exports'], factory) :
	  (factory((global.d3 = global.d3 || {})));
	}(this, function (exports) { 'use strict';
	
	  var version = "4.1.1";
	
	  function ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	
	  function bisector(compare) {
	    if (compare.length === 1) compare = ascendingComparator(compare);
	    return {
	      left: function(a, x, lo, hi) {
	        if (lo == null) lo = 0;
	        if (hi == null) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1;
	          else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (lo == null) lo = 0;
	        if (hi == null) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid;
	          else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	
	  function ascendingComparator(f) {
	    return function(d, x) {
	      return ascending(f(d), x);
	    };
	  }
	
	  var ascendingBisect = bisector(ascending);
	  var bisectRight = ascendingBisect.right;
	  var bisectLeft = ascendingBisect.left;
	
	  function descending(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  }
	
	  function number(x) {
	    return x === null ? NaN : +x;
	  }
	
	  function variance(array, f) {
	    var n = array.length,
	        m = 0,
	        a,
	        d,
	        s = 0,
	        i = -1,
	        j = 0;
	
	    if (f == null) {
	      while (++i < n) {
	        if (!isNaN(a = number(array[i]))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	
	    else {
	      while (++i < n) {
	        if (!isNaN(a = number(f(array[i], i, array)))) {
	          d = a - m;
	          m += d / ++j;
	          s += d * (a - m);
	        }
	      }
	    }
	
	    if (j > 1) return s / (j - 1);
	  }
	
	  function deviation(array, f) {
	    var v = variance(array, f);
	    return v ? Math.sqrt(v) : v;
	  }
	
	  function extent(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b,
	        c;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	
	    return [a, c];
	  }
	
	  var array = Array.prototype;
	
	  var slice = array.slice;
	  var map = array.map;
	
	  function constant(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function identity(x) {
	    return x;
	  }
	
	  function range(start, stop, step) {
	    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
	
	    var i = -1,
	        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
	        range = new Array(n);
	
	    while (++i < n) {
	      range[i] = start + i * step;
	    }
	
	    return range;
	  }
	
	  var e10 = Math.sqrt(50);
	  var e5 = Math.sqrt(10);
	  var e2 = Math.sqrt(2);
	  function ticks(start, stop, count) {
	    var step = tickStep(start, stop, count);
	    return range(
	      Math.ceil(start / step) * step,
	      Math.floor(stop / step) * step + step / 2, // inclusive
	      step
	    );
	  }
	
	  function tickStep(start, stop, count) {
	    var step0 = Math.abs(stop - start) / Math.max(0, count),
	        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
	        error = step0 / step1;
	    if (error >= e10) step1 *= 10;
	    else if (error >= e5) step1 *= 5;
	    else if (error >= e2) step1 *= 2;
	    return stop < start ? -step1 : step1;
	  }
	
	  function sturges(values) {
	    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
	  }
	
	  function histogram() {
	    var value = identity,
	        domain = extent,
	        threshold = sturges;
	
	    function histogram(data) {
	      var i,
	          n = data.length,
	          x,
	          values = new Array(n);
	
	      for (i = 0; i < n; ++i) {
	        values[i] = value(data[i], i, data);
	      }
	
	      var xz = domain(values),
	          x0 = xz[0],
	          x1 = xz[1],
	          tz = threshold(values, x0, x1);
	
	      // Convert number of thresholds into uniform thresholds.
	      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);
	
	      // Remove any thresholds outside the domain.
	      var m = tz.length;
	      while (tz[0] <= x0) tz.shift(), --m;
	      while (tz[m - 1] >= x1) tz.pop(), --m;
	
	      var bins = new Array(m + 1),
	          bin;
	
	      // Initialize bins.
	      for (i = 0; i <= m; ++i) {
	        bin = bins[i] = [];
	        bin.x0 = i > 0 ? tz[i - 1] : x0;
	        bin.x1 = i < m ? tz[i] : x1;
	      }
	
	      // Assign data to bins by value, ignoring any outside the domain.
	      for (i = 0; i < n; ++i) {
	        x = values[i];
	        if (x0 <= x && x <= x1) {
	          bins[bisectRight(tz, x, 0, m)].push(data[i]);
	        }
	      }
	
	      return bins;
	    }
	
	    histogram.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;
	    };
	
	    histogram.domain = function(_) {
	      return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;
	    };
	
	    histogram.thresholds = function(_) {
	      return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;
	    };
	
	    return histogram;
	  }
	
	  function threshold(array, p, f) {
	    if (f == null) f = number;
	    if (!(n = array.length)) return;
	    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);
	    if (p >= 1) return +f(array[n - 1], n - 1, array);
	    var n,
	        h = (n - 1) * p,
	        i = Math.floor(h),
	        a = +f(array[i], i, array),
	        b = +f(array[i + 1], i + 1, array);
	    return a + (b - a) * (h - i);
	  }
	
	  function freedmanDiaconis(values, min, max) {
	    values = map.call(values, number).sort(ascending);
	    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));
	  }
	
	  function scott(values, min, max) {
	    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
	  }
	
	  function max(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;
	    }
	
	    return a;
	  }
	
	  function mean(array, f) {
	    var s = 0,
	        n = array.length,
	        a,
	        i = -1,
	        j = n;
	
	    if (f == null) {
	      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;
	    }
	
	    else {
	      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;
	    }
	
	    if (j) return s / j;
	  }
	
	  function median(array, f) {
	    var numbers = [],
	        n = array.length,
	        a,
	        i = -1;
	
	    if (f == null) {
	      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);
	    }
	
	    else {
	      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);
	    }
	
	    return threshold(numbers.sort(ascending), 0.5);
	  }
	
	  function merge(arrays) {
	    var n = arrays.length,
	        m,
	        i = -1,
	        j = 0,
	        merged,
	        array;
	
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	
	    return merged;
	  }
	
	  function min(array, f) {
	    var i = -1,
	        n = array.length,
	        a,
	        b;
	
	    if (f == null) {
	      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    }
	
	    else {
	      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
	      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;
	    }
	
	    return a;
	  }
	
	  function pairs(array) {
	    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [p, p = array[++i]];
	    return pairs;
	  }
	
	  function permute(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  }
	
	  function scan(array, compare) {
	    if (!(n = array.length)) return;
	    var i = 0,
	        n,
	        j = 0,
	        xi,
	        xj = array[j];
	
	    if (!compare) compare = ascending;
	
	    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;
	
	    if (compare(xj, xj) === 0) return j;
	  }
	
	  function shuffle(array, i0, i1) {
	    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
	        t,
	        i;
	
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m + i0];
	      array[m + i0] = array[i + i0];
	      array[i + i0] = t;
	    }
	
	    return array;
	  }
	
	  function sum(array, f) {
	    var s = 0,
	        n = array.length,
	        a,
	        i = -1;
	
	    if (f == null) {
	      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.
	    }
	
	    else {
	      while (++i < n) if (a = +f(array[i], i, array)) s += a;
	    }
	
	    return s;
	  }
	
	  function transpose(matrix) {
	    if (!(n = matrix.length)) return [];
	    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
	      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
	        row[j] = matrix[j][i];
	      }
	    }
	    return transpose;
	  }
	
	  function length(d) {
	    return d.length;
	  }
	
	  function zip() {
	    return transpose(arguments);
	  }
	
	  var prefix = "$";
	
	  function Map() {}
	
	  Map.prototype = map$1.prototype = {
	    constructor: Map,
	    has: function(key) {
	      return (prefix + key) in this;
	    },
	    get: function(key) {
	      return this[prefix + key];
	    },
	    set: function(key, value) {
	      this[prefix + key] = value;
	      return this;
	    },
	    remove: function(key) {
	      var property = prefix + key;
	      return property in this && delete this[property];
	    },
	    clear: function() {
	      for (var property in this) if (property[0] === prefix) delete this[property];
	    },
	    keys: function() {
	      var keys = [];
	      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
	      return keys;
	    },
	    values: function() {
	      var values = [];
	      for (var property in this) if (property[0] === prefix) values.push(this[property]);
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
	      return entries;
	    },
	    size: function() {
	      var size = 0;
	      for (var property in this) if (property[0] === prefix) ++size;
	      return size;
	    },
	    empty: function() {
	      for (var property in this) if (property[0] === prefix) return false;
	      return true;
	    },
	    each: function(f) {
	      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
	    }
	  };
	
	  function map$1(object, f) {
	    var map = new Map;
	
	    // Copy constructor.
	    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });
	
	    // Index array by numeric index or specified key function.
	    else if (Array.isArray(object)) {
	      var i = -1,
	          n = object.length,
	          o;
	
	      if (f == null) while (++i < n) map.set(i, object[i]);
	      else while (++i < n) map.set(f(o = object[i], i, object), o);
	    }
	
	    // Convert object to map.
	    else if (object) for (var key in object) map.set(key, object[key]);
	
	    return map;
	  }
	
	  function nest() {
	    var keys = [],
	        sortKeys = [],
	        sortValues,
	        rollup,
	        nest;
	
	    function apply(array, depth, createResult, setResult) {
	      if (depth >= keys.length) return rollup != null
	          ? rollup(array) : (sortValues != null
	          ? array.sort(sortValues)
	          : array);
	
	      var i = -1,
	          n = array.length,
	          key = keys[depth++],
	          keyValue,
	          value,
	          valuesByKey = map$1(),
	          values,
	          result = createResult();
	
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
	          values.push(value);
	        } else {
	          valuesByKey.set(keyValue, [value]);
	        }
	      }
	
	      valuesByKey.each(function(values, key) {
	        setResult(result, key, apply(values, depth, createResult, setResult));
	      });
	
	      return result;
	    }
	
	    function entries(map, depth) {
	      if (++depth > keys.length) return map;
	      var array, sortKey = sortKeys[depth - 1];
	      if (rollup != null && depth >= keys.length) array = map.entries();
	      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });
	      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;
	    }
	
	    return nest = {
	      object: function(array) { return apply(array, 0, createObject, setObject); },
	      map: function(array) { return apply(array, 0, createMap, setMap); },
	      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
	      key: function(d) { keys.push(d); return nest; },
	      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
	      sortValues: function(order) { sortValues = order; return nest; },
	      rollup: function(f) { rollup = f; return nest; }
	    };
	  }
	
	  function createObject() {
	    return {};
	  }
	
	  function setObject(object, key, value) {
	    object[key] = value;
	  }
	
	  function createMap() {
	    return map$1();
	  }
	
	  function setMap(map, key, value) {
	    map.set(key, value);
	  }
	
	  function Set() {}
	
	  var proto = map$1.prototype;
	
	  Set.prototype = set.prototype = {
	    constructor: Set,
	    has: proto.has,
	    add: function(value) {
	      value += "";
	      this[prefix + value] = value;
	      return this;
	    },
	    remove: proto.remove,
	    clear: proto.clear,
	    values: proto.keys,
	    size: proto.size,
	    empty: proto.empty,
	    each: proto.each
	  };
	
	  function set(object, f) {
	    var set = new Set;
	
	    // Copy constructor.
	    if (object instanceof Set) object.each(function(value) { set.add(value); });
	
	    // Otherwise, assume it’s an array.
	    else if (object) {
	      var i = -1, n = object.length;
	      if (f == null) while (++i < n) set.add(object[i]);
	      else while (++i < n) set.add(f(object[i], i, object));
	    }
	
	    return set;
	  }
	
	  function keys(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  }
	
	  function values(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  }
	
	  function entries(map) {
	    var entries = [];
	    for (var key in map) entries.push({key: key, value: map[key]});
	    return entries;
	  }
	
	  function uniform(min, max) {
	    min = min == null ? 0 : +min;
	    max = max == null ? 1 : +max;
	    if (arguments.length === 1) max = min, min = 0;
	    else max -= min;
	    return function() {
	      return Math.random() * max + min;
	    };
	  }
	
	  function normal(mu, sigma) {
	    var x, r;
	    mu = mu == null ? 0 : +mu;
	    sigma = sigma == null ? 1 : +sigma;
	    return function() {
	      var y;
	
	      // If available, use the second previously-generated uniform random.
	      if (x != null) y = x, x = null;
	
	      // Otherwise, generate a new x and y.
	      else do {
	        x = Math.random() * 2 - 1;
	        y = Math.random() * 2 - 1;
	        r = x * x + y * y;
	      } while (!r || r > 1);
	
	      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
	    };
	  }
	
	  function logNormal() {
	    var randomNormal = normal.apply(this, arguments);
	    return function() {
	      return Math.exp(randomNormal());
	    };
	  }
	
	  function irwinHall(n) {
	    return function() {
	      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();
	      return sum;
	    };
	  }
	
	  function bates(n) {
	    var randomIrwinHall = irwinHall(n);
	    return function() {
	      return randomIrwinHall() / n;
	    };
	  }
	
	  function exponential(lambda) {
	    return function() {
	      return -Math.log(1 - Math.random()) / lambda;
	    };
	  }
	
	  function linear(t) {
	    return +t;
	  }
	
	  function quadIn(t) {
	    return t * t;
	  }
	
	  function quadOut(t) {
	    return t * (2 - t);
	  }
	
	  function quadInOut(t) {
	    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
	  }
	
	  function cubicIn(t) {
	    return t * t * t;
	  }
	
	  function cubicOut(t) {
	    return --t * t * t + 1;
	  }
	
	  function easeCubicInOut(t) {
	    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
	  }
	
	  var exponent = 3;
	
	  var polyIn = (function custom(e) {
	    e = +e;
	
	    function polyIn(t) {
	      return Math.pow(t, e);
	    }
	
	    polyIn.exponent = custom;
	
	    return polyIn;
	  })(exponent);
	
	  var polyOut = (function custom(e) {
	    e = +e;
	
	    function polyOut(t) {
	      return 1 - Math.pow(1 - t, e);
	    }
	
	    polyOut.exponent = custom;
	
	    return polyOut;
	  })(exponent);
	
	  var polyInOut = (function custom(e) {
	    e = +e;
	
	    function polyInOut(t) {
	      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
	    }
	
	    polyInOut.exponent = custom;
	
	    return polyInOut;
	  })(exponent);
	
	  var pi = Math.PI;
	  var halfPi = pi / 2;
	  function sinIn(t) {
	    return 1 - Math.cos(t * halfPi);
	  }
	
	  function sinOut(t) {
	    return Math.sin(t * halfPi);
	  }
	
	  function sinInOut(t) {
	    return (1 - Math.cos(pi * t)) / 2;
	  }
	
	  function expIn(t) {
	    return Math.pow(2, 10 * t - 10);
	  }
	
	  function expOut(t) {
	    return 1 - Math.pow(2, -10 * t);
	  }
	
	  function expInOut(t) {
	    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
	  }
	
	  function circleIn(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	
	  function circleOut(t) {
	    return Math.sqrt(1 - --t * t);
	  }
	
	  function circleInOut(t) {
	    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
	  }
	
	  var b1 = 4 / 11;
	  var b2 = 6 / 11;
	  var b3 = 8 / 11;
	  var b4 = 3 / 4;
	  var b5 = 9 / 11;
	  var b6 = 10 / 11;
	  var b7 = 15 / 16;
	  var b8 = 21 / 22;
	  var b9 = 63 / 64;
	  var b0 = 1 / b1 / b1;
	  function bounceIn(t) {
	    return 1 - bounceOut(1 - t);
	  }
	
	  function bounceOut(t) {
	    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
	  }
	
	  function bounceInOut(t) {
	    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
	  }
	
	  var overshoot = 1.70158;
	
	  var backIn = (function custom(s) {
	    s = +s;
	
	    function backIn(t) {
	      return t * t * ((s + 1) * t - s);
	    }
	
	    backIn.overshoot = custom;
	
	    return backIn;
	  })(overshoot);
	
	  var backOut = (function custom(s) {
	    s = +s;
	
	    function backOut(t) {
	      return --t * t * ((s + 1) * t + s) + 1;
	    }
	
	    backOut.overshoot = custom;
	
	    return backOut;
	  })(overshoot);
	
	  var backInOut = (function custom(s) {
	    s = +s;
	
	    function backInOut(t) {
	      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
	    }
	
	    backInOut.overshoot = custom;
	
	    return backInOut;
	  })(overshoot);
	
	  var tau = 2 * Math.PI;
	  var amplitude = 1;
	  var period = 0.3;
	  var elasticIn = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticIn(t) {
	      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
	    }
	
	    elasticIn.amplitude = function(a) { return custom(a, p * tau); };
	    elasticIn.period = function(p) { return custom(a, p); };
	
	    return elasticIn;
	  })(amplitude, period);
	
	  var elasticOut = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticOut(t) {
	      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
	    }
	
	    elasticOut.amplitude = function(a) { return custom(a, p * tau); };
	    elasticOut.period = function(p) { return custom(a, p); };
	
	    return elasticOut;
	  })(amplitude, period);
	
	  var elasticInOut = (function custom(a, p) {
	    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);
	
	    function elasticInOut(t) {
	      return ((t = t * 2 - 1) < 0
	          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)
	          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
	    }
	
	    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };
	    elasticInOut.period = function(p) { return custom(a, p); };
	
	    return elasticInOut;
	  })(amplitude, period);
	
	  function area(polygon) {
	    var i = -1,
	        n = polygon.length,
	        a,
	        b = polygon[n - 1],
	        area = 0;
	
	    while (++i < n) {
	      a = b;
	      b = polygon[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	
	    return area / 2;
	  }
	
	  function centroid(polygon) {
	    var i = -1,
	        n = polygon.length,
	        x = 0,
	        y = 0,
	        a,
	        b = polygon[n - 1],
	        c,
	        k = 0;
	
	    while (++i < n) {
	      a = b;
	      b = polygon[i];
	      k += c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	
	    return k *= 3, [x / k, y / k];
	  }
	
	  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
	  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is
	  // right, +y is up). Returns a positive value if ABC is counter-clockwise,
	  // negative if clockwise, and zero if the points are collinear.
	  function cross(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	
	  function lexicographicOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	
	  // Computes the upper convex hull per the monotone chain algorithm.
	  // Assumes points.length >= 3, is sorted by x, unique in y.
	  // Returns an array of indices into points in left-to-right order.
	  function computeUpperHullIndexes(points) {
	    var n = points.length,
	        indexes = [0, 1],
	        size = 2;
	
	    for (var i = 2; i < n; ++i) {
	      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
	      indexes[size++] = i;
	    }
	
	    return indexes.slice(0, size); // remove popped points
	  }
	
	  function hull(points) {
	    if ((n = points.length) < 3) return null;
	
	    var i,
	        n,
	        sortedPoints = new Array(n),
	        flippedPoints = new Array(n);
	
	    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
	    sortedPoints.sort(lexicographicOrder);
	    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];
	
	    var upperIndexes = computeUpperHullIndexes(sortedPoints),
	        lowerIndexes = computeUpperHullIndexes(flippedPoints);
	
	    // Construct the hull polygon, removing possible duplicate endpoints.
	    var skipLeft = lowerIndexes[0] === upperIndexes[0],
	        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
	        hull = [];
	
	    // Add upper hull in right-to-l order.
	    // Then add lower hull in left-to-right order.
	    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
	    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);
	
	    return hull;
	  }
	
	  function contains(polygon, point) {
	    var n = polygon.length,
	        p = polygon[n - 1],
	        x = point[0], y = point[1],
	        x0 = p[0], y0 = p[1],
	        x1, y1,
	        inside = false;
	
	    for (var i = 0; i < n; ++i) {
	      p = polygon[i], x1 = p[0], y1 = p[1];
	      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
	      x0 = x1, y0 = y1;
	    }
	
	    return inside;
	  }
	
	  function length$1(polygon) {
	    var i = -1,
	        n = polygon.length,
	        b = polygon[n - 1],
	        xa,
	        ya,
	        xb = b[0],
	        yb = b[1],
	        perimeter = 0;
	
	    while (++i < n) {
	      xa = xb;
	      ya = yb;
	      b = polygon[i];
	      xb = b[0];
	      yb = b[1];
	      xa -= xb;
	      ya -= yb;
	      perimeter += Math.sqrt(xa * xa + ya * ya);
	    }
	
	    return perimeter;
	  }
	
	var   pi$1 = Math.PI;
	var   tau$1 = 2 * pi$1;
	  var epsilon = 1e-6;
	  var tauEpsilon = tau$1 - epsilon;
	  function Path() {
	    this._x0 = this._y0 = // start of current subpath
	    this._x1 = this._y1 = null; // end of current subpath
	    this._ = [];
	  }
	
	  function path() {
	    return new Path;
	  }
	
	  Path.prototype = path.prototype = {
	    constructor: Path,
	    moveTo: function(x, y) {
	      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y);
	    },
	    closePath: function() {
	      if (this._x1 !== null) {
	        this._x1 = this._x0, this._y1 = this._y0;
	        this._.push("Z");
	      }
	    },
	    lineTo: function(x, y) {
	      this._.push("L", this._x1 = +x, ",", this._y1 = +y);
	    },
	    quadraticCurveTo: function(x1, y1, x, y) {
	      this._.push("Q", +x1, ",", +y1, ",", this._x1 = +x, ",", this._y1 = +y);
	    },
	    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
	      this._.push("C", +x1, ",", +y1, ",", +x2, ",", +y2, ",", this._x1 = +x, ",", this._y1 = +y);
	    },
	    arcTo: function(x1, y1, x2, y2, r) {
	      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
	      var x0 = this._x1,
	          y0 = this._y1,
	          x21 = x2 - x1,
	          y21 = y2 - y1,
	          x01 = x0 - x1,
	          y01 = y0 - y1,
	          l01_2 = x01 * x01 + y01 * y01;
	
	      // Is the radius negative? Error.
	      if (r < 0) throw new Error("negative radius: " + r);
	
	      // Is this path empty? Move to (x1,y1).
	      if (this._x1 === null) {
	        this._.push(
	          "M", this._x1 = x1, ",", this._y1 = y1
	        );
	      }
	
	      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
	      else if (!(l01_2 > epsilon));
	
	      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
	      // Equivalently, is (x1,y1) coincident with (x2,y2)?
	      // Or, is the radius zero? Line to (x1,y1).
	      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
	        this._.push(
	          "L", this._x1 = x1, ",", this._y1 = y1
	        );
	      }
	
	      // Otherwise, draw an arc!
	      else {
	        var x20 = x2 - x0,
	            y20 = y2 - y0,
	            l21_2 = x21 * x21 + y21 * y21,
	            l20_2 = x20 * x20 + y20 * y20,
	            l21 = Math.sqrt(l21_2),
	            l01 = Math.sqrt(l01_2),
	            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
	            t01 = l / l01,
	            t21 = l / l21;
	
	        // If the start tangent is not coincident with (x0,y0), line to.
	        if (Math.abs(t01 - 1) > epsilon) {
	          this._.push(
	            "L", x1 + t01 * x01, ",", y1 + t01 * y01
	          );
	        }
	
	        this._.push(
	          "A", r, ",", r, ",0,0,", +(y01 * x20 > x01 * y20), ",", this._x1 = x1 + t21 * x21, ",", this._y1 = y1 + t21 * y21
	        );
	      }
	    },
	    arc: function(x, y, r, a0, a1, ccw) {
	      x = +x, y = +y, r = +r;
	      var dx = r * Math.cos(a0),
	          dy = r * Math.sin(a0),
	          x0 = x + dx,
	          y0 = y + dy,
	          cw = 1 ^ ccw,
	          da = ccw ? a0 - a1 : a1 - a0;
	
	      // Is the radius negative? Error.
	      if (r < 0) throw new Error("negative radius: " + r);
	
	      // Is this path empty? Move to (x0,y0).
	      if (this._x1 === null) {
	        this._.push(
	          "M", x0, ",", y0
	        );
	      }
	
	      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
	      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
	        this._.push(
	          "L", x0, ",", y0
	        );
	      }
	
	      // Is this arc empty? We’re done.
	      if (!r) return;
	
	      // Is this a complete circle? Draw two arcs to complete the circle.
	      if (da > tauEpsilon) {
	        this._.push(
	          "A", r, ",", r, ",0,1,", cw, ",", x - dx, ",", y - dy,
	          "A", r, ",", r, ",0,1,", cw, ",", this._x1 = x0, ",", this._y1 = y0
	        );
	      }
	
	      // Otherwise, draw an arc!
	      else {
	        if (da < 0) da = da % tau$1 + tau$1;
	        this._.push(
	          "A", r, ",", r, ",0,", +(da >= pi$1), ",", cw, ",", this._x1 = x + r * Math.cos(a1), ",", this._y1 = y + r * Math.sin(a1)
	        );
	      }
	    },
	    rect: function(x, y, w, h) {
	      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y, "h", +w, "v", +h, "h", -w, "Z");
	    },
	    toString: function() {
	      return this._.join("");
	    }
	  };
	
	  function tree_add(d) {
	    var x = +this._x.call(null, d),
	        y = +this._y.call(null, d);
	    return add(this.cover(x, y), x, y, d);
	  }
	
	  function add(tree, x, y, d) {
	    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points
	
	    var parent,
	        node = tree._root,
	        leaf = {data: d},
	        x0 = tree._x0,
	        y0 = tree._y0,
	        x1 = tree._x1,
	        y1 = tree._y1,
	        xm,
	        ym,
	        xp,
	        yp,
	        right,
	        bottom,
	        i,
	        j;
	
	    // If the tree is empty, initialize the root as a leaf.
	    if (!node) return tree._root = leaf, tree;
	
	    // Find the existing leaf for the new point, or add it.
	    while (node.length) {
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
	    }
	
	    // Is the new point is exactly coincident with the existing point?
	    xp = +tree._x.call(null, node.data);
	    yp = +tree._y.call(null, node.data);
	    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;
	
	    // Otherwise, split the leaf node until the old and new point are separated.
	    do {
	      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
	    return parent[j] = node, parent[i] = leaf, tree;
	  }
	
	  function addAll(data) {
	    var d, i, n = data.length,
	        x,
	        y,
	        xz = new Array(n),
	        yz = new Array(n),
	        x0 = Infinity,
	        y0 = Infinity,
	        x1 = -Infinity,
	        y1 = -Infinity;
	
	    // Compute the points and their extent.
	    for (i = 0; i < n; ++i) {
	      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
	      xz[i] = x;
	      yz[i] = y;
	      if (x < x0) x0 = x;
	      if (x > x1) x1 = x;
	      if (y < y0) y0 = y;
	      if (y > y1) y1 = y;
	    }
	
	    // If there were no (valid) points, inherit the existing extent.
	    if (x1 < x0) x0 = this._x0, x1 = this._x1;
	    if (y1 < y0) y0 = this._y0, y1 = this._y1;
	
	    // Expand the tree to cover the new points.
	    this.cover(x0, y0).cover(x1, y1);
	
	    // Add the new points.
	    for (i = 0; i < n; ++i) {
	      add(this, xz[i], yz[i], data[i]);
	    }
	
	    return this;
	  }
	
	  function tree_cover(x, y) {
	    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points
	
	    var x0 = this._x0,
	        y0 = this._y0,
	        x1 = this._x1,
	        y1 = this._y1;
	
	    // If the quadtree has no extent, initialize them.
	    // Integer extent are necessary so that if we later double the extent,
	    // the existing quadrant boundaries don’t change due to floating point error!
	    if (isNaN(x0)) {
	      x1 = (x0 = Math.floor(x)) + 1;
	      y1 = (y0 = Math.floor(y)) + 1;
	    }
	
	    // Otherwise, double repeatedly to cover.
	    else if (x0 > x || x > x1 || y0 > y || y > y1) {
	      var z = x1 - x0,
	          node = this._root,
	          parent,
	          i;
	
	      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {
	        case 0: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);
	          break;
	        }
	        case 1: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);
	          break;
	        }
	        case 2: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);
	          break;
	        }
	        case 3: {
	          do parent = new Array(4), parent[i] = node, node = parent;
	          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);
	          break;
	        }
	      }
	
	      if (this._root && this._root.length) this._root = node;
	    }
	
	    // If the quadtree covers the point already, just return.
	    else return this;
	
	    this._x0 = x0;
	    this._y0 = y0;
	    this._x1 = x1;
	    this._y1 = y1;
	    return this;
	  }
	
	  function tree_data() {
	    var data = [];
	    this.visit(function(node) {
	      if (!node.length) do data.push(node.data); while (node = node.next)
	    });
	    return data;
	  }
	
	  function tree_extent(_) {
	    return arguments.length
	        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
	        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
	  }
	
	  function Quad(node, x0, y0, x1, y1) {
	    this.node = node;
	    this.x0 = x0;
	    this.y0 = y0;
	    this.x1 = x1;
	    this.y1 = y1;
	  }
	
	  function tree_find(x, y, radius) {
	    var data,
	        x0 = this._x0,
	        y0 = this._y0,
	        x1,
	        y1,
	        x2,
	        y2,
	        x3 = this._x1,
	        y3 = this._y1,
	        quads = [],
	        node = this._root,
	        q,
	        i;
	
	    if (node) quads.push(new Quad(node, x0, y0, x3, y3));
	    if (radius == null) radius = Infinity;
	    else {
	      x0 = x - radius, y0 = y - radius;
	      x3 = x + radius, y3 = y + radius;
	      radius *= radius;
	    }
	
	    while (q = quads.pop()) {
	
	      // Stop searching if this quadrant can’t contain a closer node.
	      if (!(node = q.node)
	          || (x1 = q.x0) > x3
	          || (y1 = q.y0) > y3
	          || (x2 = q.x1) < x0
	          || (y2 = q.y1) < y0) continue;
	
	      // Bisect the current quadrant.
	      if (node.length) {
	        var xm = (x1 + x2) / 2,
	            ym = (y1 + y2) / 2;
	
	        quads.push(
	          new Quad(node[3], xm, ym, x2, y2),
	          new Quad(node[2], x1, ym, xm, y2),
	          new Quad(node[1], xm, y1, x2, ym),
	          new Quad(node[0], x1, y1, xm, ym)
	        );
	
	        // Visit the closest quadrant first.
	        if (i = (y >= ym) << 1 | (x >= xm)) {
	          q = quads[quads.length - 1];
	          quads[quads.length - 1] = quads[quads.length - 1 - i];
	          quads[quads.length - 1 - i] = q;
	        }
	      }
	
	      // Visit this point. (Visiting coincident points isn’t necessary!)
	      else {
	        var dx = x - +this._x.call(null, node.data),
	            dy = y - +this._y.call(null, node.data),
	            d2 = dx * dx + dy * dy;
	        if (d2 < radius) {
	          var d = Math.sqrt(radius = d2);
	          x0 = x - d, y0 = y - d;
	          x3 = x + d, y3 = y + d;
	          data = node.data;
	        }
	      }
	    }
	
	    return data;
	  }
	
	  function tree_remove(d) {
	    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points
	
	    var parent,
	        node = this._root,
	        retainer,
	        previous,
	        next,
	        x0 = this._x0,
	        y0 = this._y0,
	        x1 = this._x1,
	        y1 = this._y1,
	        x,
	        y,
	        xm,
	        ym,
	        right,
	        bottom,
	        i,
	        j;
	
	    // If the tree is empty, initialize the root as a leaf.
	    if (!node) return this;
	
	    // Find the leaf node for the point.
	    // While descending, also retain the deepest parent with a non-removed sibling.
	    if (node.length) while (true) {
	      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
	      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
	      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
	      if (!node.length) break;
	      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
	    }
	
	    // Find the point to remove.
	    while (node.data !== d) if (!(previous = node, node = node.next)) return this;
	    if (next = node.next) delete node.next;
	
	    // If there are multiple coincident points, remove just the point.
	    if (previous) return (next ? previous.next = next : delete previous.next), this;
	
	    // If this is the root point, remove it.
	    if (!parent) return this._root = next, this;
	
	    // Remove this leaf.
	    next ? parent[i] = next : delete parent[i];
	
	    // If the parent now contains exactly one leaf, collapse superfluous parents.
	    if ((node = parent[0] || parent[1] || parent[2] || parent[3])
	        && node === (parent[3] || parent[2] || parent[1] || parent[0])
	        && !node.length) {
	      if (retainer) retainer[j] = node;
	      else this._root = node;
	    }
	
	    return this;
	  }
	
	  function removeAll(data) {
	    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
	    return this;
	  }
	
	  function tree_root() {
	    return this._root;
	  }
	
	  function tree_size() {
	    var size = 0;
	    this.visit(function(node) {
	      if (!node.length) do ++size; while (node = node.next)
	    });
	    return size;
	  }
	
	  function tree_visit(callback) {
	    var quads = [], q, node = this._root, child, x0, y0, x1, y1;
	    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));
	    while (q = quads.pop()) {
	      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
	        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
	        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
	        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
	        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
	        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
	      }
	    }
	    return this;
	  }
	
	  function tree_visitAfter(callback) {
	    var quads = [], next = [], q;
	    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));
	    while (q = quads.pop()) {
	      var node = q.node;
	      if (node.length) {
	        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
	        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));
	        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));
	        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));
	        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));
	      }
	      next.push(q);
	    }
	    while (q = next.pop()) {
	      callback(q.node, q.x0, q.y0, q.x1, q.y1);
	    }
	    return this;
	  }
	
	  function defaultX(d) {
	    return d[0];
	  }
	
	  function tree_x(_) {
	    return arguments.length ? (this._x = _, this) : this._x;
	  }
	
	  function defaultY(d) {
	    return d[1];
	  }
	
	  function tree_y(_) {
	    return arguments.length ? (this._y = _, this) : this._y;
	  }
	
	  function quadtree(nodes, x, y) {
	    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);
	    return nodes == null ? tree : tree.addAll(nodes);
	  }
	
	  function Quadtree(x, y, x0, y0, x1, y1) {
	    this._x = x;
	    this._y = y;
	    this._x0 = x0;
	    this._y0 = y0;
	    this._x1 = x1;
	    this._y1 = y1;
	    this._root = undefined;
	  }
	
	  function leaf_copy(leaf) {
	    var copy = {data: leaf.data}, next = copy;
	    while (leaf = leaf.next) next = next.next = {data: leaf.data};
	    return copy;
	  }
	
	  var treeProto = quadtree.prototype = Quadtree.prototype;
	
	  treeProto.copy = function() {
	    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
	        node = this._root,
	        nodes,
	        child;
	
	    if (!node) return copy;
	
	    if (!node.length) return copy._root = leaf_copy(node), copy;
	
	    nodes = [{source: node, target: copy._root = new Array(4)}];
	    while (node = nodes.pop()) {
	      for (var i = 0; i < 4; ++i) {
	        if (child = node.source[i]) {
	          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
	          else node.target[i] = leaf_copy(child);
	        }
	      }
	    }
	
	    return copy;
	  };
	
	  treeProto.add = tree_add;
	  treeProto.addAll = addAll;
	  treeProto.cover = tree_cover;
	  treeProto.data = tree_data;
	  treeProto.extent = tree_extent;
	  treeProto.find = tree_find;
	  treeProto.remove = tree_remove;
	  treeProto.removeAll = removeAll;
	  treeProto.root = tree_root;
	  treeProto.size = tree_size;
	  treeProto.visit = tree_visit;
	  treeProto.visitAfter = tree_visitAfter;
	  treeProto.x = tree_x;
	  treeProto.y = tree_y;
	
	  var slice$1 = [].slice;
	
	  var noabort = {};
	
	  function Queue(size) {
	    if (!(size >= 1)) throw new Error;
	    this._size = size;
	    this._call =
	    this._error = null;
	    this._tasks = [];
	    this._data = [];
	    this._waiting =
	    this._active =
	    this._ended =
	    this._start = 0; // inside a synchronous task callback?
	  }
	
	  Queue.prototype = queue.prototype = {
	    constructor: Queue,
	    defer: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      if (this._error != null) return this;
	      var t = slice$1.call(arguments, 1);
	      t.push(callback);
	      ++this._waiting, this._tasks.push(t);
	      poke(this);
	      return this;
	    },
	    abort: function() {
	      if (this._error == null) abort(this, new Error("abort"));
	      return this;
	    },
	    await: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };
	      maybeNotify(this);
	      return this;
	    },
	    awaitAll: function(callback) {
	      if (typeof callback !== "function" || this._call) throw new Error;
	      this._call = callback;
	      maybeNotify(this);
	      return this;
	    }
	  };
	
	  function poke(q) {
	    if (!q._start) try { start(q); } // let the current task complete
	    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously
	  }
	
	  function start(q) {
	    while (q._start = q._waiting && q._active < q._size) {
	      var i = q._ended + q._active,
	          t = q._tasks[i],
	          j = t.length - 1,
	          c = t[j];
	      t[j] = end(q, i);
	      --q._waiting, ++q._active;
	      t = c.apply(null, t);
	      if (!q._tasks[i]) continue; // task finished synchronously
	      q._tasks[i] = t || noabort;
	    }
	  }
	
	  function end(q, i) {
	    return function(e, r) {
	      if (!q._tasks[i]) return; // ignore multiple callbacks
	      --q._active, ++q._ended;
	      q._tasks[i] = null;
	      if (q._error != null) return; // ignore secondary errors
	      if (e != null) {
	        abort(q, e);
	      } else {
	        q._data[i] = r;
	        if (q._waiting) poke(q);
	        else maybeNotify(q);
	      }
	    };
	  }
	
	  function abort(q, e) {
	    var i = q._tasks.length, t;
	    q._error = e; // ignore active callbacks
	    q._data = undefined; // allow gc
	    q._waiting = NaN; // prevent starting
	
	    while (--i >= 0) {
	      if (t = q._tasks[i]) {
	        q._tasks[i] = null;
	        if (t.abort) try { t.abort(); }
	        catch (e) { /* ignore */ }
	      }
	    }
	
	    q._active = NaN; // allow notification
	    maybeNotify(q);
	  }
	
	  function maybeNotify(q) {
	    if (!q._active && q._call) q._call(q._error, q._data);
	  }
	
	  function queue(concurrency) {
	    return new Queue(arguments.length ? +concurrency : Infinity);
	  }
	
	  function constant$1(x) {
	    return function constant() {
	      return x;
	    };
	  }
	
	  var epsilon$1 = 1e-12;
	  var pi$2 = Math.PI;
	  var halfPi$1 = pi$2 / 2;
	  var tau$2 = 2 * pi$2;
	
	  function arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	
	  function arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	
	  function arcStartAngle(d) {
	    return d.startAngle;
	  }
	
	  function arcEndAngle(d) {
	    return d.endAngle;
	  }
	
	  function arcPadAngle(d) {
	    return d && d.padAngle; // Note: optional!
	  }
	
	  function asin(x) {
	    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);
	  }
	
	  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
	    var x10 = x1 - x0, y10 = y1 - y0,
	        x32 = x3 - x2, y32 = y3 - y2,
	        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
	    return [x0 + t * x10, y0 + t * y10];
	  }
	
	  // Compute perpendicular offset line of length rc.
	  // http://mathworld.wolfram.com/Circle-LineIntersection.html
	  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
	    var x01 = x0 - x1,
	        y01 = y0 - y1,
	        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
	        ox = lo * y01,
	        oy = -lo * x01,
	        x11 = x0 + ox,
	        y11 = y0 + oy,
	        x10 = x1 + ox,
	        y10 = y1 + oy,
	        x00 = (x11 + x10) / 2,
	        y00 = (y11 + y10) / 2,
	        dx = x10 - x11,
	        dy = y10 - y11,
	        d2 = dx * dx + dy * dy,
	        r = r1 - rc,
	        D = x11 * y10 - x10 * y11,
	        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
	        cx0 = (D * dy - dx * d) / d2,
	        cy0 = (-D * dx - dy * d) / d2,
	        cx1 = (D * dy + dx * d) / d2,
	        cy1 = (-D * dx + dy * d) / d2,
	        dx0 = cx0 - x00,
	        dy0 = cy0 - y00,
	        dx1 = cx1 - x00,
	        dy1 = cy1 - y00;
	
	    // Pick the closer of the two intersection points.
	    // TODO Is there a faster way to determine which intersection to use?
	    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
	
	    return {
	      cx: cx0,
	      cy: cy0,
	      x01: -ox,
	      y01: -oy,
	      x11: cx0 * (r1 / r - 1),
	      y11: cy0 * (r1 / r - 1)
	    };
	  }
	
	  function arc() {
	    var innerRadius = arcInnerRadius,
	        outerRadius = arcOuterRadius,
	        cornerRadius = constant$1(0),
	        padRadius = null,
	        startAngle = arcStartAngle,
	        endAngle = arcEndAngle,
	        padAngle = arcPadAngle,
	        context = null;
	
	    function arc() {
	      var buffer,
	          r,
	          r0 = +innerRadius.apply(this, arguments),
	          r1 = +outerRadius.apply(this, arguments),
	          a0 = startAngle.apply(this, arguments) - halfPi$1,
	          a1 = endAngle.apply(this, arguments) - halfPi$1,
	          da = Math.abs(a1 - a0),
	          cw = a1 > a0;
	
	      if (!context) context = buffer = path();
	
	      // Ensure that the outer radius is always larger than the inner radius.
	      if (r1 < r0) r = r1, r1 = r0, r0 = r;
	
	      // Is it a point?
	      if (!(r1 > epsilon$1)) context.moveTo(0, 0);
	
	      // Or is it a circle or annulus?
	      else if (da > tau$2 - epsilon$1) {
	        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));
	        context.arc(0, 0, r1, a0, a1, !cw);
	        if (r0 > epsilon$1) {
	          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));
	          context.arc(0, 0, r0, a1, a0, cw);
	        }
	      }
	
	      // Or is it a circular or annular sector?
	      else {
	        var a01 = a0,
	            a11 = a1,
	            a00 = a0,
	            a10 = a1,
	            da0 = da,
	            da1 = da,
	            ap = padAngle.apply(this, arguments) / 2,
	            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),
	            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
	            rc0 = rc,
	            rc1 = rc,
	            t0,
	            t1;
	
	        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
	        if (rp > epsilon$1) {
	          var p0 = asin(rp / r0 * Math.sin(ap)),
	              p1 = asin(rp / r1 * Math.sin(ap));
	          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
	          else da0 = 0, a00 = a10 = (a0 + a1) / 2;
	          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
	          else da1 = 0, a01 = a11 = (a0 + a1) / 2;
	        }
	
	        var x01 = r1 * Math.cos(a01),
	            y01 = r1 * Math.sin(a01),
	            x10 = r0 * Math.cos(a10),
	            y10 = r0 * Math.sin(a10);
	
	        // Apply rounded corners?
	        if (rc > epsilon$1) {
	          var x11 = r1 * Math.cos(a11),
	              y11 = r1 * Math.sin(a11),
	              x00 = r0 * Math.cos(a00),
	              y00 = r0 * Math.sin(a00);
	
	          // Restrict the corner radius according to the sector angle.
	          if (da < pi$2) {
	            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
	                ax = x01 - oc[0],
	                ay = y01 - oc[1],
	                bx = x11 - oc[0],
	                by = y11 - oc[1],
	                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
	                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
	            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
	            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
	          }
	        }
	
	        // Is the sector collapsed to a line?
	        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);
	
	        // Does the sector’s outer ring have rounded corners?
	        else if (rc1 > epsilon$1) {
	          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
	          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
	
	          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	          // Have the corners merged?
	          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	          // Otherwise, draw the two corners and the ring.
	          else {
	            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
	            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	          }
	        }
	
	        // Or is the outer ring just a circular arc?
	        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
	
	        // Is there no inner ring, and it’s a circular sector?
	        // Or perhaps it’s an annular sector collapsed due to padding?
	        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);
	
	        // Does the sector’s inner ring (or point) have rounded corners?
	        else if (rc0 > epsilon$1) {
	          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
	          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
	
	          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
	
	          // Have the corners merged?
	          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
	
	          // Otherwise, draw the two corners and the ring.
	          else {
	            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
	            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
	            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
	          }
	        }
	
	        // Or is the inner ring just a circular arc?
	        else context.arc(0, 0, r0, a10, a00, cw);
	      }
	
	      context.closePath();
	
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    arc.centroid = function() {
	      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
	          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;
	      return [Math.cos(a) * r, Math.sin(a) * r];
	    };
	
	    arc.innerRadius = function(_) {
	      return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : innerRadius;
	    };
	
	    arc.outerRadius = function(_) {
	      return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : outerRadius;
	    };
	
	    arc.cornerRadius = function(_) {
	      return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$1(+_), arc) : cornerRadius;
	    };
	
	    arc.padRadius = function(_) {
	      return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), arc) : padRadius;
	    };
	
	    arc.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : startAngle;
	    };
	
	    arc.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : endAngle;
	    };
	
	    arc.padAngle = function(_) {
	      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), arc) : padAngle;
	    };
	
	    arc.context = function(_) {
	      return arguments.length ? ((context = _ == null ? null : _), arc) : context;
	    };
	
	    return arc;
	  }
	
	  function Linear(context) {
	    this._context = context;
	  }
	
	  Linear.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; // proceed
	        default: this._context.lineTo(x, y); break;
	      }
	    }
	  };
	
	  function curveLinear(context) {
	    return new Linear(context);
	  }
	
	  function x(p) {
	    return p[0];
	  }
	
	  function y(p) {
	    return p[1];
	  }
	
	  function line() {
	    var x$$ = x,
	        y$$ = y,
	        defined = constant$1(true),
	        context = null,
	        curve = curveLinear,
	        output = null;
	
	    function line(data) {
	      var i,
	          n = data.length,
	          d,
	          defined0 = false,
	          buffer;
	
	      if (context == null) output = curve(buffer = path());
	
	      for (i = 0; i <= n; ++i) {
	        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	          if (defined0 = !defined0) output.lineStart();
	          else output.lineEnd();
	        }
	        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));
	      }
	
	      if (buffer) return output = null, buffer + "" || null;
	    }
	
	    line.x = function(_) {
	      return arguments.length ? (x$$ = typeof _ === "function" ? _ : constant$1(+_), line) : x$$;
	    };
	
	    line.y = function(_) {
	      return arguments.length ? (y$$ = typeof _ === "function" ? _ : constant$1(+_), line) : y$$;
	    };
	
	    line.defined = function(_) {
	      return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), line) : defined;
	    };
	
	    line.curve = function(_) {
	      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
	    };
	
	    line.context = function(_) {
	      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
	    };
	
	    return line;
	  }
	
	  function area$1() {
	    var x0 = x,
	        x1 = null,
	        y0 = constant$1(0),
	        y1 = y,
	        defined = constant$1(true),
	        context = null,
	        curve = curveLinear,
	        output = null;
	
	    function area(data) {
	      var i,
	          j,
	          k,
	          n = data.length,
	          d,
	          defined0 = false,
	          buffer,
	          x0z = new Array(n),
	          y0z = new Array(n);
	
	      if (context == null) output = curve(buffer = path());
	
	      for (i = 0; i <= n; ++i) {
	        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
	          if (defined0 = !defined0) {
	            j = i;
	            output.areaStart();
	            output.lineStart();
	          } else {
	            output.lineEnd();
	            output.lineStart();
	            for (k = i - 1; k >= j; --k) {
	              output.point(x0z[k], y0z[k]);
	            }
	            output.lineEnd();
	            output.areaEnd();
	          }
	        }
	        if (defined0) {
	          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
	          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
	        }
	      }
	
	      if (buffer) return output = null, buffer + "" || null;
	    }
	
	    function arealine() {
	      return line().defined(defined).curve(curve).context(context);
	    }
	
	    area.x = function(_) {
	      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), x1 = null, area) : x0;
	    };
	
	    area.x0 = function(_) {
	      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$1(+_), area) : x0;
	    };
	
	    area.x1 = function(_) {
	      return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : x1;
	    };
	
	    area.y = function(_) {
	      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), y1 = null, area) : y0;
	    };
	
	    area.y0 = function(_) {
	      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$1(+_), area) : y0;
	    };
	
	    area.y1 = function(_) {
	      return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$1(+_), area) : y1;
	    };
	
	    area.lineX0 =
	    area.lineY0 = function() {
	      return arealine().x(x0).y(y0);
	    };
	
	    area.lineY1 = function() {
	      return arealine().x(x0).y(y1);
	    };
	
	    area.lineX1 = function() {
	      return arealine().x(x1).y(y0);
	    };
	
	    area.defined = function(_) {
	      return arguments.length ? (defined = typeof _ === "function" ? _ : constant$1(!!_), area) : defined;
	    };
	
	    area.curve = function(_) {
	      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
	    };
	
	    area.context = function(_) {
	      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
	    };
	
	    return area;
	  }
	
	  function descending$1(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  }
	
	  function identity$1(d) {
	    return d;
	  }
	
	  function pie() {
	    var value = identity$1,
	        sortValues = descending$1,
	        sort = null,
	        startAngle = constant$1(0),
	        endAngle = constant$1(tau$2),
	        padAngle = constant$1(0);
	
	    function pie(data) {
	      var i,
	          n = data.length,
	          j,
	          k,
	          sum = 0,
	          index = new Array(n),
	          arcs = new Array(n),
	          a0 = +startAngle.apply(this, arguments),
	          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),
	          a1,
	          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
	          pa = p * (da < 0 ? -1 : 1),
	          v;
	
	      for (i = 0; i < n; ++i) {
	        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
	          sum += v;
	        }
	      }
	
	      // Optionally sort the arcs by previously-computed values or by data.
	      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
	      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });
	
	      // Compute the arcs! They are stored in the original data's order.
	      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
	        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
	          data: data[j],
	          index: i,
	          value: v,
	          startAngle: a0,
	          endAngle: a1,
	          padAngle: p
	        };
	      }
	
	      return arcs;
	    }
	
	    pie.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), pie) : value;
	    };
	
	    pie.sortValues = function(_) {
	      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
	    };
	
	    pie.sort = function(_) {
	      return arguments.length ? (sort = _, sortValues = null, pie) : sort;
	    };
	
	    pie.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : startAngle;
	    };
	
	    pie.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : endAngle;
	    };
	
	    pie.padAngle = function(_) {
	      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$1(+_), pie) : padAngle;
	    };
	
	    return pie;
	  }
	
	  var curveRadialLinear = curveRadial(curveLinear);
	
	  function Radial(curve) {
	    this._curve = curve;
	  }
	
	  Radial.prototype = {
	    areaStart: function() {
	      this._curve.areaStart();
	    },
	    areaEnd: function() {
	      this._curve.areaEnd();
	    },
	    lineStart: function() {
	      this._curve.lineStart();
	    },
	    lineEnd: function() {
	      this._curve.lineEnd();
	    },
	    point: function(a, r) {
	      this._curve.point(r * Math.sin(a), r * -Math.cos(a));
	    }
	  };
	
	  function curveRadial(curve) {
	
	    function radial(context) {
	      return new Radial(curve(context));
	    }
	
	    radial._curve = curve;
	
	    return radial;
	  }
	
	  function radialLine(l) {
	    var c = l.curve;
	
	    l.angle = l.x, delete l.x;
	    l.radius = l.y, delete l.y;
	
	    l.curve = function(_) {
	      return arguments.length ? c(curveRadial(_)) : c()._curve;
	    };
	
	    return l;
	  }
	
	  function radialLine$1() {
	    return radialLine(line().curve(curveRadialLinear));
	  }
	
	  function radialArea() {
	    var a = area$1().curve(curveRadialLinear),
	        c = a.curve,
	        x0 = a.lineX0,
	        x1 = a.lineX1,
	        y0 = a.lineY0,
	        y1 = a.lineY1;
	
	    a.angle = a.x, delete a.x;
	    a.startAngle = a.x0, delete a.x0;
	    a.endAngle = a.x1, delete a.x1;
	    a.radius = a.y, delete a.y;
	    a.innerRadius = a.y0, delete a.y0;
	    a.outerRadius = a.y1, delete a.y1;
	    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;
	    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;
	    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;
	    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;
	
	    a.curve = function(_) {
	      return arguments.length ? c(curveRadial(_)) : c()._curve;
	    };
	
	    return a;
	  }
	
	  var circle = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / pi$2);
	      context.moveTo(r, 0);
	      context.arc(0, 0, r, 0, tau$2);
	    }
	  };
	
	  var cross$1 = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / 5) / 2;
	      context.moveTo(-3 * r, -r);
	      context.lineTo(-r, -r);
	      context.lineTo(-r, -3 * r);
	      context.lineTo(r, -3 * r);
	      context.lineTo(r, -r);
	      context.lineTo(3 * r, -r);
	      context.lineTo(3 * r, r);
	      context.lineTo(r, r);
	      context.lineTo(r, 3 * r);
	      context.lineTo(-r, 3 * r);
	      context.lineTo(-r, r);
	      context.lineTo(-3 * r, r);
	      context.closePath();
	    }
	  };
	
	  var tan30 = Math.sqrt(1 / 3);
	  var tan30_2 = tan30 * 2;
	  var diamond = {
	    draw: function(context, size) {
	      var y = Math.sqrt(size / tan30_2),
	          x = y * tan30;
	      context.moveTo(0, -y);
	      context.lineTo(x, 0);
	      context.lineTo(0, y);
	      context.lineTo(-x, 0);
	      context.closePath();
	    }
	  };
	
	  var ka = 0.89081309152928522810;
	  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);
	  var kx = Math.sin(tau$2 / 10) * kr;
	  var ky = -Math.cos(tau$2 / 10) * kr;
	  var star = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size * ka),
	          x = kx * r,
	          y = ky * r;
	      context.moveTo(0, -r);
	      context.lineTo(x, y);
	      for (var i = 1; i < 5; ++i) {
	        var a = tau$2 * i / 5,
	            c = Math.cos(a),
	            s = Math.sin(a);
	        context.lineTo(s * r, -c * r);
	        context.lineTo(c * x - s * y, s * x + c * y);
	      }
	      context.closePath();
	    }
	  };
	
	  var square = {
	    draw: function(context, size) {
	      var w = Math.sqrt(size),
	          x = -w / 2;
	      context.rect(x, x, w, w);
	    }
	  };
	
	  var sqrt3 = Math.sqrt(3);
	
	  var triangle = {
	    draw: function(context, size) {
	      var y = -Math.sqrt(size / (sqrt3 * 3));
	      context.moveTo(0, y * 2);
	      context.lineTo(-sqrt3 * y, -y);
	      context.lineTo(sqrt3 * y, -y);
	      context.closePath();
	    }
	  };
	
	  var c = -0.5;
	  var s = Math.sqrt(3) / 2;
	  var k = 1 / Math.sqrt(12);
	  var a = (k / 2 + 1) * 3;
	  var wye = {
	    draw: function(context, size) {
	      var r = Math.sqrt(size / a),
	          x0 = r / 2,
	          y0 = r * k,
	          x1 = x0,
	          y1 = r * k + r,
	          x2 = -x1,
	          y2 = y1;
	      context.moveTo(x0, y0);
	      context.lineTo(x1, y1);
	      context.lineTo(x2, y2);
	      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
	      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
	      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
	      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
	      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
	      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
	      context.closePath();
	    }
	  };
	
	  var symbols = [
	    circle,
	    cross$1,
	    diamond,
	    square,
	    star,
	    triangle,
	    wye
	  ];
	
	  function symbol() {
	    var type = constant$1(circle),
	        size = constant$1(64),
	        context = null;
	
	    function symbol() {
	      var buffer;
	      if (!context) context = buffer = path();
	      type.apply(this, arguments).draw(context, +size.apply(this, arguments));
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    symbol.type = function(_) {
	      return arguments.length ? (type = typeof _ === "function" ? _ : constant$1(_), symbol) : type;
	    };
	
	    symbol.size = function(_) {
	      return arguments.length ? (size = typeof _ === "function" ? _ : constant$1(+_), symbol) : size;
	    };
	
	    symbol.context = function(_) {
	      return arguments.length ? (context = _ == null ? null : _, symbol) : context;
	    };
	
	    return symbol;
	  }
	
	  function noop() {}
	
	  function point(that, x, y) {
	    that._context.bezierCurveTo(
	      (2 * that._x0 + that._x1) / 3,
	      (2 * that._y0 + that._y1) / 3,
	      (that._x0 + 2 * that._x1) / 3,
	      (that._y0 + 2 * that._y1) / 3,
	      (that._x0 + 4 * that._x1 + x) / 6,
	      (that._y0 + 4 * that._y1 + y) / 6
	    );
	  }
	
	  function Basis(context) {
	    this._context = context;
	  }
	
	  Basis.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 3: point(this, this._x1, this._y1); // proceed
	        case 2: this._context.lineTo(this._x1, this._y1); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basis(context) {
	    return new Basis(context);
	  }
	
	  function BasisClosed(context) {
	    this._context = context;
	  }
	
	  BasisClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x2, this._y2);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
	          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x2, this._y2);
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
	        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
	        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basisClosed(context) {
	    return new BasisClosed(context);
	  }
	
	  function BasisOpen(context) {
	    this._context = context;
	  }
	
	  BasisOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
	        case 3: this._point = 4; // proceed
	        default: point(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	    }
	  };
	
	  function basisOpen(context) {
	    return new BasisOpen(context);
	  }
	
	  function Bundle(context, beta) {
	    this._basis = new Basis(context);
	    this._beta = beta;
	  }
	
	  Bundle.prototype = {
	    lineStart: function() {
	      this._x = [];
	      this._y = [];
	      this._basis.lineStart();
	    },
	    lineEnd: function() {
	      var x = this._x,
	          y = this._y,
	          j = x.length - 1;
	
	      if (j > 0) {
	        var x0 = x[0],
	            y0 = y[0],
	            dx = x[j] - x0,
	            dy = y[j] - y0,
	            i = -1,
	            t;
	
	        while (++i <= j) {
	          t = i / j;
	          this._basis.point(
	            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
	            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
	          );
	        }
	      }
	
	      this._x = this._y = null;
	      this._basis.lineEnd();
	    },
	    point: function(x, y) {
	      this._x.push(+x);
	      this._y.push(+y);
	    }
	  };
	
	  var bundle = (function custom(beta) {
	
	    function bundle(context) {
	      return beta === 1 ? new Basis(context) : new Bundle(context, beta);
	    }
	
	    bundle.beta = function(beta) {
	      return custom(+beta);
	    };
	
	    return bundle;
	  })(0.85);
	
	  function point$1(that, x, y) {
	    that._context.bezierCurveTo(
	      that._x1 + that._k * (that._x2 - that._x0),
	      that._y1 + that._k * (that._y2 - that._y0),
	      that._x2 + that._k * (that._x1 - x),
	      that._y2 + that._k * (that._y1 - y),
	      that._x2,
	      that._y2
	    );
	  }
	
	  function Cardinal(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  Cardinal.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x2, this._y2); break;
	        case 3: point$1(this, this._x1, this._y1); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
	        case 2: this._point = 3; // proceed
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinal = (function custom(tension) {
	
	    function cardinal(context) {
	      return new Cardinal(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function CardinalClosed(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  CardinalClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.lineTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          this.point(this._x5, this._y5);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinalClosed = (function custom(tension) {
	
	    function cardinal(context) {
	      return new CardinalClosed(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function CardinalOpen(context, tension) {
	    this._context = context;
	    this._k = (1 - tension) / 6;
	  }
	
	  CardinalOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	        case 3: this._point = 4; // proceed
	        default: point$1(this, x, y); break;
	      }
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var cardinalOpen = (function custom(tension) {
	
	    function cardinal(context) {
	      return new CardinalOpen(context, tension);
	    }
	
	    cardinal.tension = function(tension) {
	      return custom(+tension);
	    };
	
	    return cardinal;
	  })(0);
	
	  function point$2(that, x, y) {
	    var x1 = that._x1,
	        y1 = that._y1,
	        x2 = that._x2,
	        y2 = that._y2;
	
	    if (that._l01_a > epsilon$1) {
	      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
	          n = 3 * that._l01_a * (that._l01_a + that._l12_a);
	      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
	      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
	    }
	
	    if (that._l23_a > epsilon$1) {
	      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
	          m = 3 * that._l23_a * (that._l23_a + that._l12_a);
	      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
	      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
	    }
	
	    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
	  }
	
	  function CatmullRom(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRom.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x2, this._y2); break;
	        case 3: this.point(this, this._x2, this._y2); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; // proceed
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRom = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function CatmullRomClosed(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRomClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
	      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 1: {
	          this._context.moveTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 2: {
	          this._context.lineTo(this._x3, this._y3);
	          this._context.closePath();
	          break;
	        }
	        case 3: {
	          this.point(this._x3, this._y3);
	          this.point(this._x4, this._y4);
	          this.point(this._x5, this._y5);
	          break;
	        }
	      }
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
	        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
	        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRomClosed = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function CatmullRomOpen(context, alpha) {
	    this._context = context;
	    this._alpha = alpha;
	  }
	
	  CatmullRomOpen.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 = this._x2 =
	      this._y0 = this._y1 = this._y2 = NaN;
	      this._l01_a = this._l12_a = this._l23_a =
	      this._l01_2a = this._l12_2a = this._l23_2a =
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	
	      if (this._point) {
	        var x23 = this._x2 - x,
	            y23 = this._y2 - y;
	        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
	      }
	
	      switch (this._point) {
	        case 0: this._point = 1; break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
	        case 3: this._point = 4; // proceed
	        default: point$2(this, x, y); break;
	      }
	
	      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
	      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
	      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
	      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
	    }
	  };
	
	  var catmullRomOpen = (function custom(alpha) {
	
	    function catmullRom(context) {
	      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
	    }
	
	    catmullRom.alpha = function(alpha) {
	      return custom(+alpha);
	    };
	
	    return catmullRom;
	  })(0.5);
	
	  function LinearClosed(context) {
	    this._context = context;
	  }
	
	  LinearClosed.prototype = {
	    areaStart: noop,
	    areaEnd: noop,
	    lineStart: function() {
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (this._point) this._context.closePath();
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      if (this._point) this._context.lineTo(x, y);
	      else this._point = 1, this._context.moveTo(x, y);
	    }
	  };
	
	  function linearClosed(context) {
	    return new LinearClosed(context);
	  }
	
	  function sign(x) {
	    return x < 0 ? -1 : 1;
	  }
	
	  // Calculate the slopes of the tangents (Hermite-type interpolation) based on
	  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic
	  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
	  // NOV(II), P. 443, 1990.
	  function slope3(that, x2, y2) {
	    var h0 = that._x1 - that._x0,
	        h1 = x2 - that._x1,
	        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
	        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
	        p = (s0 * h1 + s1 * h0) / (h0 + h1);
	    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
	  }
	
	  // Calculate a one-sided slope.
	  function slope2(that, t) {
	    var h = that._x1 - that._x0;
	    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
	  }
	
	  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
	  // "you can express cubic Hermite interpolation in terms of cubic Bézier curves
	  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
	  function point$3(that, t0, t1) {
	    var x0 = that._x0,
	        y0 = that._y0,
	        x1 = that._x1,
	        y1 = that._y1,
	        dx = (x1 - x0) / 3;
	    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
	  }
	
	  function MonotoneX(context) {
	    this._context = context;
	  }
	
	  MonotoneX.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x0 = this._x1 =
	      this._y0 = this._y1 =
	      this._t0 = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      switch (this._point) {
	        case 2: this._context.lineTo(this._x1, this._y1); break;
	        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;
	      }
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      var t1 = NaN;
	
	      x = +x, y = +y;
	      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; break;
	        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
	        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;
	      }
	
	      this._x0 = this._x1, this._x1 = x;
	      this._y0 = this._y1, this._y1 = y;
	      this._t0 = t1;
	    }
	  }
	
	  function MonotoneY(context) {
	    this._context = new ReflectContext(context);
	  }
	
	  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
	    MonotoneX.prototype.point.call(this, y, x);
	  };
	
	  function ReflectContext(context) {
	    this._context = context;
	  }
	
	  ReflectContext.prototype = {
	    moveTo: function(x, y) { this._context.moveTo(y, x); },
	    closePath: function() { this._context.closePath(); },
	    lineTo: function(x, y) { this._context.lineTo(y, x); },
	    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
	  };
	
	  function monotoneX(context) {
	    return new MonotoneX(context);
	  }
	
	  function monotoneY(context) {
	    return new MonotoneY(context);
	  }
	
	  function Natural(context) {
	    this._context = context;
	  }
	
	  Natural.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x = [];
	      this._y = [];
	    },
	    lineEnd: function() {
	      var x = this._x,
	          y = this._y,
	          n = x.length;
	
	      if (n) {
	        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
	        if (n === 2) {
	          this._context.lineTo(x[1], y[1]);
	        } else {
	          var px = controlPoints(x),
	              py = controlPoints(y);
	          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
	            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
	          }
	        }
	      }
	
	      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
	      this._line = 1 - this._line;
	      this._x = this._y = null;
	    },
	    point: function(x, y) {
	      this._x.push(+x);
	      this._y.push(+y);
	    }
	  };
	
	  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
	  function controlPoints(x) {
	    var i,
	        n = x.length - 1,
	        m,
	        a = new Array(n),
	        b = new Array(n),
	        r = new Array(n);
	    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
	    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
	    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
	    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
	    a[n - 1] = r[n - 1] / b[n - 1];
	    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
	    b[n - 1] = (x[n] + a[n - 1]) / 2;
	    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
	    return [a, b];
	  }
	
	  function natural(context) {
	    return new Natural(context);
	  }
	
	  function Step(context, t) {
	    this._context = context;
	    this._t = t;
	  }
	
	  Step.prototype = {
	    areaStart: function() {
	      this._line = 0;
	    },
	    areaEnd: function() {
	      this._line = NaN;
	    },
	    lineStart: function() {
	      this._x = this._y = NaN;
	      this._point = 0;
	    },
	    lineEnd: function() {
	      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
	      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
	      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
	    },
	    point: function(x, y) {
	      x = +x, y = +y;
	      switch (this._point) {
	        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
	        case 1: this._point = 2; // proceed
	        default: {
	          if (this._t <= 0) {
	            this._context.lineTo(this._x, y);
	            this._context.lineTo(x, y);
	          } else {
	            var x1 = this._x * (1 - this._t) + x * this._t;
	            this._context.lineTo(x1, this._y);
	            this._context.lineTo(x1, y);
	          }
	          break;
	        }
	      }
	      this._x = x, this._y = y;
	    }
	  };
	
	  function step(context) {
	    return new Step(context, 0.5);
	  }
	
	  function stepBefore(context) {
	    return new Step(context, 0);
	  }
	
	  function stepAfter(context) {
	    return new Step(context, 1);
	  }
	
	  var slice$2 = Array.prototype.slice;
	
	  function none(series, order) {
	    if (!((n = series.length) > 1)) return;
	    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
	      s0 = s1, s1 = series[order[i]];
	      for (var j = 0; j < m; ++j) {
	        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
	      }
	    }
	  }
	
	  function none$1(series) {
	    var n = series.length, o = new Array(n);
	    while (--n >= 0) o[n] = n;
	    return o;
	  }
	
	  function stackValue(d, key) {
	    return d[key];
	  }
	
	  function stack() {
	    var keys = constant$1([]),
	        order = none$1,
	        offset = none,
	        value = stackValue;
	
	    function stack(data) {
	      var kz = keys.apply(this, arguments),
	          i,
	          m = data.length,
	          n = kz.length,
	          sz = new Array(n),
	          oz;
	
	      for (i = 0; i < n; ++i) {
	        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
	          si[j] = sij = [0, +value(data[j], ki, j, data)];
	          sij.data = data[j];
	        }
	        si.key = ki;
	      }
	
	      for (i = 0, oz = order(sz); i < n; ++i) {
	        sz[oz[i]].index = i;
	      }
	
	      offset(sz, oz);
	      return sz;
	    }
	
	    stack.keys = function(_) {
	      return arguments.length ? (keys = typeof _ === "function" ? _ : constant$1(slice$2.call(_)), stack) : keys;
	    };
	
	    stack.value = function(_) {
	      return arguments.length ? (value = typeof _ === "function" ? _ : constant$1(+_), stack) : value;
	    };
	
	    stack.order = function(_) {
	      return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant$1(slice$2.call(_)), stack) : order;
	    };
	
	    stack.offset = function(_) {
	      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
	    };
	
	    return stack;
	  }
	
	  function expand(series, order) {
	    if (!((n = series.length) > 0)) return;
	    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
	      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
	      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
	    }
	    none(series, order);
	  }
	
	  function silhouette(series, order) {
	    if (!((n = series.length) > 0)) return;
	    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
	      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
	      s0[j][1] += s0[j][0] = -y / 2;
	    }
	    none(series, order);
	  }
	
	  function wiggle(series, order) {
	    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
	    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
	      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
	        var si = series[order[i]],
	            sij0 = si[j][1] || 0,
	            sij1 = si[j - 1][1] || 0,
	            s3 = (sij0 - sij1) / 2;
	        for (var k = 0; k < i; ++k) {
	          var sk = series[order[k]],
	              skj0 = sk[j][1] || 0,
	              skj1 = sk[j - 1][1] || 0;
	          s3 += skj0 - skj1;
	        }
	        s1 += sij0, s2 += s3 * sij0;
	      }
	      s0[j - 1][1] += s0[j - 1][0] = y;
	      if (s1) y -= s2 / s1;
	    }
	    s0[j - 1][1] += s0[j - 1][0] = y;
	    none(series, order);
	  }
	
	  function ascending$1(series) {
	    var sums = series.map(sum$1);
	    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });
	  }
	
	  function sum$1(series) {
	    var s = 0, i = -1, n = series.length, v;
	    while (++i < n) if (v = +series[i][1]) s += v;
	    return s;
	  }
	
	  function descending$2(series) {
	    return ascending$1(series).reverse();
	  }
	
	  function insideOut(series) {
	    var n = series.length,
	        i,
	        j,
	        sums = series.map(sum$1),
	        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),
	        top = 0,
	        bottom = 0,
	        tops = [],
	        bottoms = [];
	
	    for (i = 0; i < n; ++i) {
	      j = order[i];
	      if (top < bottom) {
	        top += sums[j];
	        tops.push(j);
	      } else {
	        bottom += sums[j];
	        bottoms.push(j);
	      }
	    }
	
	    return bottoms.reverse().concat(tops);
	  }
	
	  function reverse(series) {
	    return none$1(series).reverse();
	  }
	
	  function define(constructor, factory, prototype) {
	    constructor.prototype = factory.prototype = prototype;
	    prototype.constructor = constructor;
	  }
	
	  function extend(parent, definition) {
	    var prototype = Object.create(parent.prototype);
	    for (var key in definition) prototype[key] = definition[key];
	    return prototype;
	  }
	
	  function Color() {}
	
	  var darker = 0.7;
	  var brighter = 1 / darker;
	
	  var reHex3 = /^#([0-9a-f]{3})$/;
	  var reHex6 = /^#([0-9a-f]{6})$/;
	  var reRgbInteger = /^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/;
	  var reRgbPercent = /^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
	  var reRgbaInteger = /^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var reRgbaPercent = /^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var reHslPercent = /^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
	  var reHslaPercent = /^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
	  var named = {
	    aliceblue: 0xf0f8ff,
	    antiquewhite: 0xfaebd7,
	    aqua: 0x00ffff,
	    aquamarine: 0x7fffd4,
	    azure: 0xf0ffff,
	    beige: 0xf5f5dc,
	    bisque: 0xffe4c4,
	    black: 0x000000,
	    blanchedalmond: 0xffebcd,
	    blue: 0x0000ff,
	    blueviolet: 0x8a2be2,
	    brown: 0xa52a2a,
	    burlywood: 0xdeb887,
	    cadetblue: 0x5f9ea0,
	    chartreuse: 0x7fff00,
	    chocolate: 0xd2691e,
	    coral: 0xff7f50,
	    cornflowerblue: 0x6495ed,
	    cornsilk: 0xfff8dc,
	    crimson: 0xdc143c,
	    cyan: 0x00ffff,
	    darkblue: 0x00008b,
	    darkcyan: 0x008b8b,
	    darkgoldenrod: 0xb8860b,
	    darkgray: 0xa9a9a9,
	    darkgreen: 0x006400,
	    darkgrey: 0xa9a9a9,
	    darkkhaki: 0xbdb76b,
	    darkmagenta: 0x8b008b,
	    darkolivegreen: 0x556b2f,
	    darkorange: 0xff8c00,
	    darkorchid: 0x9932cc,
	    darkred: 0x8b0000,
	    darksalmon: 0xe9967a,
	    darkseagreen: 0x8fbc8f,
	    darkslateblue: 0x483d8b,
	    darkslategray: 0x2f4f4f,
	    darkslategrey: 0x2f4f4f,
	    darkturquoise: 0x00ced1,
	    darkviolet: 0x9400d3,
	    deeppink: 0xff1493,
	    deepskyblue: 0x00bfff,
	    dimgray: 0x696969,
	    dimgrey: 0x696969,
	    dodgerblue: 0x1e90ff,
	    firebrick: 0xb22222,
	    floralwhite: 0xfffaf0,
	    forestgreen: 0x228b22,
	    fuchsia: 0xff00ff,
	    gainsboro: 0xdcdcdc,
	    ghostwhite: 0xf8f8ff,
	    gold: 0xffd700,
	    goldenrod: 0xdaa520,
	    gray: 0x808080,
	    green: 0x008000,
	    greenyellow: 0xadff2f,
	    grey: 0x808080,
	    honeydew: 0xf0fff0,
	    hotpink: 0xff69b4,
	    indianred: 0xcd5c5c,
	    indigo: 0x4b0082,
	    ivory: 0xfffff0,
	    khaki: 0xf0e68c,
	    lavender: 0xe6e6fa,
	    lavenderblush: 0xfff0f5,
	    lawngreen: 0x7cfc00,
	    lemonchiffon: 0xfffacd,
	    lightblue: 0xadd8e6,
	    lightcoral: 0xf08080,
	    lightcyan: 0xe0ffff,
	    lightgoldenrodyellow: 0xfafad2,
	    lightgray: 0xd3d3d3,
	    lightgreen: 0x90ee90,
	    lightgrey: 0xd3d3d3,
	    lightpink: 0xffb6c1,
	    lightsalmon: 0xffa07a,
	    lightseagreen: 0x20b2aa,
	    lightskyblue: 0x87cefa,
	    lightslategray: 0x778899,
	    lightslategrey: 0x778899,
	    lightsteelblue: 0xb0c4de,
	    lightyellow: 0xffffe0,
	    lime: 0x00ff00,
	    limegreen: 0x32cd32,
	    linen: 0xfaf0e6,
	    magenta: 0xff00ff,
	    maroon: 0x800000,
	    mediumaquamarine: 0x66cdaa,
	    mediumblue: 0x0000cd,
	    mediumorchid: 0xba55d3,
	    mediumpurple: 0x9370db,
	    mediumseagreen: 0x3cb371,
	    mediumslateblue: 0x7b68ee,
	    mediumspringgreen: 0x00fa9a,
	    mediumturquoise: 0x48d1cc,
	    mediumvioletred: 0xc71585,
	    midnightblue: 0x191970,
	    mintcream: 0xf5fffa,
	    mistyrose: 0xffe4e1,
	    moccasin: 0xffe4b5,
	    navajowhite: 0xffdead,
	    navy: 0x000080,
	    oldlace: 0xfdf5e6,
	    olive: 0x808000,
	    olivedrab: 0x6b8e23,
	    orange: 0xffa500,
	    orangered: 0xff4500,
	    orchid: 0xda70d6,
	    palegoldenrod: 0xeee8aa,
	    palegreen: 0x98fb98,
	    paleturquoise: 0xafeeee,
	    palevioletred: 0xdb7093,
	    papayawhip: 0xffefd5,
	    peachpuff: 0xffdab9,
	    peru: 0xcd853f,
	    pink: 0xffc0cb,
	    plum: 0xdda0dd,
	    powderblue: 0xb0e0e6,
	    purple: 0x800080,
	    rebeccapurple: 0x663399,
	    red: 0xff0000,
	    rosybrown: 0xbc8f8f,
	    royalblue: 0x4169e1,
	    saddlebrown: 0x8b4513,
	    salmon: 0xfa8072,
	    sandybrown: 0xf4a460,
	    seagreen: 0x2e8b57,
	    seashell: 0xfff5ee,
	    sienna: 0xa0522d,
	    silver: 0xc0c0c0,
	    skyblue: 0x87ceeb,
	    slateblue: 0x6a5acd,
	    slategray: 0x708090,
	    slategrey: 0x708090,
	    snow: 0xfffafa,
	    springgreen: 0x00ff7f,
	    steelblue: 0x4682b4,
	    tan: 0xd2b48c,
	    teal: 0x008080,
	    thistle: 0xd8bfd8,
	    tomato: 0xff6347,
	    turquoise: 0x40e0d0,
	    violet: 0xee82ee,
	    wheat: 0xf5deb3,
	    white: 0xffffff,
	    whitesmoke: 0xf5f5f5,
	    yellow: 0xffff00,
	    yellowgreen: 0x9acd32
	  };
	
	  define(Color, color, {
	    displayable: function() {
	      return this.rgb().displayable();
	    },
	    toString: function() {
	      return this.rgb() + "";
	    }
	  });
	
	  function color(format) {
	    var m;
	    format = (format + "").trim().toLowerCase();
	    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00
	        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
	        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
	        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
	        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
	        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
	        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
	        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
	        : named.hasOwnProperty(format) ? rgbn(named[format])
	        : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
	        : null;
	  }
	
	  function rgbn(n) {
	    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
	  }
	
	  function rgba(r, g, b, a) {
	    if (a <= 0) r = g = b = NaN;
	    return new Rgb(r, g, b, a);
	  }
	
	  function rgbConvert(o) {
	    if (!(o instanceof Color)) o = color(o);
	    if (!o) return new Rgb;
	    o = o.rgb();
	    return new Rgb(o.r, o.g, o.b, o.opacity);
	  }
	
	  function colorRgb(r, g, b, opacity) {
	    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
	  }
	
	  function Rgb(r, g, b, opacity) {
	    this.r = +r;
	    this.g = +g;
	    this.b = +b;
	    this.opacity = +opacity;
	  }
	
	  define(Rgb, colorRgb, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
	    },
	    rgb: function() {
	      return this;
	    },
	    displayable: function() {
	      return (0 <= this.r && this.r <= 255)
	          && (0 <= this.g && this.g <= 255)
	          && (0 <= this.b && this.b <= 255)
	          && (0 <= this.opacity && this.opacity <= 1);
	    },
	    toString: function() {
	      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
	      return (a === 1 ? "rgb(" : "rgba(")
	          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
	          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
	          + Math.max(0, Math.min(255, Math.round(this.b) || 0))
	          + (a === 1 ? ")" : ", " + a + ")");
	    }
	  }));
	
	  function hsla(h, s, l, a) {
	    if (a <= 0) h = s = l = NaN;
	    else if (l <= 0 || l >= 1) h = s = NaN;
	    else if (s <= 0) h = NaN;
	    return new Hsl(h, s, l, a);
	  }
	
	  function hslConvert(o) {
	    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
	    if (!(o instanceof Color)) o = color(o);
	    if (!o) return new Hsl;
	    if (o instanceof Hsl) return o;
	    o = o.rgb();
	    var r = o.r / 255,
	        g = o.g / 255,
	        b = o.b / 255,
	        min = Math.min(r, g, b),
	        max = Math.max(r, g, b),
	        h = NaN,
	        s = max - min,
	        l = (max + min) / 2;
	    if (s) {
	      if (r === max) h = (g - b) / s + (g < b) * 6;
	      else if (g === max) h = (b - r) / s + 2;
	      else h = (r - g) / s + 4;
	      s /= l < 0.5 ? max + min : 2 - max - min;
	      h *= 60;
	    } else {
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return new Hsl(h, s, l, o.opacity);
	  }
	
	  function colorHsl(h, s, l, opacity) {
	    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
	  }
	
	  function Hsl(h, s, l, opacity) {
	    this.h = +h;
	    this.s = +s;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Hsl, colorHsl, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Hsl(this.h, this.s, this.l * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Hsl(this.h, this.s, this.l * k, this.opacity);
	    },
	    rgb: function() {
	      var h = this.h % 360 + (this.h < 0) * 360,
	          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
	          l = this.l,
	          m2 = l + (l < 0.5 ? l : 1 - l) * s,
	          m1 = 2 * l - m2;
	      return new Rgb(
	        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
	        hsl2rgb(h, m1, m2),
	        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
	        this.opacity
	      );
	    },
	    displayable: function() {
	      return (0 <= this.s && this.s <= 1 || isNaN(this.s))
	          && (0 <= this.l && this.l <= 1)
	          && (0 <= this.opacity && this.opacity <= 1);
	    }
	  }));
	
	  /* From FvD 13.37, CSS Color Module Level 3 */
	  function hsl2rgb(h, m1, m2) {
	    return (h < 60 ? m1 + (m2 - m1) * h / 60
	        : h < 180 ? m2
	        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
	        : m1) * 255;
	  }
	
	  var deg2rad = Math.PI / 180;
	  var rad2deg = 180 / Math.PI;
	
	  var Kn = 18;
	  var Xn = 0.950470;
	  var Yn = 1;
	  var Zn = 1.088830;
	  var t0 = 4 / 29;
	  var t1 = 6 / 29;
	  var t2 = 3 * t1 * t1;
	  var t3 = t1 * t1 * t1;
	  function labConvert(o) {
	    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
	    if (o instanceof Hcl) {
	      var h = o.h * deg2rad;
	      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
	    }
	    if (!(o instanceof Rgb)) o = rgbConvert(o);
	    var b = rgb2xyz(o.r),
	        a = rgb2xyz(o.g),
	        l = rgb2xyz(o.b),
	        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
	        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
	        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
	    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
	  }
	
	  function lab(l, a, b, opacity) {
	    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
	  }
	
	  function Lab(l, a, b, opacity) {
	    this.l = +l;
	    this.a = +a;
	    this.b = +b;
	    this.opacity = +opacity;
	  }
	
	  define(Lab, lab, extend(Color, {
	    brighter: function(k) {
	      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	    },
	    darker: function(k) {
	      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
	    },
	    rgb: function() {
	      var y = (this.l + 16) / 116,
	          x = isNaN(this.a) ? y : y + this.a / 500,
	          z = isNaN(this.b) ? y : y - this.b / 200;
	      y = Yn * lab2xyz(y);
	      x = Xn * lab2xyz(x);
	      z = Zn * lab2xyz(z);
	      return new Rgb(
	        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
	        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
	        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),
	        this.opacity
	      );
	    }
	  }));
	
	  function xyz2lab(t) {
	    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
	  }
	
	  function lab2xyz(t) {
	    return t > t1 ? t * t * t : t2 * (t - t0);
	  }
	
	  function xyz2rgb(x) {
	    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
	  }
	
	  function rgb2xyz(x) {
	    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
	  }
	
	  function hclConvert(o) {
	    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
	    if (!(o instanceof Lab)) o = labConvert(o);
	    var h = Math.atan2(o.b, o.a) * rad2deg;
	    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
	  }
	
	  function colorHcl(h, c, l, opacity) {
	    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
	  }
	
	  function Hcl(h, c, l, opacity) {
	    this.h = +h;
	    this.c = +c;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Hcl, colorHcl, extend(Color, {
	    brighter: function(k) {
	      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
	    },
	    darker: function(k) {
	      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
	    },
	    rgb: function() {
	      return labConvert(this).rgb();
	    }
	  }));
	
	  var A = -0.14861;
	  var B = +1.78277;
	  var C = -0.29227;
	  var D = -0.90649;
	  var E = +1.97294;
	  var ED = E * D;
	  var EB = E * B;
	  var BC_DA = B * C - D * A;
	  function cubehelixConvert(o) {
	    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
	    if (!(o instanceof Rgb)) o = rgbConvert(o);
	    var r = o.r / 255,
	        g = o.g / 255,
	        b = o.b / 255,
	        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
	        bl = b - l,
	        k = (E * (g - l) - C * bl) / D,
	        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
	        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
	    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
	  }
	
	  function cubehelix(h, s, l, opacity) {
	    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
	  }
	
	  function Cubehelix(h, s, l, opacity) {
	    this.h = +h;
	    this.s = +s;
	    this.l = +l;
	    this.opacity = +opacity;
	  }
	
	  define(Cubehelix, cubehelix, extend(Color, {
	    brighter: function(k) {
	      k = k == null ? brighter : Math.pow(brighter, k);
	      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	    },
	    darker: function(k) {
	      k = k == null ? darker : Math.pow(darker, k);
	      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
	    },
	    rgb: function() {
	      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
	          l = +this.l,
	          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
	          cosh = Math.cos(h),
	          sinh = Math.sin(h);
	      return new Rgb(
	        255 * (l + a * (A * cosh + B * sinh)),
	        255 * (l + a * (C * cosh + D * sinh)),
	        255 * (l + a * (E * cosh)),
	        this.opacity
	      );
	    }
	  }));
	
	  function basis$1(t1, v0, v1, v2, v3) {
	    var t2 = t1 * t1, t3 = t2 * t1;
	    return ((1 - 3 * t1 + 3 * t2 - t3) * v0
	        + (4 - 6 * t2 + 3 * t3) * v1
	        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
	        + t3 * v3) / 6;
	  }
	
	  function basis$2(values) {
	    var n = values.length - 1;
	    return function(t) {
	      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
	          v1 = values[i],
	          v2 = values[i + 1],
	          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
	          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
	      return basis$1((t - i / n) * n, v0, v1, v2, v3);
	    };
	  }
	
	  function basisClosed$1(values) {
	    var n = values.length;
	    return function(t) {
	      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
	          v0 = values[(i + n - 1) % n],
	          v1 = values[i % n],
	          v2 = values[(i + 1) % n],
	          v3 = values[(i + 2) % n];
	      return basis$1((t - i / n) * n, v0, v1, v2, v3);
	    };
	  }
	
	  function constant$2(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function linear$1(a, d) {
	    return function(t) {
	      return a + t * d;
	    };
	  }
	
	  function exponential$1(a, b, y) {
	    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
	      return Math.pow(a + t * b, y);
	    };
	  }
	
	  function hue(a, b) {
	    var d = b - a;
	    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);
	  }
	
	  function gamma(y) {
	    return (y = +y) === 1 ? nogamma : function(a, b) {
	      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);
	    };
	  }
	
	  function nogamma(a, b) {
	    var d = b - a;
	    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);
	  }
	
	  var interpolateRgb = (function rgbGamma(y) {
	    var color = gamma(y);
	
	    function rgb(start, end) {
	      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),
	          g = color(start.g, end.g),
	          b = color(start.b, end.b),
	          opacity = color(start.opacity, end.opacity);
	      return function(t) {
	        start.r = r(t);
	        start.g = g(t);
	        start.b = b(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	
	    rgb.gamma = rgbGamma;
	
	    return rgb;
	  })(1);
	
	  function rgbSpline(spline) {
	    return function(colors) {
	      var n = colors.length,
	          r = new Array(n),
	          g = new Array(n),
	          b = new Array(n),
	          i, color;
	      for (i = 0; i < n; ++i) {
	        color = colorRgb(colors[i]);
	        r[i] = color.r || 0;
	        g[i] = color.g || 0;
	        b[i] = color.b || 0;
	      }
	      r = spline(r);
	      g = spline(g);
	      b = spline(b);
	      color.opacity = 1;
	      return function(t) {
	        color.r = r(t);
	        color.g = g(t);
	        color.b = b(t);
	        return color + "";
	      };
	    };
	  }
	
	  var rgbBasis = rgbSpline(basis$2);
	  var rgbBasisClosed = rgbSpline(basisClosed$1);
	
	  function array$1(a, b) {
	    var nb = b ? b.length : 0,
	        na = a ? Math.min(nb, a.length) : 0,
	        x = new Array(nb),
	        c = new Array(nb),
	        i;
	
	    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);
	    for (; i < nb; ++i) c[i] = b[i];
	
	    return function(t) {
	      for (i = 0; i < na; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	
	  function date(a, b) {
	    var d = new Date;
	    return a = +a, b -= a, function(t) {
	      return d.setTime(a + b * t), d;
	    };
	  }
	
	  function interpolateNumber(a, b) {
	    return a = +a, b -= a, function(t) {
	      return a + b * t;
	    };
	  }
	
	  function object(a, b) {
	    var i = {},
	        c = {},
	        k;
	
	    if (a === null || typeof a !== "object") a = {};
	    if (b === null || typeof b !== "object") b = {};
	
	    for (k in b) {
	      if (k in a) {
	        i[k] = interpolate(a[k], b[k]);
	      } else {
	        c[k] = b[k];
	      }
	    }
	
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	
	  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
	  var reB = new RegExp(reA.source, "g");
	  function zero(b) {
	    return function() {
	      return b;
	    };
	  }
	
	  function one(b) {
	    return function(t) {
	      return b(t) + "";
	    };
	  }
	
	  function interpolateString(a, b) {
	    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
	        am, // current match in a
	        bm, // current match in b
	        bs, // string preceding current number in b, if any
	        i = -1, // index in s
	        s = [], // string constants and placeholders
	        q = []; // number interpolators
	
	    // Coerce inputs to strings.
	    a = a + "", b = b + "";
	
	    // Interpolate pairs of numbers in a & b.
	    while ((am = reA.exec(a))
	        && (bm = reB.exec(b))) {
	      if ((bs = bm.index) > bi) { // a string precedes the next number in b
	        bs = b.slice(bi, bs);
	        if (s[i]) s[i] += bs; // coalesce with previous string
	        else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
	        if (s[i]) s[i] += bm; // coalesce with previous string
	        else s[++i] = bm;
	      } else { // interpolate non-matching numbers
	        s[++i] = null;
	        q.push({i: i, x: interpolateNumber(am, bm)});
	      }
	      bi = reB.lastIndex;
	    }
	
	    // Add remains of b.
	    if (bi < b.length) {
	      bs = b.slice(bi);
	      if (s[i]) s[i] += bs; // coalesce with previous string
	      else s[++i] = bs;
	    }
	
	    // Special optimization for only a single match.
	    // Otherwise, interpolate each of the numbers and rejoin the string.
	    return s.length < 2 ? (q[0]
	        ? one(q[0].x)
	        : zero(b))
	        : (b = q.length, function(t) {
	            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	            return s.join("");
	          });
	  }
	
	  function interpolate(a, b) {
	    var t = typeof b, c;
	    return b == null || t === "boolean" ? constant$2(b)
	        : (t === "number" ? interpolateNumber
	        : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
	        : b instanceof color ? interpolateRgb
	        : b instanceof Date ? date
	        : Array.isArray(b) ? array$1
	        : isNaN(b) ? object
	        : interpolateNumber)(a, b);
	  }
	
	  function interpolateRound(a, b) {
	    return a = +a, b -= a, function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	
	  var degrees = 180 / Math.PI;
	
	  var identity$2 = {
	    translateX: 0,
	    translateY: 0,
	    rotate: 0,
	    skewX: 0,
	    scaleX: 1,
	    scaleY: 1
	  };
	
	  function decompose(a, b, c, d, e, f) {
	    var scaleX, scaleY, skewX;
	    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
	    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
	    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
	    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
	    return {
	      translateX: e,
	      translateY: f,
	      rotate: Math.atan2(b, a) * degrees,
	      skewX: Math.atan(skewX) * degrees,
	      scaleX: scaleX,
	      scaleY: scaleY
	    };
	  }
	
	  var cssNode;
	  var cssRoot;
	  var cssView;
	  var svgNode;
	  function parseCss(value) {
	    if (value === "none") return identity$2;
	    if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
	    cssNode.style.transform = value;
	    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
	    cssRoot.removeChild(cssNode);
	    value = value.slice(7, -1).split(",");
	    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
	  }
	
	  function parseSvg(value) {
	    if (value == null) return identity$2;
	    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
	    svgNode.setAttribute("transform", value);
	    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;
	    value = value.matrix;
	    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
	  }
	
	  function interpolateTransform(parse, pxComma, pxParen, degParen) {
	
	    function pop(s) {
	      return s.length ? s.pop() + " " : "";
	    }
	
	    function translate(xa, ya, xb, yb, s, q) {
	      if (xa !== xb || ya !== yb) {
	        var i = s.push("translate(", null, pxComma, null, pxParen);
	        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
	      } else if (xb || yb) {
	        s.push("translate(" + xb + pxComma + yb + pxParen);
	      }
	    }
	
	    function rotate(a, b, s, q) {
	      if (a !== b) {
	        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
	        q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b)});
	      } else if (b) {
	        s.push(pop(s) + "rotate(" + b + degParen);
	      }
	    }
	
	    function skewX(a, b, s, q) {
	      if (a !== b) {
	        q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b)});
	      } else if (b) {
	        s.push(pop(s) + "skewX(" + b + degParen);
	      }
	    }
	
	    function scale(xa, ya, xb, yb, s, q) {
	      if (xa !== xb || ya !== yb) {
	        var i = s.push(pop(s) + "scale(", null, ",", null, ")");
	        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});
	      } else if (xb !== 1 || yb !== 1) {
	        s.push(pop(s) + "scale(" + xb + "," + yb + ")");
	      }
	    }
	
	    return function(a, b) {
	      var s = [], // string constants and placeholders
	          q = []; // number interpolators
	      a = parse(a), b = parse(b);
	      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
	      rotate(a.rotate, b.rotate, s, q);
	      skewX(a.skewX, b.skewX, s, q);
	      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
	      a = b = null; // gc
	      return function(t) {
	        var i = -1, n = q.length, o;
	        while (++i < n) s[(o = q[i]).i] = o.x(t);
	        return s.join("");
	      };
	    };
	  }
	
	  var interpolateTransform$1 = interpolateTransform(parseCss, "px, ", "px)", "deg)");
	  var interpolateTransform$2 = interpolateTransform(parseSvg, ", ", ")", ")");
	
	  var rho = Math.SQRT2;
	  var rho2 = 2;
	  var rho4 = 4;
	  var epsilon2 = 1e-12;
	  function cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	
	  function sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	
	  function tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	
	  // p0 = [ux0, uy0, w0]
	  // p1 = [ux1, uy1, w1]
	  function interpolateZoom(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
	        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
	        dx = ux1 - ux0,
	        dy = uy1 - uy0,
	        d2 = dx * dx + dy * dy,
	        i,
	        S;
	
	    // Special case for u0 ≅ u1.
	    if (d2 < epsilon2) {
	      S = Math.log(w1 / w0) / rho;
	      i = function(t) {
	        return [
	          ux0 + t * dx,
	          uy0 + t * dy,
	          w0 * Math.exp(rho * t * S)
	        ];
	      }
	    }
	
	    // General case.
	    else {
	      var d1 = Math.sqrt(d2),
	          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
	          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
	          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
	          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
	      S = (r1 - r0) / rho;
	      i = function(t) {
	        var s = t * S,
	            coshr0 = cosh(r0),
	            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
	        return [
	          ux0 + u * dx,
	          uy0 + u * dy,
	          w0 * coshr0 / cosh(rho * s + r0)
	        ];
	      }
	    }
	
	    i.duration = S * 1000;
	
	    return i;
	  }
	
	  function hsl(hue) {
	    return function(start, end) {
	      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),
	          s = nogamma(start.s, end.s),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.s = s(t);
	        start.l = l(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	  }
	
	  var hsl$1 = hsl(hue);
	  var hslLong = hsl(nogamma);
	
	  function lab$1(start, end) {
	    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),
	        a = nogamma(start.a, end.a),
	        b = nogamma(start.b, end.b),
	        opacity = nogamma(start.opacity, end.opacity);
	    return function(t) {
	      start.l = l(t);
	      start.a = a(t);
	      start.b = b(t);
	      start.opacity = opacity(t);
	      return start + "";
	    };
	  }
	
	  function hcl(hue) {
	    return function(start, end) {
	      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),
	          c = nogamma(start.c, end.c),
	          l = nogamma(start.l, end.l),
	          opacity = nogamma(start.opacity, end.opacity);
	      return function(t) {
	        start.h = h(t);
	        start.c = c(t);
	        start.l = l(t);
	        start.opacity = opacity(t);
	        return start + "";
	      };
	    }
	  }
	
	  var hcl$1 = hcl(hue);
	  var hclLong = hcl(nogamma);
	
	  function cubehelix$1(hue) {
	    return (function cubehelixGamma(y) {
	      y = +y;
	
	      function cubehelix$$(start, end) {
	        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),
	            s = nogamma(start.s, end.s),
	            l = nogamma(start.l, end.l),
	            opacity = nogamma(start.opacity, end.opacity);
	        return function(t) {
	          start.h = h(t);
	          start.s = s(t);
	          start.l = l(Math.pow(t, y));
	          start.opacity = opacity(t);
	          return start + "";
	        };
	      }
	
	      cubehelix$$.gamma = cubehelixGamma;
	
	      return cubehelix$$;
	    })(1);
	  }
	
	  var cubehelix$2 = cubehelix$1(hue);
	  var interpolateCubehelixLong = cubehelix$1(nogamma);
	
	  function quantize(interpolator, n) {
	    var samples = new Array(n);
	    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
	    return samples;
	  }
	
	  var noop$1 = {value: function() {}};
	
	  function dispatch() {
	    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
	      if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);
	      _[t] = [];
	    }
	    return new Dispatch(_);
	  }
	
	  function Dispatch(_) {
	    this._ = _;
	  }
	
	  function parseTypenames(typenames, types) {
	    return typenames.trim().split(/^|\s+/).map(function(t) {
	      var name = "", i = t.indexOf(".");
	      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
	      if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
	      return {type: t, name: name};
	    });
	  }
	
	  Dispatch.prototype = dispatch.prototype = {
	    constructor: Dispatch,
	    on: function(typename, callback) {
	      var _ = this._,
	          T = parseTypenames(typename + "", _),
	          t,
	          i = -1,
	          n = T.length;
	
	      // If no callback was specified, return the callback of the given type and name.
	      if (arguments.length < 2) {
	        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
	        return;
	      }
	
	      // If a type was specified, set the callback for the given type and name.
	      // Otherwise, if a null callback was specified, remove callbacks of the given name.
	      if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
	      while (++i < n) {
	        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);
	        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);
	      }
	
	      return this;
	    },
	    copy: function() {
	      var copy = {}, _ = this._;
	      for (var t in _) copy[t] = _[t].slice();
	      return new Dispatch(copy);
	    },
	    call: function(type, that) {
	      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
	      if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
	      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
	    },
	    apply: function(type, that, args) {
	      if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
	      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
	    }
	  };
	
	  function get(type, name) {
	    for (var i = 0, n = type.length, c; i < n; ++i) {
	      if ((c = type[i]).name === name) {
	        return c.value;
	      }
	    }
	  }
	
	  function set$1(type, name, callback) {
	    for (var i = 0, n = type.length; i < n; ++i) {
	      if (type[i].name === name) {
	        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));
	        break;
	      }
	    }
	    if (callback != null) type.push({name: name, value: callback});
	    return type;
	  }
	
	  function objectConverter(columns) {
	    return new Function("d", "return {" + columns.map(function(name, i) {
	      return JSON.stringify(name) + ": d[" + i + "]";
	    }).join(",") + "}");
	  }
	
	  function customConverter(columns, f) {
	    var object = objectConverter(columns);
	    return function(row, i) {
	      return f(object(row), i, columns);
	    };
	  }
	
	  // Compute unique columns in order of discovery.
	  function inferColumns(rows) {
	    var columnSet = Object.create(null),
	        columns = [];
	
	    rows.forEach(function(row) {
	      for (var column in row) {
	        if (!(column in columnSet)) {
	          columns.push(columnSet[column] = column);
	        }
	      }
	    });
	
	    return columns;
	  }
	
	  function dsv(delimiter) {
	    var reFormat = new RegExp("[\"" + delimiter + "\n]"),
	        delimiterCode = delimiter.charCodeAt(0);
	
	    function parse(text, f) {
	      var convert, columns, rows = parseRows(text, function(row, i) {
	        if (convert) return convert(row, i - 1);
	        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
	      });
	      rows.columns = columns;
	      return rows;
	    }
	
	    function parseRows(text, f) {
	      var EOL = {}, // sentinel value for end-of-line
	          EOF = {}, // sentinel value for end-of-file
	          rows = [], // output rows
	          N = text.length,
	          I = 0, // current character index
	          n = 0, // the current line number
	          t, // the current token
	          eol; // is the current token followed by EOL?
	
	      function token() {
	        if (I >= N) return EOF; // special case: end of file
	        if (eol) return eol = false, EOL; // special case: end of line
	
	        // special case: quotes
	        var j = I, c;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.slice(j + 1, i).replace(/""/g, "\"");
	        }
	
	        // common case: find next delimiter or newline
	        while (I < N) {
	          var k = 1;
	          c = text.charCodeAt(I++);
	          if (c === 10) eol = true; // \n
	          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \r|\r\n
	          else if (c !== delimiterCode) continue;
	          return text.slice(j, I - k);
	        }
	
	        // special case: last token before EOF
	        return text.slice(j);
	      }
	
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && (a = f(a, n++)) == null) continue;
	        rows.push(a);
	      }
	
	      return rows;
	    }
	
	    function format(rows, columns) {
	      if (columns == null) columns = inferColumns(rows);
	      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {
	        return columns.map(function(column) {
	          return formatValue(row[column]);
	        }).join(delimiter);
	      })).join("\n");
	    }
	
	    function formatRows(rows) {
	      return rows.map(formatRow).join("\n");
	    }
	
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	
	    function formatValue(text) {
	      return text == null ? ""
	          : reFormat.test(text += "") ? "\"" + text.replace(/\"/g, "\"\"") + "\""
	          : text;
	    }
	
	    return {
	      parse: parse,
	      parseRows: parseRows,
	      format: format,
	      formatRows: formatRows
	    };
	  }
	
	  var csv = dsv(",");
	
	  var csvParse = csv.parse;
	  var csvParseRows = csv.parseRows;
	  var csvFormat = csv.format;
	  var csvFormatRows = csv.formatRows;
	
	  var tsv = dsv("\t");
	
	  var tsvParse = tsv.parse;
	  var tsvParseRows = tsv.parseRows;
	  var tsvFormat = tsv.format;
	  var tsvFormatRows = tsv.formatRows;
	
	  function request(url, callback) {
	    var request,
	        event = dispatch("beforesend", "progress", "load", "error"),
	        mimeType,
	        headers = map$1(),
	        xhr = new XMLHttpRequest,
	        user = null,
	        password = null,
	        response,
	        responseType,
	        timeout = 0;
	
	    // If IE does not support CORS, use XDomainRequest.
	    if (typeof XDomainRequest !== "undefined"
	        && !("withCredentials" in xhr)
	        && /^(http(s)?:)?\/\//.test(url)) xhr = new XDomainRequest;
	
	    "onload" in xhr
	        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond
	        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };
	
	    function respond(o) {
	      var status = xhr.status, result;
	      if (!status && hasResponse(xhr)
	          || status >= 200 && status < 300
	          || status === 304) {
	        if (response) {
	          try {
	            result = response.call(request, xhr);
	          } catch (e) {
	            event.call("error", request, e);
	            return;
	          }
	        } else {
	          result = xhr;
	        }
	        event.call("load", request, result);
	      } else {
	        event.call("error", request, o);
	      }
	    }
	
	    xhr.onprogress = function(e) {
	      event.call("progress", request, e);
	    };
	
	    request = {
	      header: function(name, value) {
	        name = (name + "").toLowerCase();
	        if (arguments.length < 2) return headers.get(name);
	        if (value == null) headers.remove(name);
	        else headers.set(name, value + "");
	        return request;
	      },
	
	      // If mimeType is non-null and no Accept header is set, a default is used.
	      mimeType: function(value) {
	        if (!arguments.length) return mimeType;
	        mimeType = value == null ? null : value + "";
	        return request;
	      },
	
	      // Specifies what type the response value should take;
	      // for instance, arraybuffer, blob, document, or text.
	      responseType: function(value) {
	        if (!arguments.length) return responseType;
	        responseType = value;
	        return request;
	      },
	
	      timeout: function(value) {
	        if (!arguments.length) return timeout;
	        timeout = +value;
	        return request;
	      },
	
	      user: function(value) {
	        return arguments.length < 1 ? user : (user = value == null ? null : value + "", request);
	      },
	
	      password: function(value) {
	        return arguments.length < 1 ? password : (password = value == null ? null : value + "", request);
	      },
	
	      // Specify how to convert the response content to a specific type;
	      // changes the callback value on "load" events.
	      response: function(value) {
	        response = value;
	        return request;
	      },
	
	      // Alias for send("GET", …).
	      get: function(data, callback) {
	        return request.send("GET", data, callback);
	      },
	
	      // Alias for send("POST", …).
	      post: function(data, callback) {
	        return request.send("POST", data, callback);
	      },
	
	      // If callback is non-null, it will be used for error and load events.
	      send: function(method, data, callback) {
	        xhr.open(method, url, true, user, password);
	        if (mimeType != null && !headers.has("accept")) headers.set("accept", mimeType + ",*/*");
	        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });
	        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);
	        if (responseType != null) xhr.responseType = responseType;
	        if (timeout > 0) xhr.timeout = timeout;
	        if (callback == null && typeof data === "function") callback = data, data = null;
	        if (callback != null && callback.length === 1) callback = fixCallback(callback);
	        if (callback != null) request.on("error", callback).on("load", function(xhr) { callback(null, xhr); });
	        event.call("beforesend", request, xhr);
	        xhr.send(data == null ? null : data);
	        return request;
	      },
	
	      abort: function() {
	        xhr.abort();
	        return request;
	      },
	
	      on: function() {
	        var value = event.on.apply(event, arguments);
	        return value === event ? request : value;
	      }
	    };
	
	    if (callback != null) {
	      if (typeof callback !== "function") throw new Error("invalid callback: " + callback);
	      return request.get(callback);
	    }
	
	    return request;
	  }
	
	  function fixCallback(callback) {
	    return function(error, xhr) {
	      callback(error == null ? xhr : null);
	    };
	  }
	
	  function hasResponse(xhr) {
	    var type = xhr.responseType;
	    return type && type !== "text"
	        ? xhr.response // null on error
	        : xhr.responseText; // "" on error
	  }
	
	  function type(defaultMimeType, response) {
	    return function(url, callback) {
	      var r = request(url).mimeType(defaultMimeType).response(response);
	      if (callback != null) {
	        if (typeof callback !== "function") throw new Error("invalid callback: " + callback);
	        return r.get(callback);
	      }
	      return r;
	    };
	  }
	
	  var html = type("text/html", function(xhr) {
	    return document.createRange().createContextualFragment(xhr.responseText);
	  });
	
	  var json = type("application/json", function(xhr) {
	    return JSON.parse(xhr.responseText);
	  });
	
	  var text = type("text/plain", function(xhr) {
	    return xhr.responseText;
	  });
	
	  var xml = type("application/xml", function(xhr) {
	    var xml = xhr.responseXML;
	    if (!xml) throw new Error("parse error");
	    return xml;
	  });
	
	  function dsv$1(defaultMimeType, parse) {
	    return function(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var r = request(url).mimeType(defaultMimeType);
	      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };
	      r.row(row);
	      return callback ? r.get(callback) : r;
	    };
	  }
	
	  function responseOf(parse, row) {
	    return function(request) {
	      return parse(request.responseText, row);
	    };
	  }
	
	  var csv$1 = dsv$1("text/csv", csvParse);
	
	  var tsv$1 = dsv$1("text/tab-separated-values", tsvParse);
	
	  var frame = 0;
	  var timeout = 0;
	  var interval = 0;
	  var pokeDelay = 1000;
	  var taskHead;
	  var taskTail;
	  var clockLast = 0;
	  var clockNow = 0;
	  var clockSkew = 0;
	  var clock = typeof performance === "object" && performance.now ? performance : Date;
	  var setFrame = typeof requestAnimationFrame === "function"
	          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)
	          : function(f) { setTimeout(f, 17); };
	  function now() {
	    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
	  }
	
	  function clearNow() {
	    clockNow = 0;
	  }
	
	  function Timer() {
	    this._call =
	    this._time =
	    this._next = null;
	  }
	
	  Timer.prototype = timer.prototype = {
	    constructor: Timer,
	    restart: function(callback, delay, time) {
	      if (typeof callback !== "function") throw new TypeError("callback is not a function");
	      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
	      if (!this._next && taskTail !== this) {
	        if (taskTail) taskTail._next = this;
	        else taskHead = this;
	        taskTail = this;
	      }
	      this._call = callback;
	      this._time = time;
	      sleep();
	    },
	    stop: function() {
	      if (this._call) {
	        this._call = null;
	        this._time = Infinity;
	        sleep();
	      }
	    }
	  };
	
	  function timer(callback, delay, time) {
	    var t = new Timer;
	    t.restart(callback, delay, time);
	    return t;
	  }
	
	  function timerFlush() {
	    now(); // Get the current time, if not already set.
	    ++frame; // Pretend we’ve set an alarm, if we haven’t already.
	    var t = taskHead, e;
	    while (t) {
	      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
	      t = t._next;
	    }
	    --frame;
	  }
	
	  function wake(time) {
	    clockNow = (clockLast = time || clock.now()) + clockSkew;
	    frame = timeout = 0;
	    try {
	      timerFlush();
	    } finally {
	      frame = 0;
	      nap();
	      clockNow = 0;
	    }
	  }
	
	  function poke$1() {
	    var now = clock.now(), delay = now - clockLast;
	    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
	  }
	
	  function nap() {
	    var t0, t1 = taskHead, t2, time = Infinity;
	    while (t1) {
	      if (t1._call) {
	        if (time > t1._time) time = t1._time;
	        t0 = t1, t1 = t1._next;
	      } else {
	        t2 = t1._next, t1._next = null;
	        t1 = t0 ? t0._next = t2 : taskHead = t2;
	      }
	    }
	    taskTail = t0;
	    sleep(time);
	  }
	
	  function sleep(time) {
	    if (frame) return; // Soonest alarm already set, or will be.
	    if (timeout) timeout = clearTimeout(timeout);
	    var delay = time - clockNow;
	    if (delay > 24) {
	      if (time < Infinity) timeout = setTimeout(wake, delay);
	      if (interval) interval = clearInterval(interval);
	    } else {
	      if (!interval) interval = setInterval(poke$1, pokeDelay);
	      frame = 1, setFrame(wake);
	    }
	  }
	
	  function timeout$1(callback, delay, time) {
	    var t = new Timer;
	    delay = delay == null ? 0 : +delay;
	    t.restart(function(elapsed) {
	      t.stop();
	      callback(elapsed + delay);
	    }, delay, time);
	    return t;
	  }
	
	  function interval$1(callback, delay, time) {
	    var t = new Timer, total = delay;
	    if (delay == null) return t.restart(callback, delay, time), t;
	    delay = +delay, time = time == null ? now() : +time;
	    t.restart(function tick(elapsed) {
	      elapsed += total;
	      t.restart(tick, total += delay, time);
	      callback(elapsed);
	    }, delay, time);
	    return t;
	  }
	
	var   t0$1 = new Date;
	var   t1$1 = new Date;
	  function newInterval(floori, offseti, count, field) {
	
	    function interval(date) {
	      return floori(date = new Date(+date)), date;
	    }
	
	    interval.floor = interval;
	
	    interval.ceil = function(date) {
	      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
	    };
	
	    interval.round = function(date) {
	      var d0 = interval(date),
	          d1 = interval.ceil(date);
	      return date - d0 < d1 - date ? d0 : d1;
	    };
	
	    interval.offset = function(date, step) {
	      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
	    };
	
	    interval.range = function(start, stop, step) {
	      var range = [];
	      start = interval.ceil(start);
	      step = step == null ? 1 : Math.floor(step);
	      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
	      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)
	      return range;
	    };
	
	    interval.filter = function(test) {
	      return newInterval(function(date) {
	        while (floori(date), !test(date)) date.setTime(date - 1);
	      }, function(date, step) {
	        while (--step >= 0) while (offseti(date, 1), !test(date));
	      });
	    };
	
	    if (count) {
	      interval.count = function(start, end) {
	        t0$1.setTime(+start), t1$1.setTime(+end);
	        floori(t0$1), floori(t1$1);
	        return Math.floor(count(t0$1, t1$1));
	      };
	
	      interval.every = function(step) {
	        step = Math.floor(step);
	        return !isFinite(step) || !(step > 0) ? null
	            : !(step > 1) ? interval
	            : interval.filter(field
	                ? function(d) { return field(d) % step === 0; }
	                : function(d) { return interval.count(0, d) % step === 0; });
	      };
	    }
	
	    return interval;
	  }
	
	  var millisecond = newInterval(function() {
	    // noop
	  }, function(date, step) {
	    date.setTime(+date + step);
	  }, function(start, end) {
	    return end - start;
	  });
	
	  // An optimized implementation for this simple case.
	  millisecond.every = function(k) {
	    k = Math.floor(k);
	    if (!isFinite(k) || !(k > 0)) return null;
	    if (!(k > 1)) return millisecond;
	    return newInterval(function(date) {
	      date.setTime(Math.floor(date / k) * k);
	    }, function(date, step) {
	      date.setTime(+date + step * k);
	    }, function(start, end) {
	      return (end - start) / k;
	    });
	  };
	
	  var milliseconds = millisecond.range;
	
	  var durationSecond = 1e3;
	  var durationMinute = 6e4;
	  var durationHour = 36e5;
	  var durationDay = 864e5;
	  var durationWeek = 6048e5;
	
	  var second = newInterval(function(date) {
	    date.setTime(Math.floor(date / durationSecond) * durationSecond);
	  }, function(date, step) {
	    date.setTime(+date + step * durationSecond);
	  }, function(start, end) {
	    return (end - start) / durationSecond;
	  }, function(date) {
	    return date.getUTCSeconds();
	  });
	
	  var seconds = second.range;
	
	  var minute = newInterval(function(date) {
	    date.setTime(Math.floor(date / durationMinute) * durationMinute);
	  }, function(date, step) {
	    date.setTime(+date + step * durationMinute);
	  }, function(start, end) {
	    return (end - start) / durationMinute;
	  }, function(date) {
	    return date.getMinutes();
	  });
	
	  var minutes = minute.range;
	
	  var hour = newInterval(function(date) {
	    var offset = date.getTimezoneOffset() * durationMinute % durationHour;
	    if (offset < 0) offset += durationHour;
	    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);
	  }, function(date, step) {
	    date.setTime(+date + step * durationHour);
	  }, function(start, end) {
	    return (end - start) / durationHour;
	  }, function(date) {
	    return date.getHours();
	  });
	
	  var hours = hour.range;
	
	  var day = newInterval(function(date) {
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setDate(date.getDate() + step);
	  }, function(start, end) {
	    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	
	  var days = day.range;
	
	  function weekday(i) {
	    return newInterval(function(date) {
	      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
	      date.setHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setDate(date.getDate() + step * 7);
	    }, function(start, end) {
	      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
	    });
	  }
	
	  var timeWeek = weekday(0);
	  var timeMonday = weekday(1);
	  var tuesday = weekday(2);
	  var wednesday = weekday(3);
	  var thursday = weekday(4);
	  var friday = weekday(5);
	  var saturday = weekday(6);
	
	  var sundays = timeWeek.range;
	  var mondays = timeMonday.range;
	  var tuesdays = tuesday.range;
	  var wednesdays = wednesday.range;
	  var thursdays = thursday.range;
	  var fridays = friday.range;
	  var saturdays = saturday.range;
	
	  var month = newInterval(function(date) {
	    date.setDate(1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setMonth(date.getMonth() + step);
	  }, function(start, end) {
	    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
	  }, function(date) {
	    return date.getMonth();
	  });
	
	  var months = month.range;
	
	  var year = newInterval(function(date) {
	    date.setMonth(0, 1);
	    date.setHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setFullYear(date.getFullYear() + step);
	  }, function(start, end) {
	    return end.getFullYear() - start.getFullYear();
	  }, function(date) {
	    return date.getFullYear();
	  });
	
	  // An optimized implementation for this simple case.
	  year.every = function(k) {
	    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	      date.setFullYear(Math.floor(date.getFullYear() / k) * k);
	      date.setMonth(0, 1);
	      date.setHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setFullYear(date.getFullYear() + step * k);
	    });
	  };
	
	  var years = year.range;
	
	  var utcMinute = newInterval(function(date) {
	    date.setUTCSeconds(0, 0);
	  }, function(date, step) {
	    date.setTime(+date + step * durationMinute);
	  }, function(start, end) {
	    return (end - start) / durationMinute;
	  }, function(date) {
	    return date.getUTCMinutes();
	  });
	
	  var utcMinutes = utcMinute.range;
	
	  var utcHour = newInterval(function(date) {
	    date.setUTCMinutes(0, 0, 0);
	  }, function(date, step) {
	    date.setTime(+date + step * durationHour);
	  }, function(start, end) {
	    return (end - start) / durationHour;
	  }, function(date) {
	    return date.getUTCHours();
	  });
	
	  var utcHours = utcHour.range;
	
	  var utcDay = newInterval(function(date) {
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCDate(date.getUTCDate() + step);
	  }, function(start, end) {
	    return (end - start) / durationDay;
	  }, function(date) {
	    return date.getUTCDate() - 1;
	  });
	
	  var utcDays = utcDay.range;
	
	  function utcWeekday(i) {
	    return newInterval(function(date) {
	      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
	      date.setUTCHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setUTCDate(date.getUTCDate() + step * 7);
	    }, function(start, end) {
	      return (end - start) / durationWeek;
	    });
	  }
	
	  var utcWeek = utcWeekday(0);
	  var utcMonday = utcWeekday(1);
	  var utcTuesday = utcWeekday(2);
	  var utcWednesday = utcWeekday(3);
	  var utcThursday = utcWeekday(4);
	  var utcFriday = utcWeekday(5);
	  var utcSaturday = utcWeekday(6);
	
	  var utcSundays = utcWeek.range;
	  var utcMondays = utcMonday.range;
	  var utcTuesdays = utcTuesday.range;
	  var utcWednesdays = utcWednesday.range;
	  var utcThursdays = utcThursday.range;
	  var utcFridays = utcFriday.range;
	  var utcSaturdays = utcSaturday.range;
	
	  var utcMonth = newInterval(function(date) {
	    date.setUTCDate(1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCMonth(date.getUTCMonth() + step);
	  }, function(start, end) {
	    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
	  }, function(date) {
	    return date.getUTCMonth();
	  });
	
	  var utcMonths = utcMonth.range;
	
	  var utcYear = newInterval(function(date) {
	    date.setUTCMonth(0, 1);
	    date.setUTCHours(0, 0, 0, 0);
	  }, function(date, step) {
	    date.setUTCFullYear(date.getUTCFullYear() + step);
	  }, function(start, end) {
	    return end.getUTCFullYear() - start.getUTCFullYear();
	  }, function(date) {
	    return date.getUTCFullYear();
	  });
	
	  // An optimized implementation for this simple case.
	  utcYear.every = function(k) {
	    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
	      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
	      date.setUTCMonth(0, 1);
	      date.setUTCHours(0, 0, 0, 0);
	    }, function(date, step) {
	      date.setUTCFullYear(date.getUTCFullYear() + step * k);
	    });
	  };
	
	  var utcYears = utcYear.range;
	
	  // Computes the decimal coefficient and exponent of the specified number x with
	  // significant digits p, where x is positive and p is in [1, 21] or undefined.
	  // For example, formatDecimal(1.23) returns ["123", 0].
	  function formatDecimal(x, p) {
	    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
	    var i, coefficient = x.slice(0, i);
	
	    // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
	    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
	    return [
	      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
	      +x.slice(i + 1)
	    ];
	  }
	
	  function exponent$1(x) {
	    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
	  }
	
	  function formatGroup(grouping, thousands) {
	    return function(value, width) {
	      var i = value.length,
	          t = [],
	          j = 0,
	          g = grouping[0],
	          length = 0;
	
	      while (i > 0 && g > 0) {
	        if (length + g + 1 > width) g = Math.max(1, width - length);
	        t.push(value.substring(i -= g, i + g));
	        if ((length += g + 1) > width) break;
	        g = grouping[j = (j + 1) % grouping.length];
	      }
	
	      return t.reverse().join(thousands);
	    };
	  }
	
	  function formatDefault(x, p) {
	    x = x.toPrecision(p);
	
	    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
	      switch (x[i]) {
	        case ".": i0 = i1 = i; break;
	        case "0": if (i0 === 0) i0 = i; i1 = i; break;
	        case "e": break out;
	        default: if (i0 > 0) i0 = 0; break;
	      }
	    }
	
	    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
	  }
	
	  var prefixExponent;
	
	  function formatPrefixAuto(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1],
	        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
	        n = coefficient.length;
	    return i === n ? coefficient
	        : i > n ? coefficient + new Array(i - n + 1).join("0")
	        : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
	        : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
	  }
	
	  function formatRounded(x, p) {
	    var d = formatDecimal(x, p);
	    if (!d) return x + "";
	    var coefficient = d[0],
	        exponent = d[1];
	    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
	        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
	        : coefficient + new Array(exponent - coefficient.length + 2).join("0");
	  }
	
	  var formatTypes = {
	    "": formatDefault,
	    "%": function(x, p) { return (x * 100).toFixed(p); },
	    "b": function(x) { return Math.round(x).toString(2); },
	    "c": function(x) { return x + ""; },
	    "d": function(x) { return Math.round(x).toString(10); },
	    "e": function(x, p) { return x.toExponential(p); },
	    "f": function(x, p) { return x.toFixed(p); },
	    "g": function(x, p) { return x.toPrecision(p); },
	    "o": function(x) { return Math.round(x).toString(8); },
	    "p": function(x, p) { return formatRounded(x * 100, p); },
	    "r": formatRounded,
	    "s": formatPrefixAuto,
	    "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
	    "x": function(x) { return Math.round(x).toString(16); }
	  };
	
	  // [[fill]align][sign][symbol][0][width][,][.precision][type]
	  var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
	
	  function formatSpecifier(specifier) {
	    return new FormatSpecifier(specifier);
	  }
	
	  function FormatSpecifier(specifier) {
	    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
	
	    var match,
	        fill = match[1] || " ",
	        align = match[2] || ">",
	        sign = match[3] || "-",
	        symbol = match[4] || "",
	        zero = !!match[5],
	        width = match[6] && +match[6],
	        comma = !!match[7],
	        precision = match[8] && +match[8].slice(1),
	        type = match[9] || "";
	
	    // The "n" type is an alias for ",g".
	    if (type === "n") comma = true, type = "g";
	
	    // Map invalid types to the default format.
	    else if (!formatTypes[type]) type = "";
	
	    // If zero fill is specified, padding goes after sign and before digits.
	    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";
	
	    this.fill = fill;
	    this.align = align;
	    this.sign = sign;
	    this.symbol = symbol;
	    this.zero = zero;
	    this.width = width;
	    this.comma = comma;
	    this.precision = precision;
	    this.type = type;
	  }
	
	  FormatSpecifier.prototype.toString = function() {
	    return this.fill
	        + this.align
	        + this.sign
	        + this.symbol
	        + (this.zero ? "0" : "")
	        + (this.width == null ? "" : Math.max(1, this.width | 0))
	        + (this.comma ? "," : "")
	        + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
	        + this.type;
	  };
	
	  var prefixes = ["y","z","a","f","p","n","\xB5","m","","k","M","G","T","P","E","Z","Y"];
	
	  function identity$3(x) {
	    return x;
	  }
	
	  function formatLocale(locale) {
	    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,
	        currency = locale.currency,
	        decimal = locale.decimal;
	
	    function newFormat(specifier) {
	      specifier = formatSpecifier(specifier);
	
	      var fill = specifier.fill,
	          align = specifier.align,
	          sign = specifier.sign,
	          symbol = specifier.symbol,
	          zero = specifier.zero,
	          width = specifier.width,
	          comma = specifier.comma,
	          precision = specifier.precision,
	          type = specifier.type;
	
	      // Compute the prefix and suffix.
	      // For SI-prefix, the suffix is lazily computed.
	      var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
	          suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";
	
	      // What format function should we use?
	      // Is this an integer type?
	      // Can this type generate exponential notation?
	      var formatType = formatTypes[type],
	          maybeSuffix = !type || /[defgprs%]/.test(type);
	
	      // Set the default precision if not specified,
	      // or clamp the specified precision to the supported range.
	      // For significant precision, it must be in [1, 21].
	      // For fixed precision, it must be in [0, 20].
	      precision = precision == null ? (type ? 6 : 12)
	          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
	          : Math.max(0, Math.min(20, precision));
	
	      function format(value) {
	        var valuePrefix = prefix,
	            valueSuffix = suffix,
	            i, n, c;
	
	        if (type === "c") {
	          valueSuffix = formatType(value) + valueSuffix;
	          value = "";
	        } else {
	          value = +value;
	
	          // Convert negative to positive, and compute the prefix.
	          // Note that -0 is not less than 0, but 1 / -0 is!
	          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);
	
	          // Perform the initial formatting.
	          value = formatType(value, precision);
	
	          // If the original value was negative, it may be rounded to zero during
	          // formatting; treat this as (positive) zero.
	          if (valueNegative) {
	            i = -1, n = value.length;
	            valueNegative = false;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), (48 < c && c < 58)
	                  || (type === "x" && 96 < c && c < 103)
	                  || (type === "X" && 64 < c && c < 71)) {
	                valueNegative = true;
	                break;
	              }
	            }
	          }
	
	          // Compute the prefix and suffix.
	          valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
	          valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
	
	          // Break the formatted value into the integer “value” part that can be
	          // grouped, and fractional or exponential “suffix” part that is not.
	          if (maybeSuffix) {
	            i = -1, n = value.length;
	            while (++i < n) {
	              if (c = value.charCodeAt(i), 48 > c || c > 57) {
	                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
	                value = value.slice(0, i);
	                break;
	              }
	            }
	          }
	        }
	
	        // If the fill character is not "0", grouping is applied before padding.
	        if (comma && !zero) value = group(value, Infinity);
	
	        // Compute the padding.
	        var length = valuePrefix.length + value.length + valueSuffix.length,
	            padding = length < width ? new Array(width - length + 1).join(fill) : "";
	
	        // If the fill character is "0", grouping is applied after padding.
	        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
	
	        // Reconstruct the final output based on the desired alignment.
	        switch (align) {
	          case "<": return valuePrefix + value + valueSuffix + padding;
	          case "=": return valuePrefix + padding + value + valueSuffix;
	          case "^": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
	        }
	        return padding + valuePrefix + value + valueSuffix;
	      }
	
	      format.toString = function() {
	        return specifier + "";
	      };
	
	      return format;
	    }
	
	    function formatPrefix(specifier, value) {
	      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
	          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,
	          k = Math.pow(10, -e),
	          prefix = prefixes[8 + e / 3];
	      return function(value) {
	        return f(k * value) + prefix;
	      };
	    }
	
	    return {
	      format: newFormat,
	      formatPrefix: formatPrefix
	    };
	  }
	
	  var locale;
	  exports.format;
	  exports.formatPrefix;
	
	  defaultLocale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [3],
	    currency: ["$", ""]
	  });
	
	  function defaultLocale(definition) {
	    locale = formatLocale(definition);
	    exports.format = locale.format;
	    exports.formatPrefix = locale.formatPrefix;
	    return locale;
	  }
	
	  function precisionFixed(step) {
	    return Math.max(0, -exponent$1(Math.abs(step)));
	  }
	
	  function precisionPrefix(step, value) {
	    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));
	  }
	
	  function precisionRound(step, max) {
	    step = Math.abs(step), max = Math.abs(max) - step;
	    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;
	  }
	
	  function localDate(d) {
	    if (0 <= d.y && d.y < 100) {
	      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
	      date.setFullYear(d.y);
	      return date;
	    }
	    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
	  }
	
	  function utcDate(d) {
	    if (0 <= d.y && d.y < 100) {
	      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
	      date.setUTCFullYear(d.y);
	      return date;
	    }
	    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
	  }
	
	  function newYear(y) {
	    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
	  }
	
	  function formatLocale$1(locale) {
	    var locale_dateTime = locale.dateTime,
	        locale_date = locale.date,
	        locale_time = locale.time,
	        locale_periods = locale.periods,
	        locale_weekdays = locale.days,
	        locale_shortWeekdays = locale.shortDays,
	        locale_months = locale.months,
	        locale_shortMonths = locale.shortMonths;
	
	    var periodRe = formatRe(locale_periods),
	        periodLookup = formatLookup(locale_periods),
	        weekdayRe = formatRe(locale_weekdays),
	        weekdayLookup = formatLookup(locale_weekdays),
	        shortWeekdayRe = formatRe(locale_shortWeekdays),
	        shortWeekdayLookup = formatLookup(locale_shortWeekdays),
	        monthRe = formatRe(locale_months),
	        monthLookup = formatLookup(locale_months),
	        shortMonthRe = formatRe(locale_shortMonths),
	        shortMonthLookup = formatLookup(locale_shortMonths);
	
	    var formats = {
	      "a": formatShortWeekday,
	      "A": formatWeekday,
	      "b": formatShortMonth,
	      "B": formatMonth,
	      "c": null,
	      "d": formatDayOfMonth,
	      "e": formatDayOfMonth,
	      "H": formatHour24,
	      "I": formatHour12,
	      "j": formatDayOfYear,
	      "L": formatMilliseconds,
	      "m": formatMonthNumber,
	      "M": formatMinutes,
	      "p": formatPeriod,
	      "S": formatSeconds,
	      "U": formatWeekNumberSunday,
	      "w": formatWeekdayNumber,
	      "W": formatWeekNumberMonday,
	      "x": null,
	      "X": null,
	      "y": formatYear,
	      "Y": formatFullYear,
	      "Z": formatZone,
	      "%": formatLiteralPercent
	    };
	
	    var utcFormats = {
	      "a": formatUTCShortWeekday,
	      "A": formatUTCWeekday,
	      "b": formatUTCShortMonth,
	      "B": formatUTCMonth,
	      "c": null,
	      "d": formatUTCDayOfMonth,
	      "e": formatUTCDayOfMonth,
	      "H": formatUTCHour24,
	      "I": formatUTCHour12,
	      "j": formatUTCDayOfYear,
	      "L": formatUTCMilliseconds,
	      "m": formatUTCMonthNumber,
	      "M": formatUTCMinutes,
	      "p": formatUTCPeriod,
	      "S": formatUTCSeconds,
	      "U": formatUTCWeekNumberSunday,
	      "w": formatUTCWeekdayNumber,
	      "W": formatUTCWeekNumberMonday,
	      "x": null,
	      "X": null,
	      "y": formatUTCYear,
	      "Y": formatUTCFullYear,
	      "Z": formatUTCZone,
	      "%": formatLiteralPercent
	    };
	
	    var parses = {
	      "a": parseShortWeekday,
	      "A": parseWeekday,
	      "b": parseShortMonth,
	      "B": parseMonth,
	      "c": parseLocaleDateTime,
	      "d": parseDayOfMonth,
	      "e": parseDayOfMonth,
	      "H": parseHour24,
	      "I": parseHour24,
	      "j": parseDayOfYear,
	      "L": parseMilliseconds,
	      "m": parseMonthNumber,
	      "M": parseMinutes,
	      "p": parsePeriod,
	      "S": parseSeconds,
	      "U": parseWeekNumberSunday,
	      "w": parseWeekdayNumber,
	      "W": parseWeekNumberMonday,
	      "x": parseLocaleDate,
	      "X": parseLocaleTime,
	      "y": parseYear,
	      "Y": parseFullYear,
	      "Z": parseZone,
	      "%": parseLiteralPercent
	    };
	
	    // These recursive directive definitions must be deferred.
	    formats.x = newFormat(locale_date, formats);
	    formats.X = newFormat(locale_time, formats);
	    formats.c = newFormat(locale_dateTime, formats);
	    utcFormats.x = newFormat(locale_date, utcFormats);
	    utcFormats.X = newFormat(locale_time, utcFormats);
	    utcFormats.c = newFormat(locale_dateTime, utcFormats);
	
	    function newFormat(specifier, formats) {
	      return function(date) {
	        var string = [],
	            i = -1,
	            j = 0,
	            n = specifier.length,
	            c,
	            pad,
	            format;
	
	        if (!(date instanceof Date)) date = new Date(+date);
	
	        while (++i < n) {
	          if (specifier.charCodeAt(i) === 37) {
	            string.push(specifier.slice(j, i));
	            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
	            else pad = c === "e" ? " " : "0";
	            if (format = formats[c]) c = format(date, pad);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	
	        string.push(specifier.slice(j, i));
	        return string.join("");
	      };
	    }
	
	    function newParse(specifier, newDate) {
	      return function(string) {
	        var d = newYear(1900),
	            i = parseSpecifier(d, specifier, string += "", 0);
	        if (i != string.length) return null;
	
	        // The am-pm flag is 0 for AM, and 1 for PM.
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	
	        // Convert day-of-week and week-of-year to day-of-year.
	        if ("W" in d || "U" in d) {
	          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
	          var day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
	          d.m = 0;
	          d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
	        }
	
	        // If a time zone is specified, all fields are interpreted as UTC and then
	        // offset according to the specified time zone.
	        if ("Z" in d) {
	          d.H += d.Z / 100 | 0;
	          d.M += d.Z % 100;
	          return utcDate(d);
	        }
	
	        // Otherwise, all fields are in local time.
	        return newDate(d);
	      };
	    }
	
	    function parseSpecifier(d, specifier, string, j) {
	      var i = 0,
	          n = specifier.length,
	          m = string.length,
	          c,
	          parse;
	
	      while (i < n) {
	        if (j >= m) return -1;
	        c = specifier.charCodeAt(i++);
	        if (c === 37) {
	          c = specifier.charAt(i++);
	          parse = parses[c in pads ? specifier.charAt(i++) : c];
	          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	
	      return j;
	    }
	
	    function parsePeriod(d, string, i) {
	      var n = periodRe.exec(string.slice(i));
	      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseShortWeekday(d, string, i) {
	      var n = shortWeekdayRe.exec(string.slice(i));
	      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseWeekday(d, string, i) {
	      var n = weekdayRe.exec(string.slice(i));
	      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseShortMonth(d, string, i) {
	      var n = shortMonthRe.exec(string.slice(i));
	      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseMonth(d, string, i) {
	      var n = monthRe.exec(string.slice(i));
	      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
	    }
	
	    function parseLocaleDateTime(d, string, i) {
	      return parseSpecifier(d, locale_dateTime, string, i);
	    }
	
	    function parseLocaleDate(d, string, i) {
	      return parseSpecifier(d, locale_date, string, i);
	    }
	
	    function parseLocaleTime(d, string, i) {
	      return parseSpecifier(d, locale_time, string, i);
	    }
	
	    function formatShortWeekday(d) {
	      return locale_shortWeekdays[d.getDay()];
	    }
	
	    function formatWeekday(d) {
	      return locale_weekdays[d.getDay()];
	    }
	
	    function formatShortMonth(d) {
	      return locale_shortMonths[d.getMonth()];
	    }
	
	    function formatMonth(d) {
	      return locale_months[d.getMonth()];
	    }
	
	    function formatPeriod(d) {
	      return locale_periods[+(d.getHours() >= 12)];
	    }
	
	    function formatUTCShortWeekday(d) {
	      return locale_shortWeekdays[d.getUTCDay()];
	    }
	
	    function formatUTCWeekday(d) {
	      return locale_weekdays[d.getUTCDay()];
	    }
	
	    function formatUTCShortMonth(d) {
	      return locale_shortMonths[d.getUTCMonth()];
	    }
	
	    function formatUTCMonth(d) {
	      return locale_months[d.getUTCMonth()];
	    }
	
	    function formatUTCPeriod(d) {
	      return locale_periods[+(d.getUTCHours() >= 12)];
	    }
	
	    return {
	      format: function(specifier) {
	        var f = newFormat(specifier += "", formats);
	        f.toString = function() { return specifier; };
	        return f;
	      },
	      parse: function(specifier) {
	        var p = newParse(specifier += "", localDate);
	        p.toString = function() { return specifier; };
	        return p;
	      },
	      utcFormat: function(specifier) {
	        var f = newFormat(specifier += "", utcFormats);
	        f.toString = function() { return specifier; };
	        return f;
	      },
	      utcParse: function(specifier) {
	        var p = newParse(specifier, utcDate);
	        p.toString = function() { return specifier; };
	        return p;
	      }
	    };
	  }
	
	  var pads = {"-": "", "_": " ", "0": "0"};
	  var numberRe = /^\s*\d+/;
	  var percentRe = /^%/;
	  var requoteRe = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  function pad(value, fill, width) {
	    var sign = value < 0 ? "-" : "",
	        string = (sign ? -value : value) + "",
	        length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	
	  function requote(s) {
	    return s.replace(requoteRe, "\\$&");
	  }
	
	  function formatRe(names) {
	    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
	  }
	
	  function formatLookup(names) {
	    var map = {}, i = -1, n = names.length;
	    while (++i < n) map[names[i].toLowerCase()] = i;
	    return map;
	  }
	
	  function parseWeekdayNumber(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 1));
	    return n ? (d.w = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseWeekNumberSunday(d, string, i) {
	    var n = numberRe.exec(string.slice(i));
	    return n ? (d.U = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseWeekNumberMonday(d, string, i) {
	    var n = numberRe.exec(string.slice(i));
	    return n ? (d.W = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseFullYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 4));
	    return n ? (d.y = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
	  }
	
	  function parseZone(d, string, i) {
	    var n = /^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i, i + 6));
	    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
	  }
	
	  function parseMonthNumber(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
	  }
	
	  function parseDayOfMonth(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.d = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseDayOfYear(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 3));
	    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseHour24(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.H = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseMinutes(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.M = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseSeconds(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 2));
	    return n ? (d.S = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseMilliseconds(d, string, i) {
	    var n = numberRe.exec(string.slice(i, i + 3));
	    return n ? (d.L = +n[0], i + n[0].length) : -1;
	  }
	
	  function parseLiteralPercent(d, string, i) {
	    var n = percentRe.exec(string.slice(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	
	  function formatDayOfMonth(d, p) {
	    return pad(d.getDate(), p, 2);
	  }
	
	  function formatHour24(d, p) {
	    return pad(d.getHours(), p, 2);
	  }
	
	  function formatHour12(d, p) {
	    return pad(d.getHours() % 12 || 12, p, 2);
	  }
	
	  function formatDayOfYear(d, p) {
	    return pad(1 + day.count(year(d), d), p, 3);
	  }
	
	  function formatMilliseconds(d, p) {
	    return pad(d.getMilliseconds(), p, 3);
	  }
	
	  function formatMonthNumber(d, p) {
	    return pad(d.getMonth() + 1, p, 2);
	  }
	
	  function formatMinutes(d, p) {
	    return pad(d.getMinutes(), p, 2);
	  }
	
	  function formatSeconds(d, p) {
	    return pad(d.getSeconds(), p, 2);
	  }
	
	  function formatWeekNumberSunday(d, p) {
	    return pad(timeWeek.count(year(d), d), p, 2);
	  }
	
	  function formatWeekdayNumber(d) {
	    return d.getDay();
	  }
	
	  function formatWeekNumberMonday(d, p) {
	    return pad(timeMonday.count(year(d), d), p, 2);
	  }
	
	  function formatYear(d, p) {
	    return pad(d.getFullYear() % 100, p, 2);
	  }
	
	  function formatFullYear(d, p) {
	    return pad(d.getFullYear() % 10000, p, 4);
	  }
	
	  function formatZone(d) {
	    var z = d.getTimezoneOffset();
	    return (z > 0 ? "-" : (z *= -1, "+"))
	        + pad(z / 60 | 0, "0", 2)
	        + pad(z % 60, "0", 2);
	  }
	
	  function formatUTCDayOfMonth(d, p) {
	    return pad(d.getUTCDate(), p, 2);
	  }
	
	  function formatUTCHour24(d, p) {
	    return pad(d.getUTCHours(), p, 2);
	  }
	
	  function formatUTCHour12(d, p) {
	    return pad(d.getUTCHours() % 12 || 12, p, 2);
	  }
	
	  function formatUTCDayOfYear(d, p) {
	    return pad(1 + utcDay.count(utcYear(d), d), p, 3);
	  }
	
	  function formatUTCMilliseconds(d, p) {
	    return pad(d.getUTCMilliseconds(), p, 3);
	  }
	
	  function formatUTCMonthNumber(d, p) {
	    return pad(d.getUTCMonth() + 1, p, 2);
	  }
	
	  function formatUTCMinutes(d, p) {
	    return pad(d.getUTCMinutes(), p, 2);
	  }
	
	  function formatUTCSeconds(d, p) {
	    return pad(d.getUTCSeconds(), p, 2);
	  }
	
	  function formatUTCWeekNumberSunday(d, p) {
	    return pad(utcWeek.count(utcYear(d), d), p, 2);
	  }
	
	  function formatUTCWeekdayNumber(d) {
	    return d.getUTCDay();
	  }
	
	  function formatUTCWeekNumberMonday(d, p) {
	    return pad(utcMonday.count(utcYear(d), d), p, 2);
	  }
	
	  function formatUTCYear(d, p) {
	    return pad(d.getUTCFullYear() % 100, p, 2);
	  }
	
	  function formatUTCFullYear(d, p) {
	    return pad(d.getUTCFullYear() % 10000, p, 4);
	  }
	
	  function formatUTCZone() {
	    return "+0000";
	  }
	
	  function formatLiteralPercent() {
	    return "%";
	  }
	
	  var locale$1;
	  exports.timeFormat;
	  exports.timeParse;
	  exports.utcFormat;
	  exports.utcParse;
	
	  defaultLocale$1({
	    dateTime: "%x, %X",
	    date: "%-m/%-d/%Y",
	    time: "%-I:%M:%S %p",
	    periods: ["AM", "PM"],
	    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
	    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
	    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
	  });
	
	  function defaultLocale$1(definition) {
	    locale$1 = formatLocale$1(definition);
	    exports.timeFormat = locale$1.format;
	    exports.timeParse = locale$1.parse;
	    exports.utcFormat = locale$1.utcFormat;
	    exports.utcParse = locale$1.utcParse;
	    return locale$1;
	  }
	
	  var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
	
	  function formatIsoNative(date) {
	    return date.toISOString();
	  }
	
	  var formatIso = Date.prototype.toISOString
	      ? formatIsoNative
	      : exports.utcFormat(isoSpecifier);
	
	  function parseIsoNative(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  }
	
	  var parseIso = +new Date("2000-01-01T00:00:00.000Z")
	      ? parseIsoNative
	      : exports.utcParse(isoSpecifier);
	
	  var array$2 = Array.prototype;
	
	  var map$2 = array$2.map;
	  var slice$3 = array$2.slice;
	
	  var implicit = {name: "implicit"};
	
	  function ordinal(range) {
	    var index = map$1(),
	        domain = [],
	        unknown = implicit;
	
	    range = range == null ? [] : slice$3.call(range);
	
	    function scale(d) {
	      var key = d + "", i = index.get(key);
	      if (!i) {
	        if (unknown !== implicit) return unknown;
	        index.set(key, i = domain.push(d));
	      }
	      return range[(i - 1) % range.length];
	    }
	
	    scale.domain = function(_) {
	      if (!arguments.length) return domain.slice();
	      domain = [], index = map$1();
	      var i = -1, n = _.length, d, key;
	      while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
	      return scale;
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();
	    };
	
	    scale.unknown = function(_) {
	      return arguments.length ? (unknown = _, scale) : unknown;
	    };
	
	    scale.copy = function() {
	      return ordinal()
	          .domain(domain)
	          .range(range)
	          .unknown(unknown);
	    };
	
	    return scale;
	  }
	
	  function band() {
	    var scale = ordinal().unknown(undefined),
	        domain = scale.domain,
	        ordinalRange = scale.range,
	        range$$ = [0, 1],
	        step,
	        bandwidth,
	        round = false,
	        paddingInner = 0,
	        paddingOuter = 0,
	        align = 0.5;
	
	    delete scale.unknown;
	
	    function rescale() {
	      var n = domain().length,
	          reverse = range$$[1] < range$$[0],
	          start = range$$[reverse - 0],
	          stop = range$$[1 - reverse];
	      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
	      if (round) step = Math.floor(step);
	      start += (stop - start - step * (n - paddingInner)) * align;
	      bandwidth = step * (1 - paddingInner);
	      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
	      var values = range(n).map(function(i) { return start + step * i; });
	      return ordinalRange(reverse ? values.reverse() : values);
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain(_), rescale()) : domain();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();
	    };
	
	    scale.rangeRound = function(_) {
	      return range$$ = [+_[0], +_[1]], round = true, rescale();
	    };
	
	    scale.bandwidth = function() {
	      return bandwidth;
	    };
	
	    scale.step = function() {
	      return step;
	    };
	
	    scale.round = function(_) {
	      return arguments.length ? (round = !!_, rescale()) : round;
	    };
	
	    scale.padding = function(_) {
	      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	    };
	
	    scale.paddingInner = function(_) {
	      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
	    };
	
	    scale.paddingOuter = function(_) {
	      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
	    };
	
	    scale.align = function(_) {
	      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
	    };
	
	    scale.copy = function() {
	      return band()
	          .domain(domain())
	          .range(range$$)
	          .round(round)
	          .paddingInner(paddingInner)
	          .paddingOuter(paddingOuter)
	          .align(align);
	    };
	
	    return rescale();
	  }
	
	  function pointish(scale) {
	    var copy = scale.copy;
	
	    scale.padding = scale.paddingOuter;
	    delete scale.paddingInner;
	    delete scale.paddingOuter;
	
	    scale.copy = function() {
	      return pointish(copy());
	    };
	
	    return scale;
	  }
	
	  function point$4() {
	    return pointish(band().paddingInner(1));
	  }
	
	  function constant$3(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function number$1(x) {
	    return +x;
	  }
	
	  var unit = [0, 1];
	
	  function deinterpolate(a, b) {
	    return (b -= (a = +a))
	        ? function(x) { return (x - a) / b; }
	        : constant$3(b);
	  }
	
	  function deinterpolateClamp(deinterpolate) {
	    return function(a, b) {
	      var d = deinterpolate(a = +a, b = +b);
	      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
	    };
	  }
	
	  function reinterpolateClamp(reinterpolate) {
	    return function(a, b) {
	      var r = reinterpolate(a = +a, b = +b);
	      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
	    };
	  }
	
	  function bimap(domain, range, deinterpolate, reinterpolate) {
	    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
	    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
	    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
	    return function(x) { return r0(d0(x)); };
	  }
	
	  function polymap(domain, range, deinterpolate, reinterpolate) {
	    var j = Math.min(domain.length, range.length) - 1,
	        d = new Array(j),
	        r = new Array(j),
	        i = -1;
	
	    // Reverse descending domains.
	    if (domain[j] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	
	    while (++i < j) {
	      d[i] = deinterpolate(domain[i], domain[i + 1]);
	      r[i] = reinterpolate(range[i], range[i + 1]);
	    }
	
	    return function(x) {
	      var i = bisectRight(domain, x, 1, j) - 1;
	      return r[i](d[i](x));
	    };
	  }
	
	  function copy(source, target) {
	    return target
	        .domain(source.domain())
	        .range(source.range())
	        .interpolate(source.interpolate())
	        .clamp(source.clamp());
	  }
	
	  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
	  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
	  function continuous(deinterpolate$$, reinterpolate) {
	    var domain = unit,
	        range = unit,
	        interpolate$$ = interpolate,
	        clamp = false,
	        piecewise,
	        output,
	        input;
	
	    function rescale() {
	      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
	      output = input = null;
	      return scale;
	    }
	
	    function scale(x) {
	      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);
	    }
	
	    scale.invert = function(y) {
	      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();
	    };
	
	    scale.rangeRound = function(_) {
	      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();
	    };
	
	    scale.clamp = function(_) {
	      return arguments.length ? (clamp = !!_, rescale()) : clamp;
	    };
	
	    scale.interpolate = function(_) {
	      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;
	    };
	
	    return rescale();
	  }
	
	  function tickFormat(domain, count, specifier) {
	    var start = domain[0],
	        stop = domain[domain.length - 1],
	        step = tickStep(start, stop, count == null ? 10 : count),
	        precision;
	    specifier = formatSpecifier(specifier == null ? ",f" : specifier);
	    switch (specifier.type) {
	      case "s": {
	        var value = Math.max(Math.abs(start), Math.abs(stop));
	        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
	        return exports.formatPrefix(specifier, value);
	      }
	      case "":
	      case "e":
	      case "g":
	      case "p":
	      case "r": {
	        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
	        break;
	      }
	      case "f":
	      case "%": {
	        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
	        break;
	      }
	    }
	    return exports.format(specifier);
	  }
	
	  function linearish(scale) {
	    var domain = scale.domain;
	
	    scale.ticks = function(count) {
	      var d = domain();
	      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      return tickFormat(domain(), count, specifier);
	    };
	
	    scale.nice = function(count) {
	      var d = domain(),
	          i = d.length - 1,
	          n = count == null ? 10 : count,
	          start = d[0],
	          stop = d[i],
	          step = tickStep(start, stop, n);
	
	      if (step) {
	        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
	        d[0] = Math.floor(start / step) * step;
	        d[i] = Math.ceil(stop / step) * step;
	        domain(d);
	      }
	
	      return scale;
	    };
	
	    return scale;
	  }
	
	  function linear$2() {
	    var scale = continuous(deinterpolate, interpolateNumber);
	
	    scale.copy = function() {
	      return copy(scale, linear$2());
	    };
	
	    return linearish(scale);
	  }
	
	  function identity$4() {
	    var domain = [0, 1];
	
	    function scale(x) {
	      return +x;
	    }
	
	    scale.invert = scale;
	
	    scale.domain = scale.range = function(_) {
	      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();
	    };
	
	    scale.copy = function() {
	      return identity$4().domain(domain);
	    };
	
	    return linearish(scale);
	  }
	
	  function nice(domain, interval) {
	    domain = domain.slice();
	
	    var i0 = 0,
	        i1 = domain.length - 1,
	        x0 = domain[i0],
	        x1 = domain[i1],
	        t;
	
	    if (x1 < x0) {
	      t = i0, i0 = i1, i1 = t;
	      t = x0, x0 = x1, x1 = t;
	    }
	
	    domain[i0] = interval.floor(x0);
	    domain[i1] = interval.ceil(x1);
	    return domain;
	  }
	
	  function deinterpolate$1(a, b) {
	    return (b = Math.log(b / a))
	        ? function(x) { return Math.log(x / a) / b; }
	        : constant$3(b);
	  }
	
	  function reinterpolate(a, b) {
	    return a < 0
	        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }
	        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };
	  }
	
	  function pow10(x) {
	    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
	  }
	
	  function powp(base) {
	    return base === 10 ? pow10
	        : base === Math.E ? Math.exp
	        : function(x) { return Math.pow(base, x); };
	  }
	
	  function logp(base) {
	    return base === Math.E ? Math.log
	        : base === 10 && Math.log10
	        || base === 2 && Math.log2
	        || (base = Math.log(base), function(x) { return Math.log(x) / base; });
	  }
	
	  function reflect(f) {
	    return function(x) {
	      return -f(-x);
	    };
	  }
	
	  function log() {
	    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),
	        domain = scale.domain,
	        base = 10,
	        logs = logp(10),
	        pows = powp(10);
	
	    function rescale() {
	      logs = logp(base), pows = powp(base);
	      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
	      return scale;
	    }
	
	    scale.base = function(_) {
	      return arguments.length ? (base = +_, rescale()) : base;
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain(_), rescale()) : domain();
	    };
	
	    scale.ticks = function(count) {
	      var d = domain(),
	          u = d[0],
	          v = d[d.length - 1],
	          r;
	
	      if (r = v < u) i = u, u = v, v = i;
	
	      var i = logs(u),
	          j = logs(v),
	          p,
	          k,
	          t,
	          n = count == null ? 10 : +count,
	          z = [];
	
	      if (!(base % 1) && j - i < n) {
	        i = Math.round(i) - 1, j = Math.round(j) + 1;
	        if (u > 0) for (; i < j; ++i) {
	          for (k = 1, p = pows(i); k < base; ++k) {
	            t = p * k;
	            if (t < u) continue;
	            if (t > v) break;
	            z.push(t);
	          }
	        } else for (; i < j; ++i) {
	          for (k = base - 1, p = pows(i); k >= 1; --k) {
	            t = p * k;
	            if (t < u) continue;
	            if (t > v) break;
	            z.push(t);
	          }
	        }
	      } else {
	        z = ticks(i, j, Math.min(j - i, n)).map(pows);
	      }
	
	      return r ? z.reverse() : z;
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      if (specifier == null) specifier = base === 10 ? ".0e" : ",";
	      if (typeof specifier !== "function") specifier = exports.format(specifier);
	      if (count === Infinity) return specifier;
	      if (count == null) count = 10;
	      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
	      return function(d) {
	        var i = d / pows(Math.round(logs(d)));
	        if (i * base < base - 0.5) i *= base;
	        return i <= k ? specifier(d) : "";
	      };
	    };
	
	    scale.nice = function() {
	      return domain(nice(domain(), {
	        floor: function(x) { return pows(Math.floor(logs(x))); },
	        ceil: function(x) { return pows(Math.ceil(logs(x))); }
	      }));
	    };
	
	    scale.copy = function() {
	      return copy(scale, log().base(base));
	    };
	
	    return scale;
	  }
	
	  function raise(x, exponent) {
	    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
	  }
	
	  function pow() {
	    var exponent = 1,
	        scale = continuous(deinterpolate, reinterpolate),
	        domain = scale.domain;
	
	    function deinterpolate(a, b) {
	      return (b = raise(b, exponent) - (a = raise(a, exponent)))
	          ? function(x) { return (raise(x, exponent) - a) / b; }
	          : constant$3(b);
	    }
	
	    function reinterpolate(a, b) {
	      b = raise(b, exponent) - (a = raise(a, exponent));
	      return function(t) { return raise(a + b * t, 1 / exponent); };
	    }
	
	    scale.exponent = function(_) {
	      return arguments.length ? (exponent = +_, domain(domain())) : exponent;
	    };
	
	    scale.copy = function() {
	      return copy(scale, pow().exponent(exponent));
	    };
	
	    return linearish(scale);
	  }
	
	  function sqrt() {
	    return pow().exponent(0.5);
	  }
	
	  function quantile() {
	    var domain = [],
	        range = [],
	        thresholds = [];
	
	    function rescale() {
	      var i = 0, n = Math.max(1, range.length);
	      thresholds = new Array(n - 1);
	      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);
	      return scale;
	    }
	
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];
	    }
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return i < 0 ? [NaN, NaN] : [
	        i > 0 ? thresholds[i - 1] : domain[0],
	        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
	      ];
	    };
	
	    scale.domain = function(_) {
	      if (!arguments.length) return domain.slice();
	      domain = [];
	      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
	      domain.sort(ascending);
	      return rescale();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();
	    };
	
	    scale.quantiles = function() {
	      return thresholds.slice();
	    };
	
	    scale.copy = function() {
	      return quantile()
	          .domain(domain)
	          .range(range);
	    };
	
	    return scale;
	  }
	
	  function quantize$1() {
	    var x0 = 0,
	        x1 = 1,
	        n = 1,
	        domain = [0.5],
	        range = [0, 1];
	
	    function scale(x) {
	      if (x <= x) return range[bisectRight(domain, x, 0, n)];
	    }
	
	    function rescale() {
	      var i = -1;
	      domain = new Array(n);
	      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
	      return scale;
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();
	    };
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return i < 0 ? [NaN, NaN]
	          : i < 1 ? [x0, domain[0]]
	          : i >= n ? [domain[n - 1], x1]
	          : [domain[i - 1], domain[i]];
	    };
	
	    scale.copy = function() {
	      return quantize$1()
	          .domain([x0, x1])
	          .range(range);
	    };
	
	    return linearish(scale);
	  }
	
	  function threshold$1() {
	    var domain = [0.5],
	        range = [0, 1],
	        n = 1;
	
	    function scale(x) {
	      if (x <= x) return range[bisectRight(domain, x, 0, n)];
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
	    };
	
	    scale.range = function(_) {
	      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
	    };
	
	    scale.invertExtent = function(y) {
	      var i = range.indexOf(y);
	      return [domain[i - 1], domain[i]];
	    };
	
	    scale.copy = function() {
	      return threshold$1()
	          .domain(domain)
	          .range(range);
	    };
	
	    return scale;
	  }
	
	var   durationSecond$1 = 1000;
	var   durationMinute$1 = durationSecond$1 * 60;
	var   durationHour$1 = durationMinute$1 * 60;
	var   durationDay$1 = durationHour$1 * 24;
	var   durationWeek$1 = durationDay$1 * 7;
	  var durationMonth = durationDay$1 * 30;
	  var durationYear = durationDay$1 * 365;
	  function date$1(t) {
	    return new Date(t);
	  }
	
	  function number$2(t) {
	    return t instanceof Date ? +t : +new Date(+t);
	  }
	
	  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
	    var scale = continuous(deinterpolate, interpolateNumber),
	        invert = scale.invert,
	        domain = scale.domain;
	
	    var formatMillisecond = format(".%L"),
	        formatSecond = format(":%S"),
	        formatMinute = format("%I:%M"),
	        formatHour = format("%I %p"),
	        formatDay = format("%a %d"),
	        formatWeek = format("%b %d"),
	        formatMonth = format("%B"),
	        formatYear = format("%Y");
	
	    var tickIntervals = [
	      [second,  1,      durationSecond$1],
	      [second,  5,  5 * durationSecond$1],
	      [second, 15, 15 * durationSecond$1],
	      [second, 30, 30 * durationSecond$1],
	      [minute,  1,      durationMinute$1],
	      [minute,  5,  5 * durationMinute$1],
	      [minute, 15, 15 * durationMinute$1],
	      [minute, 30, 30 * durationMinute$1],
	      [  hour,  1,      durationHour$1  ],
	      [  hour,  3,  3 * durationHour$1  ],
	      [  hour,  6,  6 * durationHour$1  ],
	      [  hour, 12, 12 * durationHour$1  ],
	      [   day,  1,      durationDay$1   ],
	      [   day,  2,  2 * durationDay$1   ],
	      [  week,  1,      durationWeek$1  ],
	      [ month,  1,      durationMonth ],
	      [ month,  3,  3 * durationMonth ],
	      [  year,  1,      durationYear  ]
	    ];
	
	    function tickFormat(date) {
	      return (second(date) < date ? formatMillisecond
	          : minute(date) < date ? formatSecond
	          : hour(date) < date ? formatMinute
	          : day(date) < date ? formatHour
	          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
	          : year(date) < date ? formatMonth
	          : formatYear)(date);
	    }
	
	    function tickInterval(interval, start, stop, step) {
	      if (interval == null) interval = 10;
	
	      // If a desired tick count is specified, pick a reasonable tick interval
	      // based on the extent of the domain and a rough estimate of tick size.
	      // Otherwise, assume interval is already a time interval and use it.
	      if (typeof interval === "number") {
	        var target = Math.abs(stop - start) / interval,
	            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);
	        if (i === tickIntervals.length) {
	          step = tickStep(start / durationYear, stop / durationYear, interval);
	          interval = year;
	        } else if (i) {
	          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
	          step = i[1];
	          interval = i[0];
	        } else {
	          step = tickStep(start, stop, interval);
	          interval = millisecond;
	        }
	      }
	
	      return step == null ? interval : interval.every(step);
	    }
	
	    scale.invert = function(y) {
	      return new Date(invert(y));
	    };
	
	    scale.domain = function(_) {
	      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);
	    };
	
	    scale.ticks = function(interval, step) {
	      var d = domain(),
	          t0 = d[0],
	          t1 = d[d.length - 1],
	          r = t1 < t0,
	          t;
	      if (r) t = t0, t0 = t1, t1 = t;
	      t = tickInterval(interval, t0, t1, step);
	      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
	      return r ? t.reverse() : t;
	    };
	
	    scale.tickFormat = function(count, specifier) {
	      return specifier == null ? tickFormat : format(specifier);
	    };
	
	    scale.nice = function(interval, step) {
	      var d = domain();
	      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
	          ? domain(nice(d, interval))
	          : scale;
	    };
	
	    scale.copy = function() {
	      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
	    };
	
	    return scale;
	  }
	
	  function time() {
	    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
	  }
	
	  function utcTime() {
	    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
	  }
	
	  function colors(s) {
	    return s.match(/.{6}/g).map(function(x) {
	      return "#" + x;
	    });
	  }
	
	  var category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
	
	  var category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
	
	  var category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
	
	  var category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
	
	  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));
	
	  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));
	
	  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));
	
	  var rainbow = cubehelix();
	
	  function rainbow$1(t) {
	    if (t < 0 || t > 1) t -= Math.floor(t);
	    var ts = Math.abs(t - 0.5);
	    rainbow.h = 360 * t - 100;
	    rainbow.s = 1.5 - 1.5 * ts;
	    rainbow.l = 0.8 - 0.9 * ts;
	    return rainbow + "";
	  }
	
	  function ramp(range) {
	    var n = range.length;
	    return function(t) {
	      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
	    };
	  }
	
	  var viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
	
	  var magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
	
	  var inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
	
	  var plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
	
	  function sequential(interpolator) {
	    var x0 = 0,
	        x1 = 1,
	        clamp = false;
	
	    function scale(x) {
	      var t = (x - x0) / (x1 - x0);
	      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);
	    }
	
	    scale.domain = function(_) {
	      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
	    };
	
	    scale.clamp = function(_) {
	      return arguments.length ? (clamp = !!_, scale) : clamp;
	    };
	
	    scale.interpolator = function(_) {
	      return arguments.length ? (interpolator = _, scale) : interpolator;
	    };
	
	    scale.copy = function() {
	      return sequential(interpolator).domain([x0, x1]).clamp(clamp);
	    };
	
	    return linearish(scale);
	  }
	
	  var xhtml = "http://www.w3.org/1999/xhtml";
	
	  var namespaces = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: xhtml,
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	
	  function namespace(name) {
	    var prefix = name += "", i = prefix.indexOf(":");
	    if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
	    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;
	  }
	
	  function creatorInherit(name) {
	    return function() {
	      var document = this.ownerDocument,
	          uri = this.namespaceURI;
	      return uri === xhtml && document.documentElement.namespaceURI === xhtml
	          ? document.createElement(name)
	          : document.createElementNS(uri, name);
	    };
	  }
	
	  function creatorFixed(fullname) {
	    return function() {
	      return this.ownerDocument.createElementNS(fullname.space, fullname.local);
	    };
	  }
	
	  function creator(name) {
	    var fullname = namespace(name);
	    return (fullname.local
	        ? creatorFixed
	        : creatorInherit)(fullname);
	  }
	
	  var nextId = 0;
	
	  function local() {
	    return new Local;
	  }
	
	  function Local() {
	    this._ = "@" + (++nextId).toString(36);
	  }
	
	  Local.prototype = local.prototype = {
	    constructor: Local,
	    get: function(node) {
	      var id = this._;
	      while (!(id in node)) if (!(node = node.parentNode)) return;
	      return node[id];
	    },
	    set: function(node, value) {
	      return node[this._] = value;
	    },
	    remove: function(node) {
	      return this._ in node && delete node[this._];
	    },
	    toString: function() {
	      return this._;
	    }
	  };
	
	  var matcher = function(selector) {
	    return function() {
	      return this.matches(selector);
	    };
	  };
	
	  if (typeof document !== "undefined") {
	    var element = document.documentElement;
	    if (!element.matches) {
	      var vendorMatches = element.webkitMatchesSelector
	          || element.msMatchesSelector
	          || element.mozMatchesSelector
	          || element.oMatchesSelector;
	      matcher = function(selector) {
	        return function() {
	          return vendorMatches.call(this, selector);
	        };
	      };
	    }
	  }
	
	  var matcher$1 = matcher;
	
	  var filterEvents = {};
	
	  exports.event = null;
	
	  if (typeof document !== "undefined") {
	    var element$1 = document.documentElement;
	    if (!("onmouseenter" in element$1)) {
	      filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};
	    }
	  }
	
	  function filterContextListener(listener, index, group) {
	    listener = contextListener(listener, index, group);
	    return function(event) {
	      var related = event.relatedTarget;
	      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {
	        listener.call(this, event);
	      }
	    };
	  }
	
	  function contextListener(listener, index, group) {
	    return function(event1) {
	      var event0 = exports.event; // Events can be reentrant (e.g., focus).
	      exports.event = event1;
	      try {
	        listener.call(this, this.__data__, index, group);
	      } finally {
	        exports.event = event0;
	      }
	    };
	  }
	
	  function parseTypenames$1(typenames) {
	    return typenames.trim().split(/^|\s+/).map(function(t) {
	      var name = "", i = t.indexOf(".");
	      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
	      return {type: t, name: name};
	    });
	  }
	
	  function onRemove(typename) {
	    return function() {
	      var on = this.__on;
	      if (!on) return;
	      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
	        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
	          this.removeEventListener(o.type, o.listener, o.capture);
	        } else {
	          on[++i] = o;
	        }
	      }
	      if (++i) on.length = i;
	      else delete this.__on;
	    };
	  }
	
	  function onAdd(typename, value, capture) {
	    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
	    return function(d, i, group) {
	      var on = this.__on, o, listener = wrap(value, i, group);
	      if (on) for (var j = 0, m = on.length; j < m; ++j) {
	        if ((o = on[j]).type === typename.type && o.name === typename.name) {
	          this.removeEventListener(o.type, o.listener, o.capture);
	          this.addEventListener(o.type, o.listener = listener, o.capture = capture);
	          o.value = value;
	          return;
	        }
	      }
	      this.addEventListener(typename.type, listener, capture);
	      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};
	      if (!on) this.__on = [o];
	      else on.push(o);
	    };
	  }
	
	  function selection_on(typename, value, capture) {
	    var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;
	
	    if (arguments.length < 2) {
	      var on = this.node().__on;
	      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
	        for (i = 0, o = on[j]; i < n; ++i) {
	          if ((t = typenames[i]).type === o.type && t.name === o.name) {
	            return o.value;
	          }
	        }
	      }
	      return;
	    }
	
	    on = value ? onAdd : onRemove;
	    if (capture == null) capture = false;
	    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));
	    return this;
	  }
	
	  function customEvent(event1, listener, that, args) {
	    var event0 = exports.event;
	    event1.sourceEvent = exports.event;
	    exports.event = event1;
	    try {
	      return listener.apply(that, args);
	    } finally {
	      exports.event = event0;
	    }
	  }
	
	  function sourceEvent() {
	    var current = exports.event, source;
	    while (source = current.sourceEvent) current = source;
	    return current;
	  }
	
	  function point$5(node, event) {
	    var svg = node.ownerSVGElement || node;
	
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      point.x = event.clientX, point.y = event.clientY;
	      point = point.matrixTransform(node.getScreenCTM().inverse());
	      return [point.x, point.y];
	    }
	
	    var rect = node.getBoundingClientRect();
	    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
	  }
	
	  function mouse(node) {
	    var event = sourceEvent();
	    if (event.changedTouches) event = event.changedTouches[0];
	    return point$5(node, event);
	  }
	
	  function none$2() {}
	
	  function selector(selector) {
	    return selector == null ? none$2 : function() {
	      return this.querySelector(selector);
	    };
	  }
	
	  function selection_select(select) {
	    if (typeof select !== "function") select = selector(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
	        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          subgroup[i] = subnode;
	        }
	      }
	    }
	
	    return new Selection(subgroups, this._parents);
	  }
	
	  function empty() {
	    return [];
	  }
	
	  function selectorAll(selector) {
	    return selector == null ? empty : function() {
	      return this.querySelectorAll(selector);
	    };
	  }
	
	  function selection_selectAll(select) {
	    if (typeof select !== "function") select = selectorAll(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          subgroups.push(select.call(node, node.__data__, i, group));
	          parents.push(node);
	        }
	      }
	    }
	
	    return new Selection(subgroups, parents);
	  }
	
	  function selection_filter(match) {
	    if (typeof match !== "function") match = matcher$1(match);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
	        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
	          subgroup.push(node);
	        }
	      }
	    }
	
	    return new Selection(subgroups, this._parents);
	  }
	
	  function sparse(update) {
	    return new Array(update.length);
	  }
	
	  function selection_enter() {
	    return new Selection(this._enter || this._groups.map(sparse), this._parents);
	  }
	
	  function EnterNode(parent, datum) {
	    this.ownerDocument = parent.ownerDocument;
	    this.namespaceURI = parent.namespaceURI;
	    this._next = null;
	    this._parent = parent;
	    this.__data__ = datum;
	  }
	
	  EnterNode.prototype = {
	    constructor: EnterNode,
	    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
	    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
	    querySelector: function(selector) { return this._parent.querySelector(selector); },
	    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
	  };
	
	  function constant$4(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  var keyPrefix = "$"; // Protect against keys like “__proto__”.
	
	  function bindIndex(parent, group, enter, update, exit, data) {
	    var i = 0,
	        node,
	        groupLength = group.length,
	        dataLength = data.length;
	
	    // Put any non-null nodes that fit into update.
	    // Put any null nodes into enter.
	    // Put any remaining data into enter.
	    for (; i < dataLength; ++i) {
	      if (node = group[i]) {
	        node.__data__ = data[i];
	        update[i] = node;
	      } else {
	        enter[i] = new EnterNode(parent, data[i]);
	      }
	    }
	
	    // Put any non-null nodes that don’t fit into exit.
	    for (; i < groupLength; ++i) {
	      if (node = group[i]) {
	        exit[i] = node;
	      }
	    }
	  }
	
	  function bindKey(parent, group, enter, update, exit, data, key) {
	    var i,
	        node,
	        nodeByKeyValue = {},
	        groupLength = group.length,
	        dataLength = data.length,
	        keyValues = new Array(groupLength),
	        keyValue;
	
	    // Compute the key for each node.
	    // If multiple nodes have the same key, the duplicates are added to exit.
	    for (i = 0; i < groupLength; ++i) {
	      if (node = group[i]) {
	        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);
	        if (keyValue in nodeByKeyValue) {
	          exit[i] = node;
	        } else {
	          nodeByKeyValue[keyValue] = node;
	        }
	      }
	    }
	
	    // Compute the key for each datum.
	    // If there a node associated with this key, join and add it to update.
	    // If there is not (or the key is a duplicate), add it to enter.
	    for (i = 0; i < dataLength; ++i) {
	      keyValue = keyPrefix + key.call(parent, data[i], i, data);
	      if (node = nodeByKeyValue[keyValue]) {
	        update[i] = node;
	        node.__data__ = data[i];
	        nodeByKeyValue[keyValue] = null;
	      } else {
	        enter[i] = new EnterNode(parent, data[i]);
	      }
	    }
	
	    // Add any remaining nodes that were not bound to data to exit.
	    for (i = 0; i < groupLength; ++i) {
	      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {
	        exit[i] = node;
	      }
	    }
	  }
	
	  function selection_data(value, key) {
	    if (!value) {
	      data = new Array(this.size()), j = -1;
	      this.each(function(d) { data[++j] = d; });
	      return data;
	    }
	
	    var bind = key ? bindKey : bindIndex,
	        parents = this._parents,
	        groups = this._groups;
	
	    if (typeof value !== "function") value = constant$4(value);
	
	    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
	      var parent = parents[j],
	          group = groups[j],
	          groupLength = group.length,
	          data = value.call(parent, parent && parent.__data__, j, parents),
	          dataLength = data.length,
	          enterGroup = enter[j] = new Array(dataLength),
	          updateGroup = update[j] = new Array(dataLength),
	          exitGroup = exit[j] = new Array(groupLength);
	
	      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
	
	      // Now connect the enter nodes to their following update node, such that
	      // appendChild can insert the materialized enter node before this node,
	      // rather than at the end of the parent node.
	      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
	        if (previous = enterGroup[i0]) {
	          if (i0 >= i1) i1 = i0 + 1;
	          while (!(next = updateGroup[i1]) && ++i1 < dataLength);
	          previous._next = next || null;
	        }
	      }
	    }
	
	    update = new Selection(update, parents);
	    update._enter = enter;
	    update._exit = exit;
	    return update;
	  }
	
	  function selection_exit() {
	    return new Selection(this._exit || this._groups.map(sparse), this._parents);
	  }
	
	  function selection_merge(selection) {
	
	    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
	      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group0[i] || group1[i]) {
	          merge[i] = node;
	        }
	      }
	    }
	
	    for (; j < m0; ++j) {
	      merges[j] = groups0[j];
	    }
	
	    return new Selection(merges, this._parents);
	  }
	
	  function selection_order() {
	
	    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
	      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	
	    return this;
	  }
	
	  function selection_sort(compare) {
	    if (!compare) compare = ascending$2;
	
	    function compareNode(a, b) {
	      return a && b ? compare(a.__data__, b.__data__) : !a - !b;
	    }
	
	    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          sortgroup[i] = node;
	        }
	      }
	      sortgroup.sort(compareNode);
	    }
	
	    return new Selection(sortgroups, this._parents).order();
	  }
	
	  function ascending$2(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	
	  function selection_call() {
	    var callback = arguments[0];
	    arguments[0] = this;
	    callback.apply(null, arguments);
	    return this;
	  }
	
	  function selection_nodes() {
	    var nodes = new Array(this.size()), i = -1;
	    this.each(function() { nodes[++i] = this; });
	    return nodes;
	  }
	
	  function selection_node() {
	
	    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
	      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	
	    return null;
	  }
	
	  function selection_size() {
	    var size = 0;
	    this.each(function() { ++size; });
	    return size;
	  }
	
	  function selection_empty() {
	    return !this.node();
	  }
	
	  function selection_each(callback) {
	
	    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
	        if (node = group[i]) callback.call(node, node.__data__, i, group);
	      }
	    }
	
	    return this;
	  }
	
	  function attrRemove(name) {
	    return function() {
	      this.removeAttribute(name);
	    };
	  }
	
	  function attrRemoveNS(fullname) {
	    return function() {
	      this.removeAttributeNS(fullname.space, fullname.local);
	    };
	  }
	
	  function attrConstant(name, value) {
	    return function() {
	      this.setAttribute(name, value);
	    };
	  }
	
	  function attrConstantNS(fullname, value) {
	    return function() {
	      this.setAttributeNS(fullname.space, fullname.local, value);
	    };
	  }
	
	  function attrFunction(name, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.removeAttribute(name);
	      else this.setAttribute(name, v);
	    };
	  }
	
	  function attrFunctionNS(fullname, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
	      else this.setAttributeNS(fullname.space, fullname.local, v);
	    };
	  }
	
	  function selection_attr(name, value) {
	    var fullname = namespace(name);
	
	    if (arguments.length < 2) {
	      var node = this.node();
	      return fullname.local
	          ? node.getAttributeNS(fullname.space, fullname.local)
	          : node.getAttribute(fullname);
	    }
	
	    return this.each((value == null
	        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
	        ? (fullname.local ? attrFunctionNS : attrFunction)
	        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
	  }
	
	  function window(node) {
	    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
	        || (node.document && node) // node is a Window
	        || node.defaultView; // node is a Document
	  }
	
	  function styleRemove(name) {
	    return function() {
	      this.style.removeProperty(name);
	    };
	  }
	
	  function styleConstant(name, value, priority) {
	    return function() {
	      this.style.setProperty(name, value, priority);
	    };
	  }
	
	  function styleFunction(name, value, priority) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) this.style.removeProperty(name);
	      else this.style.setProperty(name, v, priority);
	    };
	  }
	
	  function selection_style(name, value, priority) {
	    var node;
	    return arguments.length > 1
	        ? this.each((value == null
	              ? styleRemove : typeof value === "function"
	              ? styleFunction
	              : styleConstant)(name, value, priority == null ? "" : priority))
	        : window(node = this.node())
	            .getComputedStyle(node, null)
	            .getPropertyValue(name);
	  }
	
	  function propertyRemove(name) {
	    return function() {
	      delete this[name];
	    };
	  }
	
	  function propertyConstant(name, value) {
	    return function() {
	      this[name] = value;
	    };
	  }
	
	  function propertyFunction(name, value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      if (v == null) delete this[name];
	      else this[name] = v;
	    };
	  }
	
	  function selection_property(name, value) {
	    return arguments.length > 1
	        ? this.each((value == null
	            ? propertyRemove : typeof value === "function"
	            ? propertyFunction
	            : propertyConstant)(name, value))
	        : this.node()[name];
	  }
	
	  function classArray(string) {
	    return string.trim().split(/^|\s+/);
	  }
	
	  function classList(node) {
	    return node.classList || new ClassList(node);
	  }
	
	  function ClassList(node) {
	    this._node = node;
	    this._names = classArray(node.getAttribute("class") || "");
	  }
	
	  ClassList.prototype = {
	    add: function(name) {
	      var i = this._names.indexOf(name);
	      if (i < 0) {
	        this._names.push(name);
	        this._node.setAttribute("class", this._names.join(" "));
	      }
	    },
	    remove: function(name) {
	      var i = this._names.indexOf(name);
	      if (i >= 0) {
	        this._names.splice(i, 1);
	        this._node.setAttribute("class", this._names.join(" "));
	      }
	    },
	    contains: function(name) {
	      return this._names.indexOf(name) >= 0;
	    }
	  };
	
	  function classedAdd(node, names) {
	    var list = classList(node), i = -1, n = names.length;
	    while (++i < n) list.add(names[i]);
	  }
	
	  function classedRemove(node, names) {
	    var list = classList(node), i = -1, n = names.length;
	    while (++i < n) list.remove(names[i]);
	  }
	
	  function classedTrue(names) {
	    return function() {
	      classedAdd(this, names);
	    };
	  }
	
	  function classedFalse(names) {
	    return function() {
	      classedRemove(this, names);
	    };
	  }
	
	  function classedFunction(names, value) {
	    return function() {
	      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
	    };
	  }
	
	  function selection_classed(name, value) {
	    var names = classArray(name + "");
	
	    if (arguments.length < 2) {
	      var list = classList(this.node()), i = -1, n = names.length;
	      while (++i < n) if (!list.contains(names[i])) return false;
	      return true;
	    }
	
	    return this.each((typeof value === "function"
	        ? classedFunction : value
	        ? classedTrue
	        : classedFalse)(names, value));
	  }
	
	  function textRemove() {
	    this.textContent = "";
	  }
	
	  function textConstant(value) {
	    return function() {
	      this.textContent = value;
	    };
	  }
	
	  function textFunction(value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    };
	  }
	
	  function selection_text(value) {
	    return arguments.length
	        ? this.each(value == null
	            ? textRemove : (typeof value === "function"
	            ? textFunction
	            : textConstant)(value))
	        : this.node().textContent;
	  }
	
	  function htmlRemove() {
	    this.innerHTML = "";
	  }
	
	  function htmlConstant(value) {
	    return function() {
	      this.innerHTML = value;
	    };
	  }
	
	  function htmlFunction(value) {
	    return function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    };
	  }
	
	  function selection_html(value) {
	    return arguments.length
	        ? this.each(value == null
	            ? htmlRemove : (typeof value === "function"
	            ? htmlFunction
	            : htmlConstant)(value))
	        : this.node().innerHTML;
	  }
	
	  function raise$1() {
	    if (this.nextSibling) this.parentNode.appendChild(this);
	  }
	
	  function selection_raise() {
	    return this.each(raise$1);
	  }
	
	  function lower() {
	    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
	  }
	
	  function selection_lower() {
	    return this.each(lower);
	  }
	
	  function selection_append(name) {
	    var create = typeof name === "function" ? name : creator(name);
	    return this.select(function() {
	      return this.appendChild(create.apply(this, arguments));
	    });
	  }
	
	  function constantNull() {
	    return null;
	  }
	
	  function selection_insert(name, before) {
	    var create = typeof name === "function" ? name : creator(name),
	        select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
	    return this.select(function() {
	      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
	    });
	  }
	
	  function remove() {
	    var parent = this.parentNode;
	    if (parent) parent.removeChild(this);
	  }
	
	  function selection_remove() {
	    return this.each(remove);
	  }
	
	  function selection_datum(value) {
	    return arguments.length
	        ? this.property("__data__", value)
	        : this.node().__data__;
	  }
	
	  function dispatchEvent(node, type, params) {
	    var window$$ = window(node),
	        event = window$$.CustomEvent;
	
	    if (event) {
	      event = new event(type, params);
	    } else {
	      event = window$$.document.createEvent("Event");
	      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
	      else event.initEvent(type, false, false);
	    }
	
	    node.dispatchEvent(event);
	  }
	
	  function dispatchConstant(type, params) {
	    return function() {
	      return dispatchEvent(this, type, params);
	    };
	  }
	
	  function dispatchFunction(type, params) {
	    return function() {
	      return dispatchEvent(this, type, params.apply(this, arguments));
	    };
	  }
	
	  function selection_dispatch(type, params) {
	    return this.each((typeof params === "function"
	        ? dispatchFunction
	        : dispatchConstant)(type, params));
	  }
	
	  var root = [null];
	
	  function Selection(groups, parents) {
	    this._groups = groups;
	    this._parents = parents;
	  }
	
	  function selection() {
	    return new Selection([[document.documentElement]], root);
	  }
	
	  Selection.prototype = selection.prototype = {
	    constructor: Selection,
	    select: selection_select,
	    selectAll: selection_selectAll,
	    filter: selection_filter,
	    data: selection_data,
	    enter: selection_enter,
	    exit: selection_exit,
	    merge: selection_merge,
	    order: selection_order,
	    sort: selection_sort,
	    call: selection_call,
	    nodes: selection_nodes,
	    node: selection_node,
	    size: selection_size,
	    empty: selection_empty,
	    each: selection_each,
	    attr: selection_attr,
	    style: selection_style,
	    property: selection_property,
	    classed: selection_classed,
	    text: selection_text,
	    html: selection_html,
	    raise: selection_raise,
	    lower: selection_lower,
	    append: selection_append,
	    insert: selection_insert,
	    remove: selection_remove,
	    datum: selection_datum,
	    on: selection_on,
	    dispatch: selection_dispatch
	  };
	
	  function select(selector) {
	    return typeof selector === "string"
	        ? new Selection([[document.querySelector(selector)]], [document.documentElement])
	        : new Selection([[selector]], root);
	  }
	
	  function selectAll(selector) {
	    return typeof selector === "string"
	        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])
	        : new Selection([selector == null ? [] : selector], root);
	  }
	
	  function touch(node, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;
	
	    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return point$5(node, touch);
	      }
	    }
	
	    return null;
	  }
	
	  function touches(node, touches) {
	    if (touches == null) touches = sourceEvent().touches;
	
	    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
	      points[i] = point$5(node, touches[i]);
	    }
	
	    return points;
	  }
	
	  var emptyOn = dispatch("start", "end", "interrupt");
	  var emptyTween = [];
	
	  var CREATED = 0;
	  var SCHEDULED = 1;
	  var STARTING = 2;
	  var STARTED = 3;
	  var ENDING = 4;
	  var ENDED = 5;
	
	  function schedule(node, name, id, index, group, timing) {
	    var schedules = node.__transition;
	    if (!schedules) node.__transition = {};
	    else if (id in schedules) return;
	    create(node, id, {
	      name: name,
	      index: index, // For context during callback.
	      group: group, // For context during callback.
	      on: emptyOn,
	      tween: emptyTween,
	      time: timing.time,
	      delay: timing.delay,
	      duration: timing.duration,
	      ease: timing.ease,
	      timer: null,
	      state: CREATED
	    });
	  }
	
	  function init(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error("too late");
	    return schedule;
	  }
	
	  function set$2(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error("too late");
	    return schedule;
	  }
	
	  function get$1(node, id) {
	    var schedule = node.__transition;
	    if (!schedule || !(schedule = schedule[id])) throw new Error("too late");
	    return schedule;
	  }
	
	  function create(node, id, self) {
	    var schedules = node.__transition,
	        tween;
	
	    // Initialize the self timer when the transition is created.
	    // Note the actual delay is not known until the first callback!
	    schedules[id] = self;
	    self.timer = timer(schedule, 0, self.time);
	
	    // If the delay is greater than this first sleep, sleep some more;
	    // otherwise, start immediately.
	    function schedule(elapsed) {
	      self.state = SCHEDULED;
	      if (self.delay <= elapsed) start(elapsed - self.delay);
	      else self.timer.restart(start, self.delay, self.time);
	    }
	
	    function start(elapsed) {
	      var i, j, n, o;
	
	      for (i in schedules) {
	        o = schedules[i];
	        if (o.name !== self.name) continue;
	
	        // Interrupt the active transition, if any.
	        // Dispatch the interrupt event.
	        if (o.state === STARTED) {
	          o.state = ENDED;
	          o.timer.stop();
	          o.on.call("interrupt", node, node.__data__, o.index, o.group);
	          delete schedules[i];
	        }
	
	        // Cancel any pre-empted transitions. No interrupt event is dispatched
	        // because the cancelled transitions never started. Note that this also
	        // removes this transition from the pending list!
	        else if (+i < id) {
	          o.state = ENDED;
	          o.timer.stop();
	          delete schedules[i];
	        }
	      }
	
	      // Defer the first tick to end of the current frame; see mbostock/d3#1576.
	      // Note the transition may be canceled after start and before the first tick!
	      // Note this must be scheduled before the start event; see d3/d3-transition#16!
	      // Assuming this is successful, subsequent callbacks go straight to tick.
	      timeout$1(function() {
	        if (self.state === STARTED) {
	          self.timer.restart(tick, self.delay, self.time);
	          tick(elapsed);
	        }
	      });
	
	      // Dispatch the start event.
	      // Note this must be done before the tween are initialized.
	      self.state = STARTING;
	      self.on.call("start", node, node.__data__, self.index, self.group);
	      if (self.state !== STARTING) return; // interrupted
	      self.state = STARTED;
	
	      // Initialize the tween, deleting null tween.
	      tween = new Array(n = self.tween.length);
	      for (i = 0, j = -1; i < n; ++i) {
	        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
	          tween[++j] = o;
	        }
	      }
	      tween.length = j + 1;
	    }
	
	    function tick(elapsed) {
	      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),
	          i = -1,
	          n = tween.length;
	
	      while (++i < n) {
	        tween[i].call(null, t);
	      }
	
	      // Dispatch the end event.
	      if (self.state === ENDING) {
	        self.state = ENDED;
	        self.timer.stop();
	        self.on.call("end", node, node.__data__, self.index, self.group);
	        for (i in schedules) if (+i !== id) return void delete schedules[id];
	        delete node.__transition;
	      }
	    }
	  }
	
	  function interrupt(node, name) {
	    var schedules = node.__transition,
	        schedule,
	        active,
	        empty = true,
	        i;
	
	    if (!schedules) return;
	
	    name = name == null ? null : name + "";
	
	    for (i in schedules) {
	      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
	      active = schedule.state === STARTED;
	      schedule.state = ENDED;
	      schedule.timer.stop();
	      if (active) schedule.on.call("interrupt", node, node.__data__, schedule.index, schedule.group);
	      delete schedules[i];
	    }
	
	    if (empty) delete node.__transition;
	  }
	
	  function selection_interrupt(name) {
	    return this.each(function() {
	      interrupt(this, name);
	    });
	  }
	
	  function tweenRemove(id, name) {
	    var tween0, tween1;
	    return function() {
	      var schedule = set$2(this, id),
	          tween = schedule.tween;
	
	      // If this node shared tween with the previous node,
	      // just assign the updated shared tween and we’re done!
	      // Otherwise, copy-on-write.
	      if (tween !== tween0) {
	        tween1 = tween0 = tween;
	        for (var i = 0, n = tween1.length; i < n; ++i) {
	          if (tween1[i].name === name) {
	            tween1 = tween1.slice();
	            tween1.splice(i, 1);
	            break;
	          }
	        }
	      }
	
	      schedule.tween = tween1;
	    };
	  }
	
	  function tweenFunction(id, name, value) {
	    var tween0, tween1;
	    if (typeof value !== "function") throw new Error;
	    return function() {
	      var schedule = set$2(this, id),
	          tween = schedule.tween;
	
	      // If this node shared tween with the previous node,
	      // just assign the updated shared tween and we’re done!
	      // Otherwise, copy-on-write.
	      if (tween !== tween0) {
	        tween1 = (tween0 = tween).slice();
	        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
	          if (tween1[i].name === name) {
	            tween1[i] = t;
	            break;
	          }
	        }
	        if (i === n) tween1.push(t);
	      }
	
	      schedule.tween = tween1;
	    };
	  }
	
	  function transition_tween(name, value) {
	    var id = this._id;
	
	    name += "";
	
	    if (arguments.length < 2) {
	      var tween = get$1(this.node(), id).tween;
	      for (var i = 0, n = tween.length, t; i < n; ++i) {
	        if ((t = tween[i]).name === name) {
	          return t.value;
	        }
	      }
	      return null;
	    }
	
	    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
	  }
	
	  function tweenValue(transition, name, value) {
	    var id = transition._id;
	
	    transition.each(function() {
	      var schedule = set$2(this, id);
	      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
	    });
	
	    return function(node) {
	      return get$1(node, id).value[name];
	    };
	  }
	
	  function interpolate$1(a, b) {
	    var c;
	    return (typeof b === "number" ? interpolateNumber
	        : b instanceof color ? interpolateRgb
	        : (c = color(b)) ? (b = c, interpolateRgb)
	        : interpolateString)(a, b);
	  }
	
	  function attrRemove$1(name) {
	    return function() {
	      this.removeAttribute(name);
	    };
	  }
	
	  function attrRemoveNS$1(fullname) {
	    return function() {
	      this.removeAttributeNS(fullname.space, fullname.local);
	    };
	  }
	
	  function attrConstant$1(name, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = this.getAttribute(name);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function attrConstantNS$1(fullname, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = this.getAttributeNS(fullname.space, fullname.local);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function attrFunction$1(name, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var value0, value1 = value(this);
	      if (value1 == null) return void this.removeAttribute(name);
	      value0 = this.getAttribute(name);
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function attrFunctionNS$1(fullname, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var value0, value1 = value(this);
	      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
	      value0 = this.getAttributeNS(fullname.space, fullname.local);
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function transition_attr(name, value) {
	    var fullname = namespace(name), i = fullname === "transform" ? interpolateTransform$2 : interpolate$1;
	    return this.attrTween(name, typeof value === "function"
	        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value))
	        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)
	        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));
	  }
	
	  function attrTweenNS(fullname, value) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.setAttributeNS(fullname.space, fullname.local, i(t));
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function attrTween(name, value) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.setAttribute(name, i(t));
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function transition_attrTween(name, value) {
	    var key = "attr." + name;
	    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
	    if (value == null) return this.tween(key, null);
	    if (typeof value !== "function") throw new Error;
	    var fullname = namespace(name);
	    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
	  }
	
	  function delayFunction(id, value) {
	    return function() {
	      init(this, id).delay = +value.apply(this, arguments);
	    };
	  }
	
	  function delayConstant(id, value) {
	    return value = +value, function() {
	      init(this, id).delay = value;
	    };
	  }
	
	  function transition_delay(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each((typeof value === "function"
	            ? delayFunction
	            : delayConstant)(id, value))
	        : get$1(this.node(), id).delay;
	  }
	
	  function durationFunction(id, value) {
	    return function() {
	      set$2(this, id).duration = +value.apply(this, arguments);
	    };
	  }
	
	  function durationConstant(id, value) {
	    return value = +value, function() {
	      set$2(this, id).duration = value;
	    };
	  }
	
	  function transition_duration(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each((typeof value === "function"
	            ? durationFunction
	            : durationConstant)(id, value))
	        : get$1(this.node(), id).duration;
	  }
	
	  function easeConstant(id, value) {
	    if (typeof value !== "function") throw new Error;
	    return function() {
	      set$2(this, id).ease = value;
	    };
	  }
	
	  function transition_ease(value) {
	    var id = this._id;
	
	    return arguments.length
	        ? this.each(easeConstant(id, value))
	        : get$1(this.node(), id).ease;
	  }
	
	  function transition_filter(match) {
	    if (typeof match !== "function") match = matcher$1(match);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
	        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
	          subgroup.push(node);
	        }
	      }
	    }
	
	    return new Transition(subgroups, this._parents, this._name, this._id);
	  }
	
	  function transition_merge(transition) {
	    if (transition._id !== this._id) throw new Error;
	
	    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
	      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
	        if (node = group0[i] || group1[i]) {
	          merge[i] = node;
	        }
	      }
	    }
	
	    for (; j < m0; ++j) {
	      merges[j] = groups0[j];
	    }
	
	    return new Transition(merges, this._parents, this._name, this._id);
	  }
	
	  function start$1(name) {
	    return (name + "").trim().split(/^|\s+/).every(function(t) {
	      var i = t.indexOf(".");
	      if (i >= 0) t = t.slice(0, i);
	      return !t || t === "start";
	    });
	  }
	
	  function onFunction(id, name, listener) {
	    var on0, on1, sit = start$1(name) ? init : set$2;
	    return function() {
	      var schedule = sit(this, id),
	          on = schedule.on;
	
	      // If this node shared a dispatch with the previous node,
	      // just assign the updated shared dispatch and we’re done!
	      // Otherwise, copy-on-write.
	      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
	
	      schedule.on = on1;
	    };
	  }
	
	  function transition_on(name, listener) {
	    var id = this._id;
	
	    return arguments.length < 2
	        ? get$1(this.node(), id).on.on(name)
	        : this.each(onFunction(id, name, listener));
	  }
	
	  function removeFunction(id) {
	    return function() {
	      var parent = this.parentNode;
	      for (var i in this.__transition) if (+i !== id) return;
	      if (parent) parent.removeChild(this);
	    };
	  }
	
	  function transition_remove() {
	    return this.on("end.remove", removeFunction(this._id));
	  }
	
	  function transition_select(select) {
	    var name = this._name,
	        id = this._id;
	
	    if (typeof select !== "function") select = selector(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
	        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          subgroup[i] = subnode;
	          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));
	        }
	      }
	    }
	
	    return new Transition(subgroups, this._parents, name, id);
	  }
	
	  function transition_selectAll(select) {
	    var name = this._name,
	        id = this._id;
	
	    if (typeof select !== "function") select = selectorAll(select);
	
	    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {
	            if (child = children[k]) {
	              schedule(child, name, id, k, children, inherit);
	            }
	          }
	          subgroups.push(children);
	          parents.push(node);
	        }
	      }
	    }
	
	    return new Transition(subgroups, parents, name, id);
	  }
	
	  var Selection$1 = selection.prototype.constructor;
	
	  function transition_selection() {
	    return new Selection$1(this._groups, this._parents);
	  }
	
	  function styleRemove$1(name, interpolate) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var style = window(this).getComputedStyle(this, null),
	          value0 = style.getPropertyValue(name),
	          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function styleRemoveEnd(name) {
	    return function() {
	      this.style.removeProperty(name);
	    };
	  }
	
	  function styleConstant$1(name, interpolate, value1) {
	    var value00,
	        interpolate0;
	    return function() {
	      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);
	      return value0 === value1 ? null
	          : value0 === value00 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value1);
	    };
	  }
	
	  function styleFunction$1(name, interpolate, value) {
	    var value00,
	        value10,
	        interpolate0;
	    return function() {
	      var style = window(this).getComputedStyle(this, null),
	          value0 = style.getPropertyValue(name),
	          value1 = value(this);
	      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));
	      return value0 === value1 ? null
	          : value0 === value00 && value1 === value10 ? interpolate0
	          : interpolate0 = interpolate(value00 = value0, value10 = value1);
	    };
	  }
	
	  function transition_style(name, value, priority) {
	    var i = (name += "") === "transform" ? interpolateTransform$1 : interpolate$1;
	    return value == null ? this
	            .styleTween(name, styleRemove$1(name, i))
	            .on("end.style." + name, styleRemoveEnd(name))
	        : this.styleTween(name, typeof value === "function"
	            ? styleFunction$1(name, i, tweenValue(this, "style." + name, value))
	            : styleConstant$1(name, i, value), priority);
	  }
	
	  function styleTween(name, value, priority) {
	    function tween() {
	      var node = this, i = value.apply(node, arguments);
	      return i && function(t) {
	        node.style.setProperty(name, i(t), priority);
	      };
	    }
	    tween._value = value;
	    return tween;
	  }
	
	  function transition_styleTween(name, value, priority) {
	    var key = "style." + (name += "");
	    if (arguments.length < 2) return (key = this.tween(key)) && key._value;
	    if (value == null) return this.tween(key, null);
	    if (typeof value !== "function") throw new Error;
	    return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
	  }
	
	  function textConstant$1(value) {
	    return function() {
	      this.textContent = value;
	    };
	  }
	
	  function textFunction$1(value) {
	    return function() {
	      var value1 = value(this);
	      this.textContent = value1 == null ? "" : value1;
	    };
	  }
	
	  function transition_text(value) {
	    return this.tween("text", typeof value === "function"
	        ? textFunction$1(tweenValue(this, "text", value))
	        : textConstant$1(value == null ? "" : value + ""));
	  }
	
	  function transition_transition() {
	    var name = this._name,
	        id0 = this._id,
	        id1 = newId();
	
	    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          var inherit = get$1(node, id0);
	          schedule(node, name, id1, i, group, {
	            time: inherit.time + inherit.delay + inherit.duration,
	            delay: 0,
	            duration: inherit.duration,
	            ease: inherit.ease
	          });
	        }
	      }
	    }
	
	    return new Transition(groups, this._parents, name, id1);
	  }
	
	  var id = 0;
	
	  function Transition(groups, parents, name, id) {
	    this._groups = groups;
	    this._parents = parents;
	    this._name = name;
	    this._id = id;
	  }
	
	  function transition(name) {
	    return selection().transition(name);
	  }
	
	  function newId() {
	    return ++id;
	  }
	
	  var selection_prototype = selection.prototype;
	
	  Transition.prototype = transition.prototype = {
	    constructor: Transition,
	    select: transition_select,
	    selectAll: transition_selectAll,
	    filter: transition_filter,
	    merge: transition_merge,
	    selection: transition_selection,
	    transition: transition_transition,
	    call: selection_prototype.call,
	    nodes: selection_prototype.nodes,
	    node: selection_prototype.node,
	    size: selection_prototype.size,
	    empty: selection_prototype.empty,
	    each: selection_prototype.each,
	    on: transition_on,
	    attr: transition_attr,
	    attrTween: transition_attrTween,
	    style: transition_style,
	    styleTween: transition_styleTween,
	    text: transition_text,
	    remove: transition_remove,
	    tween: transition_tween,
	    delay: transition_delay,
	    duration: transition_duration,
	    ease: transition_ease
	  };
	
	  var defaultTiming = {
	    time: null, // Set on use.
	    delay: 0,
	    duration: 250,
	    ease: easeCubicInOut
	  };
	
	  function inherit(node, id) {
	    var timing;
	    while (!(timing = node.__transition) || !(timing = timing[id])) {
	      if (!(node = node.parentNode)) {
	        return defaultTiming.time = now(), defaultTiming;
	      }
	    }
	    return timing;
	  }
	
	  function selection_transition(name) {
	    var id,
	        timing;
	
	    if (name instanceof Transition) {
	      id = name._id, name = name._name;
	    } else {
	      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
	    }
	
	    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
	      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
	        if (node = group[i]) {
	          schedule(node, name, id, i, group, timing || inherit(node, id));
	        }
	      }
	    }
	
	    return new Transition(groups, this._parents, name, id);
	  }
	
	  selection.prototype.interrupt = selection_interrupt;
	  selection.prototype.transition = selection_transition;
	
	  var root$1 = [null];
	
	  function active(node, name) {
	    var schedules = node.__transition,
	        schedule,
	        i;
	
	    if (schedules) {
	      name = name == null ? null : name + "";
	      for (i in schedules) {
	        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
	          return new Transition([[node]], root$1, name, +i);
	        }
	      }
	    }
	
	    return null;
	  }
	
	  var slice$4 = Array.prototype.slice;
	
	  function identity$5(x) {
	    return x;
	  }
	
	  var top = 1;
	  var right = 2;
	  var bottom = 3;
	  var left = 4;
	var   epsilon$2 = 1e-6;
	  function translateX(scale0, scale1, d) {
	    var x = scale0(d);
	    return "translate(" + (isFinite(x) ? x : scale1(d)) + ",0)";
	  }
	
	  function translateY(scale0, scale1, d) {
	    var y = scale0(d);
	    return "translate(0," + (isFinite(y) ? y : scale1(d)) + ")";
	  }
	
	  function center(scale) {
	    var width = scale.bandwidth() / 2;
	    return function(d) {
	      return scale(d) + width;
	    };
	  }
	
	  function entering() {
	    return !this.__axis;
	  }
	
	  function axis(orient, scale) {
	    var tickArguments = [],
	        tickValues = null,
	        tickFormat = null,
	        tickSizeInner = 6,
	        tickSizeOuter = 6,
	        tickPadding = 3;
	
	    function axis(context) {
	      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
	          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,
	          spacing = Math.max(tickSizeInner, 0) + tickPadding,
	          transform = orient === top || orient === bottom ? translateX : translateY,
	          range = scale.range(),
	          range0 = range[0] + 0.5,
	          range1 = range[range.length - 1] + 0.5,
	          position = (scale.bandwidth ? center : identity$5)(scale.copy()),
	          selection = context.selection ? context.selection() : context,
	          path = selection.selectAll(".domain").data([null]),
	          tick = selection.selectAll(".tick").data(values, scale).order(),
	          tickExit = tick.exit(),
	          tickEnter = tick.enter().append("g").attr("class", "tick"),
	          line = tick.select("line"),
	          text = tick.select("text"),
	          k = orient === top || orient === left ? -1 : 1,
	          x, y = orient === left || orient === right ? (x = "x", "y") : (x = "y", "x");
	
	      path = path.merge(path.enter().insert("path", ".tick")
	          .attr("class", "domain")
	          .attr("stroke", "#000"));
	
	      tick = tick.merge(tickEnter);
	
	      line = line.merge(tickEnter.append("line")
	          .attr("stroke", "#000")
	          .attr(x + "2", k * tickSizeInner)
	          .attr(y + "1", 0.5)
	          .attr(y + "2", 0.5));
	
	      text = text.merge(tickEnter.append("text")
	          .attr("fill", "#000")
	          .attr(x, k * spacing)
	          .attr(y, 0.5)
	          .attr("dy", orient === top ? "0em" : orient === bottom ? ".71em" : ".32em"));
	
	      if (context !== selection) {
	        path = path.transition(context);
	        tick = tick.transition(context);
	        line = line.transition(context);
	        text = text.transition(context);
	
	        tickExit = tickExit.transition(context)
	            .attr("opacity", epsilon$2)
	            .attr("transform", function(d) { return transform(position, this.parentNode.__axis || position, d); });
	
	        tickEnter
	            .attr("opacity", epsilon$2)
	            .attr("transform", function(d) { return transform(this.parentNode.__axis || position, position, d); });
	      }
	
	      tickExit.remove();
	
	      path
	          .attr("d", orient === left || orient == right
	              ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter
	              : "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter);
	
	      tick
	          .attr("opacity", 1)
	          .attr("transform", function(d) { return transform(position, position, d); });
	
	      line
	          .attr(x + "2", k * tickSizeInner);
	
	      text
	          .attr(x, k * spacing)
	          .text(format);
	
	      selection.filter(entering)
	          .attr("fill", "none")
	          .attr("font-size", 10)
	          .attr("font-family", "sans-serif")
	          .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
	
	      selection
	          .each(function() { this.__axis = position; });
	    }
	
	    axis.scale = function(_) {
	      return arguments.length ? (scale = _, axis) : scale;
	    };
	
	    axis.ticks = function() {
	      return tickArguments = slice$4.call(arguments), axis;
	    };
	
	    axis.tickArguments = function(_) {
	      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();
	    };
	
	    axis.tickValues = function(_) {
	      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();
	    };
	
	    axis.tickFormat = function(_) {
	      return arguments.length ? (tickFormat = _, axis) : tickFormat;
	    };
	
	    axis.tickSize = function(_) {
	      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
	    };
	
	    axis.tickSizeInner = function(_) {
	      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
	    };
	
	    axis.tickSizeOuter = function(_) {
	      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
	    };
	
	    axis.tickPadding = function(_) {
	      return arguments.length ? (tickPadding = +_, axis) : tickPadding;
	    };
	
	    return axis;
	  }
	
	  function axisTop(scale) {
	    return axis(top, scale);
	  }
	
	  function axisRight(scale) {
	    return axis(right, scale);
	  }
	
	  function axisBottom(scale) {
	    return axis(bottom, scale);
	  }
	
	  function axisLeft(scale) {
	    return axis(left, scale);
	  }
	
	  function defaultSeparation(a, b) {
	    return a.parent === b.parent ? 1 : 2;
	  }
	
	  function meanX(children) {
	    return children.reduce(meanXReduce, 0) / children.length;
	  }
	
	  function meanXReduce(x, c) {
	    return x + c.x;
	  }
	
	  function maxY(children) {
	    return 1 + children.reduce(maxYReduce, 0);
	  }
	
	  function maxYReduce(y, c) {
	    return Math.max(y, c.y);
	  }
	
	  function leafLeft(node) {
	    var children;
	    while (children = node.children) node = children[0];
	    return node;
	  }
	
	  function leafRight(node) {
	    var children;
	    while (children = node.children) node = children[children.length - 1];
	    return node;
	  }
	
	  function cluster() {
	    var separation = defaultSeparation,
	        dx = 1,
	        dy = 1,
	        nodeSize = false;
	
	    function cluster(root) {
	      var previousNode,
	          x = 0;
	
	      // First walk, computing the initial x & y values.
	      root.eachAfter(function(node) {
	        var children = node.children;
	        if (children) {
	          node.x = meanX(children);
	          node.y = maxY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	
	      var left = leafLeft(root),
	          right = leafRight(root),
	          x0 = left.x - separation(left, right) / 2,
	          x1 = right.x + separation(right, left) / 2;
	
	      // Second walk, normalizing x & y to the desired size.
	      return root.eachAfter(nodeSize ? function(node) {
	        node.x = (node.x - root.x) * dx;
	        node.y = (root.y - node.y) * dy;
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * dx;
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
	      });
	    }
	
	    cluster.separation = function(x) {
	      return arguments.length ? (separation = x, cluster) : separation;
	    };
	
	    cluster.size = function(x) {
	      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
	    };
	
	    cluster.nodeSize = function(x) {
	      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
	    };
	
	    return cluster;
	  }
	
	  function node_each(callback) {
	    var node = this, current, next = [node], children, i, n;
	    do {
	      current = next.reverse(), next = [];
	      while (node = current.pop()) {
	        callback(node), children = node.children;
	        if (children) for (i = 0, n = children.length; i < n; ++i) {
	          next.push(children[i]);
	        }
	      }
	    } while (next.length);
	    return this;
	  }
	
	  function node_eachBefore(callback) {
	    var node = this, nodes = [node], children, i;
	    while (node = nodes.pop()) {
	      callback(node), children = node.children;
	      if (children) for (i = children.length - 1; i >= 0; --i) {
	        nodes.push(children[i]);
	      }
	    }
	    return this;
	  }
	
	  function node_eachAfter(callback) {
	    var node = this, nodes = [node], next = [], children, i, n;
	    while (node = nodes.pop()) {
	      next.push(node), children = node.children;
	      if (children) for (i = 0, n = children.length; i < n; ++i) {
	        nodes.push(children[i]);
	      }
	    }
	    while (node = next.pop()) {
	      callback(node);
	    }
	    return this;
	  }
	
	  function node_sum(value) {
	    return this.eachAfter(function(node) {
	      var sum = +value(node.data) || 0,
	          children = node.children,
	          i = children && children.length;
	      while (--i >= 0) sum += children[i].value;
	      node.value = sum;
	    });
	  }
	
	  function node_sort(compare) {
	    return this.eachBefore(function(node) {
	      if (node.children) {
	        node.children.sort(compare);
	      }
	    });
	  }
	
	  function node_path(end) {
	    var start = this,
	        ancestor = leastCommonAncestor(start, end),
	        nodes = [start];
	    while (start !== ancestor) {
	      start = start.parent;
	      nodes.push(start);
	    }
	    var k = nodes.length;
	    while (end !== ancestor) {
	      nodes.splice(k, 0, end);
	      end = end.parent;
	    }
	    return nodes;
	  }
	
	  function leastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = a.ancestors(),
	        bNodes = b.ancestors(),
	        c = null;
	    a = aNodes.pop();
	    b = bNodes.pop();
	    while (a === b) {
	      c = a;
	      a = aNodes.pop();
	      b = bNodes.pop();
	    }
	    return c;
	  }
	
	  function node_ancestors() {
	    var node = this, nodes = [node];
	    while (node = node.parent) {
	      nodes.push(node);
	    }
	    return nodes;
	  }
	
	  function node_descendants() {
	    var nodes = [];
	    this.each(function(node) {
	      nodes.push(node);
	    });
	    return nodes;
	  }
	
	  function node_leaves() {
	    var leaves = [];
	    this.eachBefore(function(node) {
	      if (!node.children) {
	        leaves.push(node);
	      }
	    });
	    return leaves;
	  }
	
	  function node_links() {
	    var root = this, links = [];
	    root.each(function(node) {
	      if (node !== root) { // Don’t include the root’s parent, if any.
	        links.push({source: node.parent, target: node});
	      }
	    });
	    return links;
	  }
	
	  function hierarchy(data, children) {
	    var root = new Node(data),
	        valued = +data.value && (root.value = data.value),
	        node,
	        nodes = [root],
	        child,
	        childs,
	        i,
	        n;
	
	    if (children == null) children = defaultChildren;
	
	    while (node = nodes.pop()) {
	      if (valued) node.value = +node.data.value;
	      if ((childs = children(node.data)) && (n = childs.length)) {
	        node.children = new Array(n);
	        for (i = n - 1; i >= 0; --i) {
	          nodes.push(child = node.children[i] = new Node(childs[i]));
	          child.parent = node;
	          child.depth = node.depth + 1;
	        }
	      }
	    }
	
	    return root.eachBefore(computeHeight);
	  }
	
	  function node_copy() {
	    return hierarchy(this).eachBefore(copyData);
	  }
	
	  function defaultChildren(d) {
	    return d.children;
	  }
	
	  function copyData(node) {
	    node.data = node.data.data;
	  }
	
	  function computeHeight(node) {
	    var height = 0;
	    do node.height = height;
	    while ((node = node.parent) && (node.height < ++height));
	  }
	
	  function Node(data) {
	    this.data = data;
	    this.depth =
	    this.height = 0;
	    this.parent = null;
	  }
	
	  Node.prototype = hierarchy.prototype = {
	    constructor: Node,
	    each: node_each,
	    eachAfter: node_eachAfter,
	    eachBefore: node_eachBefore,
	    sum: node_sum,
	    sort: node_sort,
	    path: node_path,
	    ancestors: node_ancestors,
	    descendants: node_descendants,
	    leaves: node_leaves,
	    links: node_links,
	    copy: node_copy
	  };
	
	  function Node$2(value) {
	    this._ = value;
	    this.next = null;
	  }
	
	  function shuffle$1(array) {
	    var i,
	        n = (array = array.slice()).length,
	        head = null,
	        node = head;
	
	    while (n) {
	      var next = new Node$2(array[n - 1]);
	      if (node) node = node.next = next;
	      else node = head = next;
	      array[i] = array[--n];
	    }
	
	    return {
	      head: head,
	      tail: node
	    };
	  }
	
	  function enclose(circles) {
	    return encloseN(shuffle$1(circles), []);
	  }
	
	  function encloses(a, b) {
	    var dx = b.x - a.x,
	        dy = b.y - a.y,
	        dr = a.r - b.r;
	    return dr * dr + 1e-6 > dx * dx + dy * dy;
	  }
	
	  // Returns the smallest circle that contains circles L and intersects circles B.
	  function encloseN(L, B) {
	    var circle,
	        l0 = null,
	        l1 = L.head,
	        l2,
	        p1;
	
	    switch (B.length) {
	      case 1: circle = enclose1(B[0]); break;
	      case 2: circle = enclose2(B[0], B[1]); break;
	      case 3: circle = enclose3(B[0], B[1], B[2]); break;
	    }
	
	    while (l1) {
	      p1 = l1._, l2 = l1.next;
	      if (!circle || !encloses(circle, p1)) {
	
	        // Temporarily truncate L before l1.
	        if (l0) L.tail = l0, l0.next = null;
	        else L.head = L.tail = null;
	
	        B.push(p1);
	        circle = encloseN(L, B); // Note: reorders L!
	        B.pop();
	
	        // Move l1 to the front of L and reconnect the truncated list L.
	        if (L.head) l1.next = L.head, L.head = l1;
	        else l1.next = null, L.head = L.tail = l1;
	        l0 = L.tail, l0.next = l2;
	
	      } else {
	        l0 = l1;
	      }
	      l1 = l2;
	    }
	
	    L.tail = l0;
	    return circle;
	  }
	
	  function enclose1(a) {
	    return {
	      x: a.x,
	      y: a.y,
	      r: a.r
	    };
	  }
	
	  function enclose2(a, b) {
	    var x1 = a.x, y1 = a.y, r1 = a.r,
	        x2 = b.x, y2 = b.y, r2 = b.r,
	        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
	        l = Math.sqrt(x21 * x21 + y21 * y21);
	    return {
	      x: (x1 + x2 + x21 / l * r21) / 2,
	      y: (y1 + y2 + y21 / l * r21) / 2,
	      r: (l + r1 + r2) / 2
	    };
	  }
	
	  function enclose3(a, b, c) {
	    var x1 = a.x, y1 = a.y, r1 = a.r,
	        x2 = b.x, y2 = b.y, r2 = b.r,
	        x3 = c.x, y3 = c.y, r3 = c.r,
	        a2 = 2 * (x1 - x2),
	        b2 = 2 * (y1 - y2),
	        c2 = 2 * (r2 - r1),
	        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,
	        a3 = 2 * (x1 - x3),
	        b3 = 2 * (y1 - y3),
	        c3 = 2 * (r3 - r1),
	        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,
	        ab = a3 * b2 - a2 * b3,
	        xa = (b2 * d3 - b3 * d2) / ab - x1,
	        xb = (b3 * c2 - b2 * c3) / ab,
	        ya = (a3 * d2 - a2 * d3) / ab - y1,
	        yb = (a2 * c3 - a3 * c2) / ab,
	        A = xb * xb + yb * yb - 1,
	        B = 2 * (xa * xb + ya * yb + r1),
	        C = xa * xa + ya * ya - r1 * r1,
	        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);
	    return {
	      x: xa + xb * r + x1,
	      y: ya + yb * r + y1,
	      r: r
	    };
	  }
	
	  function place(a, b, c) {
	    var ax = a.x,
	        ay = a.y,
	        da = b.r + c.r,
	        db = a.r + c.r,
	        dx = b.x - ax,
	        dy = b.y - ay,
	        dc = dx * dx + dy * dy;
	    if (dc) {
	      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),
	          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = ax + x * dx + y * dy;
	      c.y = ay + x * dy - y * dx;
	    } else {
	      c.x = ax + db;
	      c.y = ay;
	    }
	  }
	
	  function intersects(a, b) {
	    var dx = b.x - a.x,
	        dy = b.y - a.y,
	        dr = a.r + b.r;
	    return dr * dr > dx * dx + dy * dy;
	  }
	
	  function distance2(circle, x, y) {
	    var dx = circle.x - x,
	        dy = circle.y - y;
	    return dx * dx + dy * dy;
	  }
	
	  function Node$1(circle) {
	    this._ = circle;
	    this.next = null;
	    this.previous = null;
	  }
	
	  function packEnclose(circles) {
	    if (!(n = circles.length)) return 0;
	
	    var a, b, c, n;
	
	    // Place the first circle.
	    a = circles[0], a.x = 0, a.y = 0;
	    if (!(n > 1)) return a.r;
	
	    // Place the second circle.
	    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
	    if (!(n > 2)) return a.r + b.r;
	
	    // Place the third circle.
	    place(b, a, c = circles[2]);
	
	    // Initialize the weighted centroid.
	    var aa = a.r * a.r,
	        ba = b.r * b.r,
	        ca = c.r * c.r,
	        oa = aa + ba + ca,
	        ox = aa * a.x + ba * b.x + ca * c.x,
	        oy = aa * a.y + ba * b.y + ca * c.y,
	        cx, cy, i, j, k, sj, sk;
	
	    // Initialize the front-chain using the first three circles a, b and c.
	    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);
	    a.next = c.previous = b;
	    b.next = a.previous = c;
	    c.next = b.previous = a;
	
	    // Attempt to place each remaining circle…
	    pack: for (i = 3; i < n; ++i) {
	      place(a._, b._, c = circles[i]), c = new Node$1(c);
	
	      // If there are only three elements in the front-chain…
	      if ((k = a.previous) === (j = b.next)) {
	        // If the new circle intersects the third circle,
	        // rotate the front chain to try the next position.
	        if (intersects(j._, c._)) {
	          a = b, b = j, --i;
	          continue pack;
	        }
	      }
	
	      // Find the closest intersecting circle on the front-chain, if any.
	      else {
	        sj = j._.r, sk = k._.r;
	        do {
	          if (sj <= sk) {
	            if (intersects(j._, c._)) {
	              b = j, a.next = b, b.previous = a, --i;
	              continue pack;
	            }
	            j = j.next, sj += j._.r;
	          } else {
	            if (intersects(k._, c._)) {
	              a = k, a.next = b, b.previous = a, --i;
	              continue pack;
	            }
	            k = k.previous, sk += k._.r;
	          }
	        } while (j !== k.next);
	      }
	
	      // Success! Insert the new circle c between a and b.
	      c.previous = a, c.next = b, a.next = b.previous = b = c;
	
	      // Update the weighted centroid.
	      oa += ca = c._.r * c._.r;
	      ox += ca * c._.x;
	      oy += ca * c._.y;
	
	      // Compute the new closest circle a to centroid.
	      aa = distance2(a._, cx = ox / oa, cy = oy / oa);
	      while ((c = c.next) !== b) {
	        if ((ca = distance2(c._, cx, cy)) < aa) {
	          a = c, aa = ca;
	        }
	      }
	      b = a.next;
	    }
	
	    // Compute the enclosing circle of the front chain.
	    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);
	
	    // Translate the circles to put the enclosing circle around the origin.
	    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;
	
	    return c.r;
	  }
	
	  function siblings(circles) {
	    packEnclose(circles);
	    return circles;
	  }
	
	  function optional(f) {
	    return f == null ? null : required(f);
	  }
	
	  function required(f) {
	    if (typeof f !== "function") throw new Error;
	    return f;
	  }
	
	  function constantZero() {
	    return 0;
	  }
	
	  function constant$5(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function defaultRadius(d) {
	    return Math.sqrt(d.value);
	  }
	
	  function index() {
	    var radius = null,
	        dx = 1,
	        dy = 1,
	        padding = constantZero;
	
	    function pack(root) {
	      root.x = dx / 2, root.y = dy / 2;
	      if (radius) {
	        root.eachBefore(radiusLeaf(radius))
	            .eachAfter(packChildren(padding, 0.5))
	            .eachBefore(translateChild(1));
	      } else {
	        root.eachBefore(radiusLeaf(defaultRadius))
	            .eachAfter(packChildren(constantZero, 1))
	            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
	            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
	      }
	      return root;
	    }
	
	    pack.radius = function(x) {
	      return arguments.length ? (radius = optional(x), pack) : radius;
	    };
	
	    pack.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
	    };
	
	    pack.padding = function(x) {
	      return arguments.length ? (padding = typeof x === "function" ? x : constant$5(+x), pack) : padding;
	    };
	
	    return pack;
	  }
	
	  function radiusLeaf(radius) {
	    return function(node) {
	      if (!node.children) {
	        node.r = Math.max(0, +radius(node) || 0);
	      }
	    };
	  }
	
	  function packChildren(padding, k) {
	    return function(node) {
	      if (children = node.children) {
	        var children,
	            i,
	            n = children.length,
	            r = padding(node) * k || 0,
	            e;
	
	        if (r) for (i = 0; i < n; ++i) children[i].r += r;
	        e = packEnclose(children);
	        if (r) for (i = 0; i < n; ++i) children[i].r -= r;
	        node.r = e + r;
	      }
	    };
	  }
	
	  function translateChild(k) {
	    return function(node) {
	      var parent = node.parent;
	      node.r *= k;
	      if (parent) {
	        node.x = parent.x + k * node.x;
	        node.y = parent.y + k * node.y;
	      }
	    };
	  }
	
	  function roundNode(node) {
	    node.x0 = Math.round(node.x0);
	    node.y0 = Math.round(node.y0);
	    node.x1 = Math.round(node.x1);
	    node.y1 = Math.round(node.y1);
	  }
	
	  function treemapDice(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        node,
	        i = -1,
	        n = nodes.length,
	        k = parent.value && (x1 - x0) / parent.value;
	
	    while (++i < n) {
	      node = nodes[i], node.y0 = y0, node.y1 = y1;
	      node.x0 = x0, node.x1 = x0 += node.value * k;
	    }
	  }
	
	  function partition() {
	    var dx = 1,
	        dy = 1,
	        padding = 0,
	        round = false;
	
	    function partition(root) {
	      var n = root.height + 1;
	      root.x0 =
	      root.y0 = padding;
	      root.x1 = dx;
	      root.y1 = dy / n;
	      root.eachBefore(positionNode(dy, n));
	      if (round) root.eachBefore(roundNode);
	      return root;
	    }
	
	    function positionNode(dy, n) {
	      return function(node) {
	        if (node.children) {
	          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
	        }
	        var x0 = node.x0,
	            y0 = node.y0,
	            x1 = node.x1 - padding,
	            y1 = node.y1 - padding;
	        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	        node.x0 = x0;
	        node.y0 = y0;
	        node.x1 = x1;
	        node.y1 = y1;
	      };
	    }
	
	    partition.round = function(x) {
	      return arguments.length ? (round = !!x, partition) : round;
	    };
	
	    partition.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
	    };
	
	    partition.padding = function(x) {
	      return arguments.length ? (padding = +x, partition) : padding;
	    };
	
	    return partition;
	  }
	
	var   keyPrefix$1 = "$";
	  var preroot = {depth: -1};
	  var ambiguous = {};
	  function defaultId(d) {
	    return d.id;
	  }
	
	  function defaultParentId(d) {
	    return d.parentId;
	  }
	
	  function stratify() {
	    var id = defaultId,
	        parentId = defaultParentId;
	
	    function stratify(data) {
	      var d,
	          i,
	          n = data.length,
	          root,
	          parent,
	          node,
	          nodes = new Array(n),
	          nodeId,
	          nodeKey,
	          nodeByKey = {};
	
	      for (i = 0; i < n; ++i) {
	        d = data[i], node = nodes[i] = new Node(d);
	        if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
	          nodeKey = keyPrefix$1 + (node.id = nodeId);
	          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
	        }
	      }
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i], nodeId = parentId(data[i], i, data);
	        if (nodeId == null || !(nodeId += "")) {
	          if (root) throw new Error("multiple roots");
	          root = node;
	        } else {
	          parent = nodeByKey[keyPrefix$1 + nodeId];
	          if (!parent) throw new Error("missing: " + nodeId);
	          if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
	          if (parent.children) parent.children.push(node);
	          else parent.children = [node];
	          node.parent = parent;
	        }
	      }
	
	      if (!root) throw new Error("no root");
	      root.parent = preroot;
	      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);
	      root.parent = null;
	      if (n > 0) throw new Error("cycle");
	
	      return root;
	    }
	
	    stratify.id = function(x) {
	      return arguments.length ? (id = required(x), stratify) : id;
	    };
	
	    stratify.parentId = function(x) {
	      return arguments.length ? (parentId = required(x), stratify) : parentId;
	    };
	
	    return stratify;
	  }
	
	  function defaultSeparation$1(a, b) {
	    return a.parent === b.parent ? 1 : 2;
	  }
	
	  // function radialSeparation(a, b) {
	  //   return (a.parent === b.parent ? 1 : 2) / a.depth;
	  // }
	
	  // This function is used to traverse the left contour of a subtree (or
	  // subforest). It returns the successor of v on this contour. This successor is
	  // either given by the leftmost child of v or by the thread of v. The function
	  // returns null if and only if v is on the highest level of its subtree.
	  function nextLeft(v) {
	    var children = v.children;
	    return children ? children[0] : v.t;
	  }
	
	  // This function works analogously to nextLeft.
	  function nextRight(v) {
	    var children = v.children;
	    return children ? children[children.length - 1] : v.t;
	  }
	
	  // Shifts the current subtree rooted at w+. This is done by increasing
	  // prelim(w+) and mod(w+) by shift.
	  function moveSubtree(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	
	  // All other shifts, applied to the smaller subtrees between w- and w+, are
	  // performed by this function. To prepare the shifts, we have to adjust
	  // change(w+), shift(w+), and change(w-).
	  function executeShifts(v) {
	    var shift = 0,
	        change = 0,
	        children = v.children,
	        i = children.length,
	        w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	
	  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
	  // returns the specified (default) ancestor.
	  function nextAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	
	  function TreeNode(node, i) {
	    this._ = node;
	    this.parent = null;
	    this.children = null;
	    this.A = null; // default ancestor
	    this.a = this; // ancestor
	    this.z = 0; // prelim
	    this.m = 0; // mod
	    this.c = 0; // change
	    this.s = 0; // shift
	    this.t = null; // thread
	    this.i = i; // number
	  }
	
	  TreeNode.prototype = Object.create(Node.prototype);
	
	  function treeRoot(root) {
	    var tree = new TreeNode(root, 0),
	        node,
	        nodes = [tree],
	        child,
	        children,
	        i,
	        n;
	
	    while (node = nodes.pop()) {
	      if (children = node._.children) {
	        node.children = new Array(n = children.length);
	        for (i = n - 1; i >= 0; --i) {
	          nodes.push(child = node.children[i] = new TreeNode(children[i], i));
	          child.parent = node;
	        }
	      }
	    }
	
	    (tree.parent = new TreeNode(null, 0)).children = [tree];
	    return tree;
	  }
	
	  // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
	  function tree() {
	    var separation = defaultSeparation$1,
	        dx = 1,
	        dy = 1,
	        nodeSize = null;
	
	    function tree(root) {
	      var t = treeRoot(root);
	
	      // Compute the layout using Buchheim et al.’s algorithm.
	      t.eachAfter(firstWalk), t.parent.m = -t.z;
	      t.eachBefore(secondWalk);
	
	      // If a fixed node size is specified, scale x and y.
	      if (nodeSize) root.eachBefore(sizeNode);
	
	      // If a fixed tree size is specified, scale x and y based on the extent.
	      // Compute the left-most, right-most, and depth-most nodes for extents.
	      else {
	        var left = root,
	            right = root,
	            bottom = root;
	        root.eachBefore(function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var s = left === right ? 1 : separation(left, right) / 2,
	            tx = s - left.x,
	            kx = dx / (right.x + s + tx),
	            ky = dy / (bottom.depth || 1);
	        root.eachBefore(function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	
	      return root;
	    }
	
	    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
	    // applied recursively to the children of v, as well as the function
	    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
	    // node v is placed to the midpoint of its outermost children.
	    function firstWalk(v) {
	      var children = v.children,
	          siblings = v.parent.children,
	          w = v.i ? siblings[v.i - 1] : null;
	      if (children) {
	        executeShifts(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	
	    // Computes all real x-coordinates by summing up the modifiers recursively.
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	
	    // The core of the algorithm. Here, a new subtree is combined with the
	    // previous subtrees. Threads are used to traverse the inside and outside
	    // contours of the left and right subtree up to the highest common level. The
	    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
	    // superscript o means outside and i means inside, the subscript - means left
	    // subtree and + means right subtree. For summing up the modifiers along the
	    // contour, we use respective variables si+, si-, so-, and so+. Whenever two
	    // nodes of the inside contours conflict, we compute the left one of the
	    // greatest uncommon ancestors using the function ANCESTOR and call MOVE
	    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
	    // Finally, we add a new thread (if necessary).
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v,
	            vop = v,
	            vim = w,
	            vom = vip.parent.children[0],
	            sip = vip.m,
	            sop = vop.m,
	            sim = vim.m,
	            som = vom.m,
	            shift;
	        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
	          vom = nextLeft(vom);
	          vop = nextRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !nextRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !nextLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	
	    function sizeNode(node) {
	      node.x *= dx;
	      node.y = node.depth * dy;
	    }
	
	    tree.separation = function(x) {
	      return arguments.length ? (separation = x, tree) : separation;
	    };
	
	    tree.size = function(x) {
	      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
	    };
	
	    tree.nodeSize = function(x) {
	      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
	    };
	
	    return tree;
	  }
	
	  function treemapSlice(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        node,
	        i = -1,
	        n = nodes.length,
	        k = parent.value && (y1 - y0) / parent.value;
	
	    while (++i < n) {
	      node = nodes[i], node.x0 = x0, node.x1 = x1;
	      node.y0 = y0, node.y1 = y0 += node.value * k;
	    }
	  }
	
	  var phi = (1 + Math.sqrt(5)) / 2;
	
	  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
	    var rows = [],
	        nodes = parent.children,
	        row,
	        nodeValue,
	        i0 = 0,
	        i1,
	        n = nodes.length,
	        dx, dy,
	        value = parent.value,
	        sumValue,
	        minValue,
	        maxValue,
	        newRatio,
	        minRatio,
	        alpha,
	        beta;
	
	    while (i0 < n) {
	      dx = x1 - x0, dy = y1 - y0;
	      minValue = maxValue = sumValue = nodes[i0].value;
	      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
	      beta = sumValue * sumValue * alpha;
	      minRatio = Math.max(maxValue / beta, beta / minValue);
	
	      // Keep adding nodes while the aspect ratio maintains or improves.
	      for (i1 = i0 + 1; i1 < n; ++i1) {
	        sumValue += nodeValue = nodes[i1].value;
	        if (nodeValue < minValue) minValue = nodeValue;
	        if (nodeValue > maxValue) maxValue = nodeValue;
	        beta = sumValue * sumValue * alpha;
	        newRatio = Math.max(maxValue / beta, beta / minValue);
	        if (newRatio > minRatio) { sumValue -= nodeValue; break; }
	        minRatio = newRatio;
	      }
	
	      // Position and record the row orientation.
	      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
	      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
	      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
	      value -= sumValue, i0 = i1;
	    }
	
	    return rows;
	  }
	
	  var squarify = (function custom(ratio) {
	
	    function squarify(parent, x0, y0, x1, y1) {
	      squarifyRatio(ratio, parent, x0, y0, x1, y1);
	    }
	
	    squarify.ratio = function(x) {
	      return custom((x = +x) > 1 ? x : 1);
	    };
	
	    return squarify;
	  })(phi);
	
	  function index$1() {
	    var tile = squarify,
	        round = false,
	        dx = 1,
	        dy = 1,
	        paddingStack = [0],
	        paddingInner = constantZero,
	        paddingTop = constantZero,
	        paddingRight = constantZero,
	        paddingBottom = constantZero,
	        paddingLeft = constantZero;
	
	    function treemap(root) {
	      root.x0 =
	      root.y0 = 0;
	      root.x1 = dx;
	      root.y1 = dy;
	      root.eachBefore(positionNode);
	      paddingStack = [0];
	      if (round) root.eachBefore(roundNode);
	      return root;
	    }
	
	    function positionNode(node) {
	      var p = paddingStack[node.depth],
	          x0 = node.x0 + p,
	          y0 = node.y0 + p,
	          x1 = node.x1 - p,
	          y1 = node.y1 - p;
	      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	      node.x0 = x0;
	      node.y0 = y0;
	      node.x1 = x1;
	      node.y1 = y1;
	      if (node.children) {
	        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
	        x0 += paddingLeft(node) - p;
	        y0 += paddingTop(node) - p;
	        x1 -= paddingRight(node) - p;
	        y1 -= paddingBottom(node) - p;
	        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
	        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
	        tile(node, x0, y0, x1, y1);
	      }
	    }
	
	    treemap.round = function(x) {
	      return arguments.length ? (round = !!x, treemap) : round;
	    };
	
	    treemap.size = function(x) {
	      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
	    };
	
	    treemap.tile = function(x) {
	      return arguments.length ? (tile = required(x), treemap) : tile;
	    };
	
	    treemap.padding = function(x) {
	      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
	    };
	
	    treemap.paddingInner = function(x) {
	      return arguments.length ? (paddingInner = typeof x === "function" ? x : constant$5(+x), treemap) : paddingInner;
	    };
	
	    treemap.paddingOuter = function(x) {
	      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
	    };
	
	    treemap.paddingTop = function(x) {
	      return arguments.length ? (paddingTop = typeof x === "function" ? x : constant$5(+x), treemap) : paddingTop;
	    };
	
	    treemap.paddingRight = function(x) {
	      return arguments.length ? (paddingRight = typeof x === "function" ? x : constant$5(+x), treemap) : paddingRight;
	    };
	
	    treemap.paddingBottom = function(x) {
	      return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant$5(+x), treemap) : paddingBottom;
	    };
	
	    treemap.paddingLeft = function(x) {
	      return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant$5(+x), treemap) : paddingLeft;
	    };
	
	    return treemap;
	  }
	
	  function binary(parent, x0, y0, x1, y1) {
	    var nodes = parent.children,
	        i, n = nodes.length,
	        sum, sums = new Array(n + 1);
	
	    for (sums[0] = sum = i = 0; i < n; ++i) {
	      sums[i + 1] = sum += nodes[i].value;
	    }
	
	    partition(0, n, parent.value, x0, y0, x1, y1);
	
	    function partition(i, j, value, x0, y0, x1, y1) {
	      if (i >= j - 1) {
	        var node = nodes[i];
	        node.x0 = x0, node.y0 = y0;
	        node.x1 = x1, node.y1 = y1;
	        return;
	      }
	
	      var valueOffset = sums[i],
	          valueTarget = (value / 2) + valueOffset,
	          k = i + 1,
	          hi = j - 1;
	
	      while (k < hi) {
	        var mid = k + hi >>> 1;
	        if (sums[mid] < valueTarget) k = mid + 1;
	        else hi = mid;
	      }
	
	      var valueLeft = sums[k] - valueOffset,
	          valueRight = value - valueLeft;
	
	      if ((y1 - y0) > (x1 - x0)) {
	        var yk = (y0 * valueRight + y1 * valueLeft) / value;
	        partition(i, k, valueLeft, x0, y0, x1, yk);
	        partition(k, j, valueRight, x0, yk, x1, y1);
	      } else {
	        var xk = (x0 * valueRight + x1 * valueLeft) / value;
	        partition(i, k, valueLeft, x0, y0, xk, y1);
	        partition(k, j, valueRight, xk, y0, x1, y1);
	      }
	    }
	  }
	
	  function sliceDice(parent, x0, y0, x1, y1) {
	    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);
	  }
	
	  var resquarify = (function custom(ratio) {
	
	    function resquarify(parent, x0, y0, x1, y1) {
	      if ((rows = parent._squarify) && (rows.ratio === ratio)) {
	        var rows,
	            row,
	            nodes,
	            i,
	            j = -1,
	            n,
	            m = rows.length,
	            value = parent.value;
	
	        while (++j < m) {
	          row = rows[j], nodes = row.children;
	          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
	          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);
	          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
	          value -= row.value;
	        }
	      } else {
	        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);
	        rows.ratio = ratio;
	      }
	    }
	
	    resquarify.ratio = function(x) {
	      return custom((x = +x) > 1 ? x : 1);
	    };
	
	    return resquarify;
	  })(phi);
	
	  function center$1(x, y) {
	    var nodes;
	
	    if (x == null) x = 0;
	    if (y == null) y = 0;
	
	    function force() {
	      var i,
	          n = nodes.length,
	          node,
	          sx = 0,
	          sy = 0;
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i], sx += node.x, sy += node.y;
	      }
	
	      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
	        node = nodes[i], node.x -= sx, node.y -= sy;
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	    };
	
	    force.x = function(_) {
	      return arguments.length ? (x = +_, force) : x;
	    };
	
	    force.y = function(_) {
	      return arguments.length ? (y = +_, force) : y;
	    };
	
	    return force;
	  }
	
	  function constant$6(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function jiggle() {
	    return (Math.random() - 0.5) * 1e-6;
	  }
	
	  function x$1(d) {
	    return d.x + d.vx;
	  }
	
	  function y$1(d) {
	    return d.y + d.vy;
	  }
	
	  function collide(radius) {
	    var nodes,
	        radii,
	        strength = 1,
	        iterations = 1;
	
	    if (typeof radius !== "function") radius = constant$6(radius == null ? 1 : +radius);
	
	    function force() {
	      var i, n = nodes.length,
	          tree,
	          node,
	          xi,
	          yi,
	          ri,
	          ri2;
	
	      for (var k = 0; k < iterations; ++k) {
	        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          ri = radii[i], ri2 = ri * ri;
	          xi = node.x + node.vx;
	          yi = node.y + node.vy;
	          tree.visit(apply);
	        }
	      }
	
	      function apply(quad, x0, y0, x1, y1) {
	        var data = quad.data, rj = quad.r, r = ri + rj;
	        if (data) {
	          if (data.index > i) {
	            var x = xi - data.x - data.vx,
	                y = yi - data.y - data.vy,
	                l = x * x + y * y;
	            if (l < r * r) {
	              if (x === 0) x = jiggle(), l += x * x;
	              if (y === 0) y = jiggle(), l += y * y;
	              l = (r - (l = Math.sqrt(l))) / l * strength;
	              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
	              node.vy += (y *= l) * r;
	              data.vx -= x * (r = 1 - r);
	              data.vy -= y * r;
	            }
	          }
	          return;
	        }
	        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
	      }
	    }
	
	    function prepare(quad) {
	      if (quad.data) return quad.r = radii[quad.data.index];
	      for (var i = quad.r = 0; i < 4; ++i) {
	        if (quad[i] && quad[i].r > quad.r) {
	          quad.r = quad[i].r;
	        }
	      }
	    }
	
	    force.initialize = function(_) {
	      var i, n = (nodes = _).length; radii = new Array(n);
	      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);
	    };
	
	    force.iterations = function(_) {
	      return arguments.length ? (iterations = +_, force) : iterations;
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = +_, force) : strength;
	    };
	
	    force.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$6(+_), force) : radius;
	    };
	
	    return force;
	  }
	
	  function index$2(d, i) {
	    return i;
	  }
	
	  function link(links) {
	    var id = index$2,
	        strength = defaultStrength,
	        strengths,
	        distance = constant$6(30),
	        distances,
	        nodes,
	        count,
	        bias,
	        iterations = 1;
	
	    if (links == null) links = [];
	
	    function defaultStrength(link) {
	      return 1 / Math.min(count[link.source.index], count[link.target.index]);
	    }
	
	    function force(alpha) {
	      for (var k = 0, n = links.length; k < iterations; ++k) {
	        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
	          link = links[i], source = link.source, target = link.target;
	          x = target.x + target.vx - source.x - source.vx || jiggle();
	          y = target.y + target.vy - source.y - source.vy || jiggle();
	          l = Math.sqrt(x * x + y * y);
	          l = (l - distances[i]) / l * alpha * strengths[i];
	          x *= l, y *= l;
	          target.vx -= x * (b = bias[i]);
	          target.vy -= y * b;
	          source.vx += x * (b = 1 - b);
	          source.vy += y * b;
	        }
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	
	      var i,
	          n = nodes.length,
	          m = links.length,
	          nodeById = map$1(nodes, id),
	          link;
	
	      for (i = 0, count = new Array(n); i < n; ++i) {
	        count[i] = 0;
	      }
	
	      for (i = 0; i < m; ++i) {
	        link = links[i], link.index = i;
	        if (typeof link.source !== "object") link.source = nodeById.get(link.source);
	        if (typeof link.target !== "object") link.target = nodeById.get(link.target);
	        ++count[link.source.index], ++count[link.target.index];
	      }
	
	      for (i = 0, bias = new Array(m); i < m; ++i) {
	        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
	      }
	
	      strengths = new Array(m), initializeStrength();
	      distances = new Array(m), initializeDistance();
	    }
	
	    function initializeStrength() {
	      if (!nodes) return;
	
	      for (var i = 0, n = links.length; i < n; ++i) {
	        strengths[i] = +strength(links[i], i, links);
	      }
	    }
	
	    function initializeDistance() {
	      if (!nodes) return;
	
	      for (var i = 0, n = links.length; i < n; ++i) {
	        distances[i] = +distance(links[i], i, links);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.links = function(_) {
	      return arguments.length ? (links = _, initialize(), force) : links;
	    };
	
	    force.id = function(_) {
	      return arguments.length ? (id = _, force) : id;
	    };
	
	    force.iterations = function(_) {
	      return arguments.length ? (iterations = +_, force) : iterations;
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initializeStrength(), force) : strength;
	    };
	
	    force.distance = function(_) {
	      return arguments.length ? (distance = typeof _ === "function" ? _ : constant$6(+_), initializeDistance(), force) : distance;
	    };
	
	    return force;
	  }
	
	  function x$2(d) {
	    return d.x;
	  }
	
	  function y$2(d) {
	    return d.y;
	  }
	
	  var initialRadius = 10;
	  var initialAngle = Math.PI * (3 - Math.sqrt(5));
	  function simulation(nodes) {
	    var simulation,
	        alpha = 1,
	        alphaMin = 0.001,
	        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
	        alphaTarget = 0,
	        velocityDecay = 0.6,
	        forces = map$1(),
	        stepper = timer(step),
	        event = dispatch("tick", "end");
	
	    if (nodes == null) nodes = [];
	
	    function step() {
	      tick();
	      event.call("tick", simulation);
	      if (alpha < alphaMin) {
	        stepper.stop();
	        event.call("end", simulation);
	      }
	    }
	
	    function tick() {
	      var i, n = nodes.length, node;
	
	      alpha += (alphaTarget - alpha) * alphaDecay;
	
	      forces.each(function(force) {
	        force(alpha);
	      });
	
	      for (i = 0; i < n; ++i) {
	        node = nodes[i];
	        if (node.fx == null) node.x += node.vx *= velocityDecay;
	        else node.x = node.fx, node.vx = 0;
	        if (node.fy == null) node.y += node.vy *= velocityDecay;
	        else node.y = node.fy, node.vy = 0;
	      }
	    }
	
	    function initializeNodes() {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.index = i;
	        if (isNaN(node.x) || isNaN(node.y)) {
	          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;
	          node.x = radius * Math.cos(angle);
	          node.y = radius * Math.sin(angle);
	        }
	        if (isNaN(node.vx) || isNaN(node.vy)) {
	          node.vx = node.vy = 0;
	        }
	      }
	    }
	
	    function initializeForce(force) {
	      if (force.initialize) force.initialize(nodes);
	      return force;
	    }
	
	    initializeNodes();
	
	    return simulation = {
	      tick: tick,
	
	      restart: function() {
	        return stepper.restart(step), simulation;
	      },
	
	      stop: function() {
	        return stepper.stop(), simulation;
	      },
	
	      nodes: function(_) {
	        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
	      },
	
	      alpha: function(_) {
	        return arguments.length ? (alpha = +_, simulation) : alpha;
	      },
	
	      alphaMin: function(_) {
	        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
	      },
	
	      alphaDecay: function(_) {
	        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
	      },
	
	      alphaTarget: function(_) {
	        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
	      },
	
	      velocityDecay: function(_) {
	        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
	      },
	
	      force: function(name, _) {
	        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
	      },
	
	      find: function(x, y, radius) {
	        var i = 0,
	            n = nodes.length,
	            dx,
	            dy,
	            d2,
	            node,
	            closest;
	
	        if (radius == null) radius = Infinity;
	        else radius *= radius;
	
	        for (i = 0; i < n; ++i) {
	          node = nodes[i];
	          dx = x - node.x;
	          dy = y - node.y;
	          d2 = dx * dx + dy * dy;
	          if (d2 < radius) closest = node, radius = d2;
	        }
	
	        return closest;
	      },
	
	      on: function(name, _) {
	        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
	      }
	    };
	  }
	
	  function manyBody() {
	    var nodes,
	        node,
	        alpha,
	        strength = constant$6(-30),
	        strengths,
	        distanceMin2 = 1,
	        distanceMax2 = Infinity,
	        theta2 = 0.81;
	
	    function force(_) {
	      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);
	      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);
	    }
	
	    function accumulate(quad) {
	      var strength = 0, q, c, x, y, i;
	
	      // For internal nodes, accumulate forces from child quadrants.
	      if (quad.length) {
	        for (x = y = i = 0; i < 4; ++i) {
	          if ((q = quad[i]) && (c = q.value)) {
	            strength += c, x += c * q.x, y += c * q.y;
	          }
	        }
	        quad.x = x / strength;
	        quad.y = y / strength;
	      }
	
	      // For leaf nodes, accumulate forces from coincident quadrants.
	      else {
	        q = quad;
	        q.x = q.data.x;
	        q.y = q.data.y;
	        do strength += strengths[q.data.index];
	        while (q = q.next);
	      }
	
	      quad.value = strength;
	    }
	
	    function apply(quad, x1, _, x2) {
	      if (!quad.value) return true;
	
	      var x = quad.x - node.x,
	          y = quad.y - node.y,
	          w = x2 - x1,
	          l = x * x + y * y;
	
	      // Apply the Barnes-Hut approximation if possible.
	      // Limit forces for very close nodes; randomize direction if coincident.
	      if (w * w / theta2 < l) {
	        if (l < distanceMax2) {
	          if (x === 0) x = jiggle(), l += x * x;
	          if (y === 0) y = jiggle(), l += y * y;
	          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
	          node.vx += x * quad.value * alpha / l;
	          node.vy += y * quad.value * alpha / l;
	        }
	        return true;
	      }
	
	      // Otherwise, process points directly.
	      else if (quad.length || l >= distanceMax2) return;
	
	      // Limit forces for very close nodes; randomize direction if coincident.
	      if (quad.data !== node || quad.next) {
	        if (x === 0) x = jiggle(), l += x * x;
	        if (y === 0) y = jiggle(), l += y * y;
	        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
	      }
	
	      do if (quad.data !== node) {
	        w = strengths[quad.data.index] * alpha / l;
	        node.vx += x * w;
	        node.vy += y * w;
	      } while (quad = quad.next);
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.distanceMin = function(_) {
	      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
	    };
	
	    force.distanceMax = function(_) {
	      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
	    };
	
	    force.theta = function(_) {
	      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
	    };
	
	    return force;
	  }
	
	  function x$3(x) {
	    var strength = constant$6(0.1),
	        nodes,
	        strengths,
	        xz;
	
	    if (typeof x !== "function") x = constant$6(x == null ? 0 : +x);
	
	    function force(alpha) {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      xz = new Array(n);
	      for (i = 0; i < n; ++i) {
	        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.x = function(_) {
	      return arguments.length ? (x = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : x;
	    };
	
	    return force;
	  }
	
	  function y$3(y) {
	    var strength = constant$6(0.1),
	        nodes,
	        strengths,
	        yz;
	
	    if (typeof y !== "function") y = constant$6(y == null ? 0 : +y);
	
	    function force(alpha) {
	      for (var i = 0, n = nodes.length, node; i < n; ++i) {
	        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
	      }
	    }
	
	    function initialize() {
	      if (!nodes) return;
	      var i, n = nodes.length;
	      strengths = new Array(n);
	      yz = new Array(n);
	      for (i = 0; i < n; ++i) {
	        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
	      }
	    }
	
	    force.initialize = function(_) {
	      nodes = _;
	      initialize();
	    };
	
	    force.strength = function(_) {
	      return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;
	    };
	
	    force.y = function(_) {
	      return arguments.length ? (y = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : y;
	    };
	
	    return force;
	  }
	
	  function nopropagation() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  function dragDisable(view) {
	    var root = view.document.documentElement,
	        selection = select(view).on("dragstart.drag", noevent, true);
	    if ("onselectstart" in root) {
	      selection.on("selectstart.drag", noevent, true);
	    } else {
	      root.__noselect = root.style.MozUserSelect;
	      root.style.MozUserSelect = "none";
	    }
	  }
	
	  function dragEnable(view, noclick) {
	    var root = view.document.documentElement,
	        selection = select(view).on("dragstart.drag", null);
	    if (noclick) {
	      selection.on("click.drag", noevent, true);
	      setTimeout(function() { selection.on("click.drag", null); }, 0);
	    }
	    if ("onselectstart" in root) {
	      selection.on("selectstart.drag", null);
	    } else {
	      root.style.MozUserSelect = root.__noselect;
	      delete root.__noselect;
	    }
	  }
	
	  function constant$7(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
	    this.target = target;
	    this.type = type;
	    this.subject = subject;
	    this.identifier = id;
	    this.active = active;
	    this.x = x;
	    this.y = y;
	    this.dx = dx;
	    this.dy = dy;
	    this._ = dispatch;
	  }
	
	  DragEvent.prototype.on = function() {
	    var value = this._.on.apply(this._, arguments);
	    return value === this._ ? this : value;
	  };
	
	  // Ignore right-click, since that should open the context menu.
	  function defaultFilter() {
	    return !exports.event.button;
	  }
	
	  function defaultContainer() {
	    return this.parentNode;
	  }
	
	  function defaultSubject(d) {
	    return d == null ? {x: exports.event.x, y: exports.event.y} : d;
	  }
	
	  function drag() {
	    var filter = defaultFilter,
	        container = defaultContainer,
	        subject = defaultSubject,
	        gestures = {},
	        listeners = dispatch("start", "drag", "end"),
	        active = 0,
	        mousemoving,
	        touchending;
	
	    function drag(selection) {
	      selection
	          .on("mousedown.drag", mousedowned)
	          .on("touchstart.drag", touchstarted)
	          .on("touchmove.drag", touchmoved)
	          .on("touchend.drag touchcancel.drag", touchended)
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
	    }
	
	    function mousedowned() {
	      if (touchending || !filter.apply(this, arguments)) return;
	      var gesture = beforestart("mouse", container.apply(this, arguments), mouse, this, arguments);
	      if (!gesture) return;
	      select(exports.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
	      dragDisable(exports.event.view);
	      nopropagation();
	      mousemoving = false;
	      gesture("start");
	    }
	
	    function mousemoved() {
	      noevent();
	      mousemoving = true;
	      gestures.mouse("drag");
	    }
	
	    function mouseupped() {
	      select(exports.event.view).on("mousemove.drag mouseup.drag", null);
	      dragEnable(exports.event.view, mousemoving);
	      noevent();
	      gestures.mouse("end");
	    }
	
	    function touchstarted() {
	      if (!filter.apply(this, arguments)) return;
	      var touches = exports.event.changedTouches,
	          c = container.apply(this, arguments),
	          n = touches.length, i, gesture;
	
	      for (i = 0; i < n; ++i) {
	        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {
	          nopropagation();
	          gesture("start");
	        }
	      }
	    }
	
	    function touchmoved() {
	      var touches = exports.event.changedTouches,
	          n = touches.length, i, gesture;
	
	      for (i = 0; i < n; ++i) {
	        if (gesture = gestures[touches[i].identifier]) {
	          noevent();
	          gesture("drag");
	        }
	      }
	    }
	
	    function touchended() {
	      var touches = exports.event.changedTouches,
	          n = touches.length, i, gesture;
	
	      if (touchending) clearTimeout(touchending);
	      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
	      for (i = 0; i < n; ++i) {
	        if (gesture = gestures[touches[i].identifier]) {
	          nopropagation();
	          gesture("end");
	        }
	      }
	    }
	
	    function beforestart(id, container, point, that, args) {
	      var p = point(container, id), s, dx, dy,
	          sublisteners = listeners.copy();
	
	      if (!customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {
	        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;
	        dx = s.x - p[0] || 0;
	        dy = s.y - p[1] || 0;
	        return true;
	      })) return;
	
	      return function gesture(type) {
	        var p0 = p, n;
	        switch (type) {
	          case "start": gestures[id] = gesture, n = active++; break;
	          case "end": delete gestures[id], --active; // nobreak
	          case "drag": p = point(container, id), n = active; break;
	        }
	        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
	      };
	    }
	
	    drag.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$7(!!_), drag) : filter;
	    };
	
	    drag.container = function(_) {
	      return arguments.length ? (container = typeof _ === "function" ? _ : constant$7(_), drag) : container;
	    };
	
	    drag.subject = function(_) {
	      return arguments.length ? (subject = typeof _ === "function" ? _ : constant$7(_), drag) : subject;
	    };
	
	    drag.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? drag : value;
	    };
	
	    return drag;
	  }
	
	  function constant$8(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function x$4(d) {
	    return d[0];
	  }
	
	  function y$4(d) {
	    return d[1];
	  }
	
	  function RedBlackTree() {
	    this._ = null; // root node
	  }
	
	  function RedBlackNode(node) {
	    node.U = // parent node
	    node.C = // color - true for red, false for black
	    node.L = // left node
	    node.R = // right node
	    node.P = // previous node
	    node.N = null; // next node
	  }
	
	  RedBlackTree.prototype = {
	    constructor: RedBlackTree,
	
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = RedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              RedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            RedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              RedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            RedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	
	      var parent = node.U,
	          sibling,
	          left = node.L,
	          right = node.R,
	          next,
	          red;
	
	      if (!left) next = right;
	      else if (!right) next = left;
	      else next = RedBlackFirst(right);
	
	      if (parent) {
	        if (parent.L === node) parent.L = next;
	        else parent.R = next;
	      } else {
	        this._ = next;
	      }
	
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) { node.C = false; return; }
	
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            RedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if ((sibling.L && sibling.L.C)
	              || (sibling.R && sibling.R.C)) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              RedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            RedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            RedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if ((sibling.L && sibling.L.C)
	            || (sibling.R && sibling.R.C)) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              RedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            RedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	
	      if (node) node.C = false;
	    }
	  };
	
	  function RedBlackRotateLeft(tree, node) {
	    var p = node,
	        q = node.R,
	        parent = p.U;
	
	    if (parent) {
	      if (parent.L === p) parent.L = q;
	      else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	
	  function RedBlackRotateRight(tree, node) {
	    var p = node,
	        q = node.L,
	        parent = p.U;
	
	    if (parent) {
	      if (parent.L === p) parent.L = q;
	      else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	
	  function RedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	
	  function createEdge(left, right, v0, v1) {
	    var edge = [null, null],
	        index = edges.push(edge) - 1;
	    edge.left = left;
	    edge.right = right;
	    if (v0) setEdgeEnd(edge, left, right, v0);
	    if (v1) setEdgeEnd(edge, right, left, v1);
	    cells[left.index].halfedges.push(index);
	    cells[right.index].halfedges.push(index);
	    return edge;
	  }
	
	  function createBorderEdge(left, v0, v1) {
	    var edge = [v0, v1];
	    edge.left = left;
	    return edge;
	  }
	
	  function setEdgeEnd(edge, left, right, vertex) {
	    if (!edge[0] && !edge[1]) {
	      edge[0] = vertex;
	      edge.left = left;
	      edge.right = right;
	    } else if (edge.left === right) {
	      edge[1] = vertex;
	    } else {
	      edge[0] = vertex;
	    }
	  }
	
	  // Liang–Barsky line clipping.
	  function clipEdge(edge, x0, y0, x1, y1) {
	    var a = edge[0],
	        b = edge[1],
	        ax = a[0],
	        ay = a[1],
	        bx = b[0],
	        by = b[1],
	        t0 = 0,
	        t1 = 1,
	        dx = bx - ax,
	        dy = by - ay,
	        r;
	
	    r = x0 - ax;
	    if (!dx && r > 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dx > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = x1 - ax;
	    if (!dx && r < 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dx > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    r = y0 - ay;
	    if (!dy && r > 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dy > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = y1 - ay;
	    if (!dy && r < 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dy > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?
	
	    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
	    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
	    return true;
	  }
	
	  function connectEdge(edge, x0, y0, x1, y1) {
	    var v1 = edge[1];
	    if (v1) return true;
	
	    var v0 = edge[0],
	        left = edge.left,
	        right = edge.right,
	        lx = left[0],
	        ly = left[1],
	        rx = right[0],
	        ry = right[1],
	        fx = (lx + rx) / 2,
	        fy = (ly + ry) / 2,
	        fm,
	        fb;
	
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!v0) v0 = [fx, y0];
	        else if (v0[1] >= y1) return;
	        v1 = [fx, y1];
	      } else {
	        if (!v0) v0 = [fx, y1];
	        else if (v0[1] < y0) return;
	        v1 = [fx, y0];
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!v0) v0 = [(y0 - fb) / fm, y0];
	          else if (v0[1] >= y1) return;
	          v1 = [(y1 - fb) / fm, y1];
	        } else {
	          if (!v0) v0 = [(y1 - fb) / fm, y1];
	          else if (v0[1] < y0) return;
	          v1 = [(y0 - fb) / fm, y0];
	        }
	      } else {
	        if (ly < ry) {
	          if (!v0) v0 = [x0, fm * x0 + fb];
	          else if (v0[0] >= x1) return;
	          v1 = [x1, fm * x1 + fb];
	        } else {
	          if (!v0) v0 = [x1, fm * x1 + fb];
	          else if (v0[0] < x0) return;
	          v1 = [x0, fm * x0 + fb];
	        }
	      }
	    }
	
	    edge[0] = v0;
	    edge[1] = v1;
	    return true;
	  }
	
	  function clipEdges(x0, y0, x1, y1) {
	    var i = edges.length,
	        edge;
	
	    while (i--) {
	      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)
	          || !clipEdge(edge, x0, y0, x1, y1)
	          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3
	              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {
	        delete edges[i];
	      }
	    }
	  }
	
	  function createCell(site) {
	    return cells[site.index] = {
	      site: site,
	      halfedges: []
	    };
	  }
	
	  function cellHalfedgeAngle(cell, edge) {
	    var site = cell.site,
	        va = edge.left,
	        vb = edge.right;
	    if (site === vb) vb = va, va = site;
	    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
	    if (site === va) va = edge[1], vb = edge[0];
	    else va = edge[0], vb = edge[1];
	    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
	  }
	
	  function cellHalfedgeStart(cell, edge) {
	    return edge[+(edge.left !== cell.site)];
	  }
	
	  function cellHalfedgeEnd(cell, edge) {
	    return edge[+(edge.left === cell.site)];
	  }
	
	  function sortCellHalfedges() {
	    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {
	      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {
	        var index = new Array(m),
	            array = new Array(m);
	        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);
	        index.sort(function(i, j) { return array[j] - array[i]; });
	        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];
	        for (j = 0; j < m; ++j) halfedges[j] = array[j];
	      }
	    }
	  }
	
	  function clipCells(x0, y0, x1, y1) {
	    var nCells = cells.length,
	        iCell,
	        cell,
	        site,
	        iHalfedge,
	        halfedges,
	        nHalfedges,
	        start,
	        startX,
	        startY,
	        end,
	        endX,
	        endY,
	        cover = true;
	
	    for (iCell = 0; iCell < nCells; ++iCell) {
	      if (cell = cells[iCell]) {
	        site = cell.site;
	        halfedges = cell.halfedges;
	        iHalfedge = halfedges.length;
	
	        // Remove any dangling clipped edges.
	        while (iHalfedge--) {
	          if (!edges[halfedges[iHalfedge]]) {
	            halfedges.splice(iHalfedge, 1);
	          }
	        }
	
	        // Insert any border edges as necessary.
	        iHalfedge = 0, nHalfedges = halfedges.length;
	        while (iHalfedge < nHalfedges) {
	          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
	          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];
	          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {
	            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,
	                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]
	                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]
	                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]
	                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]
	                : null)) - 1);
	            ++nHalfedges;
	          }
	        }
	
	        if (nHalfedges) cover = false;
	      }
	    }
	
	    // If there weren’t any edges, have the closest site cover the extent.
	    // It doesn’t matter which corner of the extent we measure!
	    if (cover) {
	      var dx, dy, d2, dc = Infinity;
	
	      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
	        if (cell = cells[iCell]) {
	          site = cell.site;
	          dx = site[0] - x0;
	          dy = site[1] - y0;
	          d2 = dx * dx + dy * dy;
	          if (d2 < dc) dc = d2, cover = cell;
	        }
	      }
	
	      if (cover) {
	        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];
	        cover.halfedges.push(
	          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,
	          edges.push(createBorderEdge(site, v01, v11)) - 1,
	          edges.push(createBorderEdge(site, v11, v10)) - 1,
	          edges.push(createBorderEdge(site, v10, v00)) - 1
	        );
	      }
	    }
	
	    // Lastly delete any cells with no edges; these were entirely clipped.
	    for (iCell = 0; iCell < nCells; ++iCell) {
	      if (cell = cells[iCell]) {
	        if (!cell.halfedges.length) {
	          delete cells[iCell];
	        }
	      }
	    }
	  }
	
	  var circlePool = [];
	
	  var firstCircle;
	
	  function Circle() {
	    RedBlackNode(this);
	    this.x =
	    this.y =
	    this.arc =
	    this.site =
	    this.cy = null;
	  }
	
	  function attachCircle(arc) {
	    var lArc = arc.P,
	        rArc = arc.N;
	
	    if (!lArc || !rArc) return;
	
	    var lSite = lArc.site,
	        cSite = arc.site,
	        rSite = rArc.site;
	
	    if (lSite === rSite) return;
	
	    var bx = cSite[0],
	        by = cSite[1],
	        ax = lSite[0] - bx,
	        ay = lSite[1] - by,
	        cx = rSite[0] - bx,
	        cy = rSite[1] - by;
	
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -epsilon2$1) return;
	
	    var ha = ax * ax + ay * ay,
	        hc = cx * cx + cy * cy,
	        x = (cy * ha - ay * hc) / d,
	        y = (ax * hc - cx * ha) / d;
	
	    var circle = circlePool.pop() || new Circle;
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom
	
	    arc.circle = circle;
	
	    var before = null,
	        node = circles._;
	
	    while (node) {
	      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {
	        if (node.L) node = node.L;
	        else { before = node.P; break; }
	      } else {
	        if (node.R) node = node.R;
	        else { before = node; break; }
	      }
	    }
	
	    circles.insert(before, circle);
	    if (!before) firstCircle = circle;
	  }
	
	  function detachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) firstCircle = circle.N;
	      circles.remove(circle);
	      circlePool.push(circle);
	      RedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	
	  var beachPool = [];
	
	  function Beach() {
	    RedBlackNode(this);
	    this.edge =
	    this.site =
	    this.circle = null;
	  }
	
	  function createBeach(site) {
	    var beach = beachPool.pop() || new Beach;
	    beach.site = site;
	    return beach;
	  }
	
	  function detachBeach(beach) {
	    detachCircle(beach);
	    beaches.remove(beach);
	    beachPool.push(beach);
	    RedBlackNode(beach);
	  }
	
	  function removeBeach(beach) {
	    var circle = beach.circle,
	        x = circle.x,
	        y = circle.cy,
	        vertex = [x, y],
	        previous = beach.P,
	        next = beach.N,
	        disappearing = [beach];
	
	    detachBeach(beach);
	
	    var lArc = previous;
	    while (lArc.circle
	        && Math.abs(x - lArc.circle.x) < epsilon$3
	        && Math.abs(y - lArc.circle.cy) < epsilon$3) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      detachBeach(lArc);
	      lArc = previous;
	    }
	
	    disappearing.unshift(lArc);
	    detachCircle(lArc);
	
	    var rArc = next;
	    while (rArc.circle
	        && Math.abs(x - rArc.circle.x) < epsilon$3
	        && Math.abs(y - rArc.circle.cy) < epsilon$3) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      detachBeach(rArc);
	      rArc = next;
	    }
	
	    disappearing.push(rArc);
	    detachCircle(rArc);
	
	    var nArcs = disappearing.length,
	        iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);
	
	    attachCircle(lArc);
	    attachCircle(rArc);
	  }
	
	  function addBeach(site) {
	    var x = site[0],
	        directrix = site[1],
	        lArc,
	        rArc,
	        dxl,
	        dxr,
	        node = beaches._;
	
	    while (node) {
	      dxl = leftBreakPoint(node, directrix) - x;
	      if (dxl > epsilon$3) node = node.L; else {
	        dxr = x - rightBreakPoint(node, directrix);
	        if (dxr > epsilon$3) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -epsilon$3) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -epsilon$3) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	
	    createCell(site);
	    var newArc = createBeach(site);
	    beaches.insert(lArc, newArc);
	
	    if (!lArc && !rArc) return;
	
	    if (lArc === rArc) {
	      detachCircle(lArc);
	      rArc = createBeach(lArc.site);
	      beaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);
	      attachCircle(lArc);
	      attachCircle(rArc);
	      return;
	    }
	
	    if (!rArc) { // && lArc
	      newArc.edge = createEdge(lArc.site, newArc.site);
	      return;
	    }
	
	    // else lArc !== rArc
	    detachCircle(lArc);
	    detachCircle(rArc);
	
	    var lSite = lArc.site,
	        ax = lSite[0],
	        ay = lSite[1],
	        bx = site[0] - ax,
	        by = site[1] - ay,
	        rSite = rArc.site,
	        cx = rSite[0] - ax,
	        cy = rSite[1] - ay,
	        d = 2 * (bx * cy - by * cx),
	        hb = bx * bx + by * by,
	        hc = cx * cx + cy * cy,
	        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
	
	    setEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = createEdge(lSite, site, null, vertex);
	    rArc.edge = createEdge(site, rSite, null, vertex);
	    attachCircle(lArc);
	    attachCircle(rArc);
	  }
	
	  function leftBreakPoint(arc, directrix) {
	    var site = arc.site,
	        rfocx = site[0],
	        rfocy = site[1],
	        pby2 = rfocy - directrix;
	
	    if (!pby2) return rfocx;
	
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	
	    site = lArc.site;
	    var lfocx = site[0],
	        lfocy = site[1],
	        plby2 = lfocy - directrix;
	
	    if (!plby2) return lfocx;
	
	    var hl = lfocx - rfocx,
	        aby2 = 1 / pby2 - 1 / plby2,
	        b = hl / plby2;
	
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	
	    return (rfocx + lfocx) / 2;
	  }
	
	  function rightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return leftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site[1] === directrix ? site[0] : Infinity;
	  }
	
	  var epsilon$3 = 1e-6;
	  var epsilon2$1 = 1e-12;
	  var beaches;
	  var cells;
	  var circles;
	  var edges;
	
	  function triangleArea(a, b, c) {
	    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
	  }
	
	  function lexicographic(a, b) {
	    return b[1] - a[1]
	        || b[0] - a[0];
	  }
	
	  function Diagram(sites, extent) {
	    var site = sites.sort(lexicographic).pop(),
	        x,
	        y,
	        circle;
	
	    edges = [];
	    cells = new Array(sites.length);
	    beaches = new RedBlackTree;
	    circles = new RedBlackTree;
	
	    while (true) {
	      circle = firstCircle;
	      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {
	        if (site[0] !== x || site[1] !== y) {
	          addBeach(site);
	          x = site[0], y = site[1];
	        }
	        site = sites.pop();
	      } else if (circle) {
	        removeBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	
	    sortCellHalfedges();
	
	    if (extent) {
	      var x0 = +extent[0][0],
	          y0 = +extent[0][1],
	          x1 = +extent[1][0],
	          y1 = +extent[1][1];
	      clipEdges(x0, y0, x1, y1);
	      clipCells(x0, y0, x1, y1);
	    }
	
	    this.edges = edges;
	    this.cells = cells;
	
	    beaches =
	    circles =
	    edges =
	    cells = null;
	  }
	
	  Diagram.prototype = {
	    constructor: Diagram,
	
	    polygons: function() {
	      var edges = this.edges;
	
	      return this.cells.map(function(cell) {
	        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });
	        polygon.data = cell.site.data;
	        return polygon;
	      });
	    },
	
	    triangles: function() {
	      var triangles = [],
	          edges = this.edges;
	
	      this.cells.forEach(function(cell, i) {
	        var site = cell.site,
	            halfedges = cell.halfedges,
	            j = -1,
	            m = halfedges.length,
	            s0,
	            e1 = edges[halfedges[m - 1]],
	            s1 = e1.left === site ? e1.right : e1.left;
	
	        while (++j < m) {
	          s0 = s1;
	          e1 = edges[halfedges[j]];
	          s1 = e1.left === site ? e1.right : e1.left;
	          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
	            triangles.push([site.data, s0.data, s1.data]);
	          }
	        }
	      });
	
	      return triangles;
	    },
	
	    links: function() {
	      return this.edges.filter(function(edge) {
	        return edge.right;
	      }).map(function(edge) {
	        return {
	          source: edge.left.data,
	          target: edge.right.data
	        };
	      });
	    }
	  }
	
	  function voronoi() {
	    var x = x$4,
	        y = y$4,
	        extent = null;
	
	    function voronoi(data) {
	      return new Diagram(data.map(function(d, i) {
	        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];
	        s.index = i;
	        s.data = d;
	        return s;
	      }), extent);
	    }
	
	    voronoi.polygons = function(data) {
	      return voronoi(data).polygons();
	    };
	
	    voronoi.links = function(data) {
	      return voronoi(data).links();
	    };
	
	    voronoi.triangles = function(data) {
	      return voronoi(data).triangles();
	    };
	
	    voronoi.x = function(_) {
	      return arguments.length ? (x = typeof _ === "function" ? _ : constant$8(+_), voronoi) : x;
	    };
	
	    voronoi.y = function(_) {
	      return arguments.length ? (y = typeof _ === "function" ? _ : constant$8(+_), voronoi) : y;
	    };
	
	    voronoi.extent = function(_) {
	      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
	    };
	
	    voronoi.size = function(_) {
	      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
	    };
	
	    return voronoi;
	  }
	
	  function constant$9(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function ZoomEvent(target, type, transform) {
	    this.target = target;
	    this.type = type;
	    this.transform = transform;
	  }
	
	  function Transform(k, x, y) {
	    this.k = k;
	    this.x = x;
	    this.y = y;
	  }
	
	  Transform.prototype = {
	    constructor: Transform,
	    scale: function(k) {
	      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
	    },
	    translate: function(x, y) {
	      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
	    },
	    apply: function(point) {
	      return [point[0] * this.k + this.x, point[1] * this.k + this.y];
	    },
	    applyX: function(x) {
	      return x * this.k + this.x;
	    },
	    applyY: function(y) {
	      return y * this.k + this.y;
	    },
	    invert: function(location) {
	      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
	    },
	    invertX: function(x) {
	      return (x - this.x) / this.k;
	    },
	    invertY: function(y) {
	      return (y - this.y) / this.k;
	    },
	    rescaleX: function(x) {
	      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
	    },
	    rescaleY: function(y) {
	      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
	    },
	    toString: function() {
	      return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
	    }
	  };
	
	  var identity$6 = new Transform(1, 0, 0);
	
	  transform.prototype = Transform.prototype;
	
	  function transform(node) {
	    return node.__zoom || identity$6;
	  }
	
	  function nopropagation$1() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent$1() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  // Ignore right-click, since that should open the context menu.
	  function defaultFilter$1() {
	    return !exports.event.button;
	  }
	
	  function defaultExtent() {
	    var e = this, w, h;
	    if (e instanceof SVGElement) {
	      e = e.ownerSVGElement || e;
	      w = e.width.baseVal.value;
	      h = e.height.baseVal.value;
	    } else {
	      w = e.clientWidth;
	      h = e.clientHeight;
	    }
	    return [[0, 0], [w, h]];
	  }
	
	  function defaultTransform() {
	    return this.__zoom || identity$6;
	  }
	
	  function zoom() {
	    var filter = defaultFilter$1,
	        extent = defaultExtent,
	        k0 = 0,
	        k1 = Infinity,
	        x0 = -k1,
	        x1 = k1,
	        y0 = x0,
	        y1 = x1,
	        duration = 250,
	        gestures = [],
	        listeners = dispatch("start", "zoom", "end"),
	        touchstarting,
	        touchending,
	        touchDelay = 500,
	        wheelDelay = 150;
	
	    function zoom(selection) {
	      selection
	          .on("wheel.zoom", wheeled)
	          .on("mousedown.zoom", mousedowned)
	          .on("dblclick.zoom", dblclicked)
	          .on("touchstart.zoom", touchstarted)
	          .on("touchmove.zoom", touchmoved)
	          .on("touchend.zoom touchcancel.zoom", touchended)
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")
	          .property("__zoom", defaultTransform);
	    }
	
	    zoom.transform = function(collection, transform) {
	      var selection = collection.selection ? collection.selection() : collection;
	      selection.property("__zoom", defaultTransform);
	      if (collection !== selection) {
	        schedule(collection, transform);
	      } else {
	        selection.interrupt().each(function() {
	          gesture(this, arguments)
	              .start()
	              .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
	              .end();
	        });
	      }
	    };
	
	    zoom.scaleBy = function(selection, k) {
	      zoom.scaleTo(selection, function() {
	        var k0 = this.__zoom.k,
	            k1 = typeof k === "function" ? k.apply(this, arguments) : k;
	        return k0 * k1;
	      });
	    };
	
	    zoom.scaleTo = function(selection, k) {
	      zoom.transform(selection, function() {
	        var e = extent.apply(this, arguments),
	            t0 = this.__zoom,
	            p0 = centroid(e),
	            p1 = t0.invert(p0),
	            k1 = typeof k === "function" ? k.apply(this, arguments) : k;
	        return constrain(translate(scale(t0, k1), p0, p1), e);
	      });
	    };
	
	    zoom.translateBy = function(selection, x, y) {
	      zoom.transform(selection, function() {
	        return constrain(this.__zoom.translate(
	          typeof x === "function" ? x.apply(this, arguments) : x,
	          typeof y === "function" ? y.apply(this, arguments) : y
	        ), extent.apply(this, arguments));
	      });
	    };
	
	    function scale(transform, k) {
	      k = Math.max(k0, Math.min(k1, k));
	      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
	    }
	
	    function translate(transform, p0, p1) {
	      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
	      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
	    }
	
	    function constrain(transform, extent) {
	      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),
	          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);
	      return dx || dy ? transform.translate(dx, dy) : transform;
	    }
	
	    function centroid(extent) {
	      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
	    }
	
	    function schedule(transition, transform, center) {
	      transition
	          .on("start.zoom", function() { gesture(this, arguments).start(); })
	          .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).end(); })
	          .tween("zoom", function() {
	            var that = this,
	                args = arguments,
	                g = gesture(that, args),
	                e = extent.apply(that, args),
	                p = center || centroid(e),
	                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
	                a = that.__zoom,
	                b = typeof transform === "function" ? transform.apply(that, args) : transform,
	                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
	            return function(t) {
	              if (t === 1) t = b; // Avoid rounding error on end.
	              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
	              g.zoom(null, t);
	            };
	          });
	    }
	
	    function gesture(that, args) {
	      for (var i = 0, n = gestures.length, g; i < n; ++i) {
	        if ((g = gestures[i]).that === that) {
	          return g;
	        }
	      }
	      return new Gesture(that, args);
	    }
	
	    function Gesture(that, args) {
	      this.that = that;
	      this.args = args;
	      this.index = -1;
	      this.active = 0;
	      this.extent = extent.apply(that, args);
	    }
	
	    Gesture.prototype = {
	      start: function() {
	        if (++this.active === 1) {
	          this.index = gestures.push(this) - 1;
	          this.emit("start");
	        }
	        return this;
	      },
	      zoom: function(key, transform) {
	        if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
	        if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
	        if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
	        this.that.__zoom = transform;
	        this.emit("zoom");
	        return this;
	      },
	      end: function() {
	        if (--this.active === 0) {
	          gestures.splice(this.index, 1);
	          this.index = -1;
	          this.emit("end");
	        }
	        return this;
	      },
	      emit: function(type) {
	        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
	      }
	    };
	
	    function wheeled() {
	      if (!filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          t = this.__zoom,
	          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),
	          p = mouse(this);
	
	      // If the mouse is in the same location as before, reuse it.
	      // If there were recent wheel events, reset the wheel idle timeout.
	      if (g.wheel) {
	        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
	          g.mouse[1] = t.invert(g.mouse[0] = p);
	        }
	        clearTimeout(g.wheel);
	      }
	
	      // If this wheel event won’t trigger a transform change, ignore it.
	      else if (t.k === k) return;
	
	      // Otherwise, capture the mouse point and location at the start.
	      else {
	        g.mouse = [p, t.invert(p)];
	        interrupt(this);
	        g.start();
	      }
	
	      noevent$1();
	      g.wheel = setTimeout(wheelidled, wheelDelay);
	      g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));
	
	      function wheelidled() {
	        g.wheel = null;
	        g.end();
	      }
	    }
	
	    function mousedowned() {
	      if (touchending || !filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          v = select(exports.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
	          p = mouse(this);
	
	      dragDisable(exports.event.view);
	      nopropagation$1();
	      g.mouse = [p, this.__zoom.invert(p)];
	      interrupt(this);
	      g.start();
	
	      function mousemoved() {
	        noevent$1();
	        g.moved = true;
	        g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));
	      }
	
	      function mouseupped() {
	        v.on("mousemove.zoom mouseup.zoom", null);
	        dragEnable(exports.event.view, g.moved);
	        noevent$1();
	        g.end();
	      }
	    }
	
	    function dblclicked() {
	      if (!filter.apply(this, arguments)) return;
	      var t0 = this.__zoom,
	          p0 = mouse(this),
	          p1 = t0.invert(p0),
	          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),
	          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));
	
	      noevent$1();
	      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);
	      else select(this).call(zoom.transform, t1);
	    }
	
	    function touchstarted() {
	      if (!filter.apply(this, arguments)) return;
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t, p;
	
	      nopropagation$1();
	      for (i = 0; i < n; ++i) {
	        t = touches[i], p = touch(this, touches, t.identifier);
	        p = [p, this.__zoom.invert(p), t.identifier];
	        if (!g.touch0) g.touch0 = p;
	        else if (!g.touch1) g.touch1 = p;
	      }
	      if (touchstarting) {
	        touchstarting = clearTimeout(touchstarting);
	        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);
	      }
	      if (exports.event.touches.length === n) {
	        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
	        interrupt(this);
	        g.start();
	      }
	    }
	
	    function touchmoved() {
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t, p, l;
	
	      noevent$1();
	      if (touchstarting) touchstarting = clearTimeout(touchstarting);
	      for (i = 0; i < n; ++i) {
	        t = touches[i], p = touch(this, touches, t.identifier);
	        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
	        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
	      }
	      t = g.that.__zoom;
	      if (g.touch1) {
	        var p0 = g.touch0[0], l0 = g.touch0[1],
	            p1 = g.touch1[0], l1 = g.touch1[1],
	            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
	            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
	        t = scale(t, Math.sqrt(dp / dl));
	        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
	        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
	      }
	      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
	      else return;
	      g.zoom("touch", constrain(translate(t, p, l), g.extent));
	    }
	
	    function touchended() {
	      var g = gesture(this, arguments),
	          touches = exports.event.changedTouches,
	          n = touches.length, i, t;
	
	      nopropagation$1();
	      if (touchending) clearTimeout(touchending);
	      touchending = setTimeout(function() { touchending = null; }, touchDelay);
	      for (i = 0; i < n; ++i) {
	        t = touches[i];
	        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
	        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
	      }
	      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
	      if (!g.touch0) g.end();
	    }
	
	    zoom.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$9(!!_), zoom) : filter;
	    };
	
	    zoom.extent = function(_) {
	      return arguments.length ? (extent = typeof _ === "function" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
	    };
	
	    zoom.scaleExtent = function(_) {
	      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];
	    };
	
	    zoom.translateExtent = function(_) {
	      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];
	    };
	
	    zoom.duration = function(_) {
	      return arguments.length ? (duration = +_, zoom) : duration;
	    };
	
	    zoom.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? zoom : value;
	    };
	
	    return zoom;
	  }
	
	  function constant$10(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function BrushEvent(target, type, selection) {
	    this.target = target;
	    this.type = type;
	    this.selection = selection;
	  }
	
	  function nopropagation$2() {
	    exports.event.stopImmediatePropagation();
	  }
	
	  function noevent$2() {
	    exports.event.preventDefault();
	    exports.event.stopImmediatePropagation();
	  }
	
	  var MODE_DRAG = {name: "drag"};
	  var MODE_SPACE = {name: "space"};
	  var MODE_HANDLE = {name: "handle"};
	  var MODE_CENTER = {name: "center"};
	  var X = {
	    name: "x",
	    handles: ["e", "w"].map(type$1),
	    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },
	    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
	  };
	
	  var Y = {
	    name: "y",
	    handles: ["n", "s"].map(type$1),
	    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },
	    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
	  };
	
	  var XY = {
	    name: "xy",
	    handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(type$1),
	    input: function(xy) { return xy; },
	    output: function(xy) { return xy; }
	  };
	
	  var cursors = {
	    overlay: "crosshair",
	    selection: "move",
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	
	  var flipX = {
	    e: "w",
	    w: "e",
	    nw: "ne",
	    ne: "nw",
	    se: "sw",
	    sw: "se"
	  };
	
	  var flipY = {
	    n: "s",
	    s: "n",
	    nw: "sw",
	    ne: "se",
	    se: "ne",
	    sw: "nw"
	  };
	
	  var signsX = {
	    overlay: +1,
	    selection: +1,
	    n: null,
	    e: +1,
	    s: null,
	    w: -1,
	    nw: -1,
	    ne: +1,
	    se: +1,
	    sw: -1
	  };
	
	  var signsY = {
	    overlay: +1,
	    selection: +1,
	    n: -1,
	    e: null,
	    s: +1,
	    w: null,
	    nw: -1,
	    ne: -1,
	    se: +1,
	    sw: +1
	  };
	
	  function type$1(t) {
	    return {type: t};
	  }
	
	  // Ignore right-click, since that should open the context menu.
	  function defaultFilter$2() {
	    return !exports.event.button;
	  }
	
	  function defaultExtent$1() {
	    var svg = this.ownerSVGElement || this;
	    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
	  }
	
	  // Like d3.local, but with the name “__brush” rather than auto-generated.
	  function local$1(node) {
	    while (!node.__brush) if (!(node = node.parentNode)) return;
	    return node.__brush;
	  }
	
	  function empty$1(extent) {
	    return extent[0][0] === extent[1][0]
	        || extent[0][1] === extent[1][1];
	  }
	
	  function brushSelection(node) {
	    var state = node.__brush;
	    return state ? state.dim.output(state.selection) : null;
	  }
	
	  function brushX() {
	    return brush$1(X);
	  }
	
	  function brushY() {
	    return brush$1(Y);
	  }
	
	  function brush() {
	    return brush$1(XY);
	  }
	
	  function brush$1(dim) {
	    var extent = defaultExtent$1,
	        filter = defaultFilter$2,
	        listeners = dispatch(brush, "start", "brush", "end"),
	        handleSize = 6,
	        touchending;
	
	    function brush(group) {
	      var overlay = group
	          .property("__brush", initialize)
	        .selectAll(".overlay")
	        .data([type$1("overlay")]);
	
	      overlay.enter().append("rect")
	          .attr("class", "overlay")
	          .attr("pointer-events", "all")
	          .attr("cursor", cursors.overlay)
	        .merge(overlay)
	          .each(function() {
	            var extent = local$1(this).extent;
	            select(this)
	                .attr("x", extent[0][0])
	                .attr("y", extent[0][1])
	                .attr("width", extent[1][0] - extent[0][0])
	                .attr("height", extent[1][1] - extent[0][1]);
	          });
	
	      group.selectAll(".selection")
	        .data([type$1("selection")])
	        .enter().append("rect")
	          .attr("class", "selection")
	          .attr("cursor", cursors.selection)
	          .attr("fill", "#777")
	          .attr("fill-opacity", 0.3)
	          .attr("stroke", "#fff")
	          .attr("shape-rendering", "crispEdges");
	
	      var handle = group.selectAll(".handle")
	        .data(dim.handles, function(d) { return d.type; });
	
	      handle.exit().remove();
	
	      handle.enter().append("rect")
	          .attr("class", function(d) { return "handle handle--" + d.type; })
	          .attr("cursor", function(d) { return cursors[d.type]; });
	
	      group
	          .each(redraw)
	          .attr("fill", "none")
	          .attr("pointer-events", "all")
	          .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")
	          .on("mousedown.brush touchstart.brush", started);
	    }
	
	    brush.move = function(group, selection) {
	      if (group.selection) {
	        group
	            .on("start.brush", function() { emitter(this, arguments).beforestart().start(); })
	            .on("interrupt.brush end.brush", function() { emitter(this, arguments).end(); })
	            .tween("brush", function() {
	              var that = this,
	                  state = that.__brush,
	                  emit = emitter(that, arguments),
	                  selection0 = state.selection,
	                  selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
	                  i = interpolate(selection0, selection1);
	
	              function tween(t) {
	                state.selection = t === 1 && empty$1(selection1) ? null : i(t);
	                redraw.call(that);
	                emit.brush();
	              }
	
	              return selection0 && selection1 ? tween : tween(1);
	            });
	      } else {
	        group
	            .each(function() {
	              var that = this,
	                  args = arguments,
	                  state = that.__brush,
	                  selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
	                  emit = emitter(that, args).beforestart();
	
	              interrupt(that);
	              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;
	              redraw.call(that);
	              emit.start().brush().end();
	            });
	      }
	    };
	
	    function redraw() {
	      var group = select(this),
	          selection = local$1(this).selection;
	
	      if (selection) {
	        group.selectAll(".selection")
	            .style("display", null)
	            .attr("x", selection[0][0])
	            .attr("y", selection[0][1])
	            .attr("width", selection[1][0] - selection[0][0])
	            .attr("height", selection[1][1] - selection[0][1]);
	
	        group.selectAll(".handle")
	            .style("display", null)
	            .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
	            .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
	            .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
	            .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
	      }
	
	      else {
	        group.selectAll(".selection,.handle")
	            .style("display", "none")
	            .attr("x", null)
	            .attr("y", null)
	            .attr("width", null)
	            .attr("height", null);
	      }
	    }
	
	    function emitter(that, args) {
	      return that.__brush.emitter || new Emitter(that, args);
	    }
	
	    function Emitter(that, args) {
	      this.that = that;
	      this.args = args;
	      this.state = that.__brush;
	      this.active = 0;
	    }
	
	    Emitter.prototype = {
	      beforestart: function() {
	        if (++this.active === 1) this.state.emitter = this, this.starting = true;
	        return this;
	      },
	      start: function() {
	        if (this.starting) this.starting = false, this.emit("start");
	        return this;
	      },
	      brush: function() {
	        this.emit("brush");
	        return this;
	      },
	      end: function() {
	        if (--this.active === 0) delete this.state.emitter, this.emit("end");
	        return this;
	      },
	      emit: function(type) {
	        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
	      }
	    };
	
	    function started() {
	      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }
	      else if (touchending) return;
	      if (!filter.apply(this, arguments)) return;
	
	      var that = this,
	          type = exports.event.target.__data__.type,
	          mode = (exports.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),
	          signX = dim === Y ? null : signsX[type],
	          signY = dim === X ? null : signsY[type],
	          state = local$1(that),
	          extent = state.extent,
	          selection = state.selection,
	          W = extent[0][0], w0, w1,
	          N = extent[0][1], n0, n1,
	          E = extent[1][0], e0, e1,
	          S = extent[1][1], s0, s1,
	          dx,
	          dy,
	          moving,
	          shifting = signX && signY && exports.event.shiftKey,
	          lockX,
	          lockY,
	          point0 = mouse(that),
	          point = point0,
	          emit = emitter(that, arguments).beforestart();
	
	      if (type === "overlay") {
	        state.selection = selection = [
	          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],
	          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]
	        ];
	      } else {
	        w0 = selection[0][0];
	        n0 = selection[0][1];
	        e0 = selection[1][0];
	        s0 = selection[1][1];
	      }
	
	      w1 = w0;
	      n1 = n0;
	      e1 = e0;
	      s1 = s0;
	
	      var group = select(that)
	          .attr("pointer-events", "none");
	
	      var overlay = group.selectAll(".overlay")
	          .attr("cursor", cursors[type]);
	
	      if (exports.event.touches) {
	        group
	            .on("touchmove.brush", moved, true)
	            .on("touchend.brush touchcancel.brush", ended, true);
	      } else {
	        var view = select(exports.event.view)
	            .on("keydown.brush", keydowned, true)
	            .on("keyup.brush", keyupped, true)
	            .on("mousemove.brush", moved, true)
	            .on("mouseup.brush", ended, true);
	
	        dragDisable(exports.event.view);
	      }
	
	      nopropagation$2();
	      interrupt(that);
	      redraw.call(that);
	      emit.start();
	
	      function moved() {
	        var point1 = mouse(that);
	        if (shifting && !lockX && !lockY) {
	          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;
	          else lockX = true;
	        }
	        point = point1;
	        moving = true;
	        noevent$2();
	        move();
	      }
	
	      function move() {
	        var t;
	
	        dx = point[0] - point0[0];
	        dy = point[1] - point0[1];
	
	        switch (mode) {
	          case MODE_SPACE:
	          case MODE_DRAG: {
	            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
	            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
	            break;
	          }
	          case MODE_HANDLE: {
	            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
	            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
	            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
	            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
	            break;
	          }
	          case MODE_CENTER: {
	            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
	            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
	            break;
	          }
	        }
	
	        if (e1 < w1) {
	          signX *= -1;
	          t = w0, w0 = e0, e0 = t;
	          t = w1, w1 = e1, e1 = t;
	          if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
	        }
	
	        if (s1 < n1) {
	          signY *= -1;
	          t = n0, n0 = s0, s0 = t;
	          t = n1, n1 = s1, s1 = t;
	          if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
	        }
	
	        selection = state.selection; // May be set by brush.move!
	
	        if (lockX) w1 = selection[0][0], e1 = selection[1][0];
	        if (lockY) n1 = selection[0][1], s1 = selection[1][1];
	
	        if (selection[0][0] !== w1
	            || selection[0][1] !== n1
	            || selection[1][0] !== e1
	            || selection[1][1] !== s1) {
	          state.selection = [[w1, n1], [e1, s1]];
	          redraw.call(that);
	          emit.brush();
	        }
	      }
	
	      function ended() {
	        nopropagation$2();
	        if (exports.event.touches) {
	          if (exports.event.touches.length) return;
	          if (touchending) clearTimeout(touchending);
	          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
	          group.on("touchmove.brush touchend.brush touchcancel.brush", null);
	        } else {
	          dragEnable(exports.event.view, moving);
	          view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
	        }
	        group.attr("pointer-events", "all");
	        overlay.attr("cursor", cursors.overlay);
	        if (empty$1(selection)) state.selection = null, redraw.call(that);
	        emit.end();
	      }
	
	      function keydowned() {
	        switch (exports.event.keyCode) {
	          case 16: { // SHIFT
	            shifting = signX && signY;
	            break;
	          }
	          case 18: { // ALT
	            if (mode === MODE_HANDLE) {
	              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
	              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
	              mode = MODE_CENTER;
	              move();
	            }
	            break;
	          }
	          case 32: { // SPACE; takes priority over ALT
	            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
	              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
	              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
	              mode = MODE_SPACE;
	              overlay.attr("cursor", cursors.selection);
	              move();
	            }
	            break;
	          }
	          default: return;
	        }
	        noevent$2();
	      }
	
	      function keyupped() {
	        switch (exports.event.keyCode) {
	          case 16: { // SHIFT
	            if (shifting) {
	              lockX = lockY = shifting = false;
	              move();
	            }
	            break;
	          }
	          case 18: { // ALT
	            if (mode === MODE_CENTER) {
	              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
	              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
	              mode = MODE_HANDLE;
	              move();
	            }
	            break;
	          }
	          case 32: { // SPACE
	            if (mode === MODE_SPACE) {
	              if (exports.event.altKey) {
	                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
	                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
	                mode = MODE_CENTER;
	              } else {
	                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
	                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
	                mode = MODE_HANDLE;
	              }
	              overlay.attr("cursor", cursors[type]);
	              move();
	            }
	            break;
	          }
	          default: return;
	        }
	        noevent$2();
	      }
	    }
	
	    function initialize() {
	      var state = this.__brush || {selection: null};
	      state.extent = extent.apply(this, arguments);
	      state.dim = dim;
	      return state;
	    }
	
	    brush.extent = function(_) {
	      return arguments.length ? (extent = typeof _ === "function" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;
	    };
	
	    brush.filter = function(_) {
	      return arguments.length ? (filter = typeof _ === "function" ? _ : constant$10(!!_), brush) : filter;
	    };
	
	    brush.handleSize = function(_) {
	      return arguments.length ? (handleSize = +_, brush) : handleSize;
	    };
	
	    brush.on = function() {
	      var value = listeners.on.apply(listeners, arguments);
	      return value === listeners ? brush : value;
	    };
	
	    return brush;
	  }
	
	  var cos = Math.cos;
	  var sin = Math.sin;
	  var pi$3 = Math.PI;
	  var halfPi$2 = pi$3 / 2;
	  var tau$3 = pi$3 * 2;
	  var max$1 = Math.max;
	
	  function compareValue(compare) {
	    return function(a, b) {
	      return compare(
	        a.source.value + a.target.value,
	        b.source.value + b.target.value
	      );
	    };
	  }
	
	  function chord() {
	    var padAngle = 0,
	        sortGroups = null,
	        sortSubgroups = null,
	        sortChords = null;
	
	    function chord(matrix) {
	      var n = matrix.length,
	          groupSums = [],
	          groupIndex = range(n),
	          subgroupIndex = [],
	          chords = [],
	          groups = chords.groups = new Array(n),
	          subgroups = new Array(n * n),
	          k,
	          x,
	          x0,
	          dx,
	          i,
	          j;
	
	      // Compute the sum.
	      k = 0, i = -1; while (++i < n) {
	        x = 0, j = -1; while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(range(n));
	        k += x;
	      }
	
	      // Sort groups…
	      if (sortGroups) groupIndex.sort(function(a, b) {
	        return sortGroups(groupSums[a], groupSums[b]);
	      });
	
	      // Sort subgroups…
	      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {
	        d.sort(function(a, b) {
	          return sortSubgroups(matrix[i][a], matrix[i][b]);
	        });
	      });
	
	      // Convert the sum to scaling factor for [0, 2pi].
	      // TODO Allow start and end angle to be specified?
	      // TODO Allow padding to be specified as percentage?
	      k = max$1(0, tau$3 - padAngle * n) / k;
	      dx = k ? padAngle : tau$3 / n;
	
	      // Compute the start and end angle for each group and subgroup.
	      // Note: Opera has a bug reordering object literal properties!
	      x = 0, i = -1; while (++i < n) {
	        x0 = x, j = -1; while (++j < n) {
	          var di = groupIndex[i],
	              dj = subgroupIndex[di][j],
	              v = matrix[di][dj],
	              a0 = x,
	              a1 = x += v * k;
	          subgroups[dj * n + di] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: groupSums[di]
	        };
	        x += dx;
	      }
	
	      // Generate chords for each (non-empty) subgroup-subgroup link.
	      i = -1; while (++i < n) {
	        j = i - 1; while (++j < n) {
	          var source = subgroups[j * n + i],
	              target = subgroups[i * n + j];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value
	                ? {source: target, target: source}
	                : {source: source, target: target});
	          }
	        }
	      }
	
	      return sortChords ? chords.sort(sortChords) : chords;
	    }
	
	    chord.padAngle = function(_) {
	      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;
	    };
	
	    chord.sortGroups = function(_) {
	      return arguments.length ? (sortGroups = _, chord) : sortGroups;
	    };
	
	    chord.sortSubgroups = function(_) {
	      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
	    };
	
	    chord.sortChords = function(_) {
	      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
	    };
	
	    return chord;
	  }
	
	  var slice$5 = Array.prototype.slice;
	
	  function constant$11(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function defaultSource(d) {
	    return d.source;
	  }
	
	  function defaultTarget(d) {
	    return d.target;
	  }
	
	  function defaultRadius$1(d) {
	    return d.radius;
	  }
	
	  function defaultStartAngle(d) {
	    return d.startAngle;
	  }
	
	  function defaultEndAngle(d) {
	    return d.endAngle;
	  }
	
	  function ribbon() {
	    var source = defaultSource,
	        target = defaultTarget,
	        radius = defaultRadius$1,
	        startAngle = defaultStartAngle,
	        endAngle = defaultEndAngle,
	        context = null;
	
	    function ribbon() {
	      var buffer,
	          argv = slice$5.call(arguments),
	          s = source.apply(this, argv),
	          t = target.apply(this, argv),
	          sr = +radius.apply(this, (argv[0] = s, argv)),
	          sa0 = startAngle.apply(this, argv) - halfPi$2,
	          sa1 = endAngle.apply(this, argv) - halfPi$2,
	          sx0 = sr * cos(sa0),
	          sy0 = sr * sin(sa0),
	          tr = +radius.apply(this, (argv[0] = t, argv)),
	          ta0 = startAngle.apply(this, argv) - halfPi$2,
	          ta1 = endAngle.apply(this, argv) - halfPi$2;
	
	      if (!context) context = buffer = path();
	
	      context.moveTo(sx0, sy0);
	      context.arc(0, 0, sr, sa0, sa1);
	      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?
	        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));
	        context.arc(0, 0, tr, ta0, ta1);
	      }
	      context.quadraticCurveTo(0, 0, sx0, sy0);
	      context.closePath();
	
	      if (buffer) return context = null, buffer + "" || null;
	    }
	
	    ribbon.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$11(+_), ribbon) : radius;
	    };
	
	    ribbon.startAngle = function(_) {
	      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$11(+_), ribbon) : startAngle;
	    };
	
	    ribbon.endAngle = function(_) {
	      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$11(+_), ribbon) : endAngle;
	    };
	
	    ribbon.source = function(_) {
	      return arguments.length ? (source = _, ribbon) : source;
	    };
	
	    ribbon.target = function(_) {
	      return arguments.length ? (target = _, ribbon) : target;
	    };
	
	    ribbon.context = function(_) {
	      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
	    };
	
	    return ribbon;
	  }
	
	  // Adds floating point numbers with twice the normal precision.
	  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
	  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
	  // 305–363 (1997).
	  // Code adapted from GeographicLib by Charles F. F. Karney,
	  // http://geographiclib.sourceforge.net/
	
	  function adder() {
	    return new Adder;
	  }
	
	  function Adder() {
	    this.reset();
	  }
	
	  Adder.prototype = {
	    constructor: Adder,
	    reset: function() {
	      this.s = // rounded value
	      this.t = 0; // exact error
	    },
	    add: function(y) {
	      add$1(temp, y, this.t);
	      add$1(this, temp.s, this.s);
	      if (this.s) this.t += temp.t;
	      else this.s = temp.t;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	
	  var temp = new Adder;
	
	  function add$1(adder, a, b) {
	    var x = adder.s = a + b,
	        bv = x - a,
	        av = x - bv;
	    adder.t = (a - av) + (b - bv);
	  }
	
	  var epsilon$4 = 1e-6;
	  var epsilon2$2 = 1e-12;
	  var pi$4 = Math.PI;
	  var halfPi$3 = pi$4 / 2;
	  var quarterPi = pi$4 / 4;
	  var tau$4 = pi$4 * 2;
	
	  var degrees$1 = 180 / pi$4;
	  var radians = pi$4 / 180;
	
	  var abs = Math.abs;
	  var atan = Math.atan;
	  var atan2 = Math.atan2;
	  var cos$1 = Math.cos;
	  var ceil = Math.ceil;
	  var exp = Math.exp;
	  var log$1 = Math.log;
	  var pow$1 = Math.pow;
	  var sin$1 = Math.sin;
	  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
	  var sqrt$1 = Math.sqrt;
	  var tan = Math.tan;
	
	  function acos(x) {
	    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);
	  }
	
	  function asin$1(x) {
	    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);
	  }
	
	  function haversin(x) {
	    return (x = sin$1(x / 2)) * x;
	  }
	
	  function noop$2() {}
	
	  function streamGeometry(geometry, stream) {
	    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
	      streamGeometryType[geometry.type](geometry, stream);
	    }
	  }
	
	  var streamObjectType = {
	    Feature: function(feature, stream) {
	      streamGeometry(feature.geometry, stream);
	    },
	    FeatureCollection: function(object, stream) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) streamGeometry(features[i].geometry, stream);
	    }
	  };
	
	  var streamGeometryType = {
	    Sphere: function(object, stream) {
	      stream.sphere();
	    },
	    Point: function(object, stream) {
	      object = object.coordinates;
	      stream.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, stream) {
	      streamLine(object.coordinates, stream, 0);
	    },
	    MultiLineString: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) streamLine(coordinates[i], stream, 0);
	    },
	    Polygon: function(object, stream) {
	      streamPolygon(object.coordinates, stream);
	    },
	    MultiPolygon: function(object, stream) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) streamPolygon(coordinates[i], stream);
	    },
	    GeometryCollection: function(object, stream) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) streamGeometry(geometries[i], stream);
	    }
	  };
	
	  function streamLine(coordinates, stream, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    stream.lineStart();
	    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
	    stream.lineEnd();
	  }
	
	  function streamPolygon(coordinates, stream) {
	    var i = -1, n = coordinates.length;
	    stream.polygonStart();
	    while (++i < n) streamLine(coordinates[i], stream, 1);
	    stream.polygonEnd();
	  }
	
	  function stream(object, stream) {
	    if (object && streamObjectType.hasOwnProperty(object.type)) {
	      streamObjectType[object.type](object, stream);
	    } else {
	      streamGeometry(object, stream);
	    }
	  }
	
	  var areaRingSum;
	
	  var areaSum;
	  var lambda00;
	  var phi00;
	  var lambda0;
	  var cosPhi0;
	  var sinPhi0;
	  var areaStream = {
	    point: noop$2,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: function() {
	      areaRingSum.reset();
	      areaStream.lineStart = areaRingStart;
	      areaStream.lineEnd = areaRingEnd;
	    },
	    polygonEnd: function() {
	      var areaRing = +areaRingSum;
	      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);
	      this.lineStart = this.lineEnd = this.point = noop$2;
	    },
	    sphere: function() {
	      areaSum.add(tau$4);
	    }
	  };
	
	  function areaRingStart() {
	    areaStream.point = areaPointFirst;
	  }
	
	  function areaRingEnd() {
	    areaPoint(lambda00, phi00);
	  }
	
	  function areaPointFirst(lambda, phi) {
	    areaStream.point = areaPoint;
	    lambda00 = lambda, phi00 = phi;
	    lambda *= radians, phi *= radians;
	    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);
	  }
	
	  function areaPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    phi = phi / 2 + quarterPi; // half the angular distance from south pole
	
	    // Spherical excess E for a spherical triangle with vertices: south pole,
	    // previous point, current point.  Uses a formula derived from Cagnoli’s
	    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
	    var dLambda = lambda - lambda0,
	        sdLambda = dLambda >= 0 ? 1 : -1,
	        adLambda = sdLambda * dLambda,
	        cosPhi = cos$1(phi),
	        sinPhi = sin$1(phi),
	        k = sinPhi0 * sinPhi,
	        u = cosPhi0 * cosPhi + k * cos$1(adLambda),
	        v = k * sdLambda * sin$1(adLambda);
	    areaRingSum.add(atan2(v, u));
	
	    // Advance the previous points.
	    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
	  }
	
	  function area$2(object) {
	    if (areaSum) areaSum.reset();
	    else areaSum = adder(), areaRingSum = adder();
	    stream(object, areaStream);
	    return areaSum * 2;
	  }
	
	  function spherical(cartesian) {
	    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];
	  }
	
	  function cartesian(spherical) {
	    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);
	    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];
	  }
	
	  function cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	
	  function cartesianCross(a, b) {
	    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
	  }
	
	  // TODO return a
	  function cartesianAddInPlace(a, b) {
	    a[0] += b[0], a[1] += b[1], a[2] += b[2];
	  }
	
	  function cartesianScale(vector, k) {
	    return [vector[0] * k, vector[1] * k, vector[2] * k];
	  }
	
	  // TODO return d
	  function cartesianNormalizeInPlace(d) {
	    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l, d[1] /= l, d[2] /= l;
	  }
	
	var   lambda0$1;
	  var phi0;
	  var lambda1;
	  var phi1;
	  var lambda2;
	var   lambda00$1;
	var   phi00$1;
	  var p0;
	  var deltaSum;
	  var ranges;
	var   range$1;
	  var boundsStream = {
	    point: boundsPoint,
	    lineStart: boundsLineStart,
	    lineEnd: boundsLineEnd,
	    polygonStart: function() {
	      boundsStream.point = boundsRingPoint;
	      boundsStream.lineStart = boundsRingStart;
	      boundsStream.lineEnd = boundsRingEnd;
	      deltaSum.reset();
	      areaStream.polygonStart();
	    },
	    polygonEnd: function() {
	      areaStream.polygonEnd();
	      boundsStream.point = boundsPoint;
	      boundsStream.lineStart = boundsLineStart;
	      boundsStream.lineEnd = boundsLineEnd;
	      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);
	      else if (deltaSum > epsilon$4) phi1 = 90;
	      else if (deltaSum < -epsilon$4) phi0 = -90;
	      range$1[0] = lambda0$1, range$1[1] = lambda1;
	    }
	  };
	
	  function boundsPoint(lambda, phi) {
	    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);
	    if (phi < phi0) phi0 = phi;
	    if (phi > phi1) phi1 = phi;
	  }
	
	  function linePoint(lambda, phi) {
	    var p = cartesian([lambda * radians, phi * radians]);
	    if (p0) {
	      var normal = cartesianCross(p0, p),
	          equatorial = [normal[1], -normal[0], 0],
	          inflection = cartesianCross(equatorial, normal);
	      cartesianNormalizeInPlace(inflection);
	      inflection = spherical(inflection);
	      var delta = lambda - lambda2,
	          sign = delta > 0 ? 1 : -1,
	          lambdai = inflection[0] * degrees$1 * sign,
	          phii,
	          antimeridian = abs(delta) > 180;
	      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
	        phii = inflection[1] * degrees$1;
	        if (phii > phi1) phi1 = phii;
	      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
	        phii = -inflection[1] * degrees$1;
	        if (phii < phi0) phi0 = phii;
	      } else {
	        if (phi < phi0) phi0 = phi;
	        if (phi > phi1) phi1 = phi;
	      }
	      if (antimeridian) {
	        if (lambda < lambda2) {
	          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
	        } else {
	          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
	        }
	      } else {
	        if (lambda1 >= lambda0$1) {
	          if (lambda < lambda0$1) lambda0$1 = lambda;
	          if (lambda > lambda1) lambda1 = lambda;
	        } else {
	          if (lambda > lambda2) {
	            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;
	          } else {
	            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;
	          }
	        }
	      }
	    } else {
	      boundsPoint(lambda, phi);
	    }
	    p0 = p, lambda2 = lambda;
	  }
	
	  function boundsLineStart() {
	    boundsStream.point = linePoint;
	  }
	
	  function boundsLineEnd() {
	    range$1[0] = lambda0$1, range$1[1] = lambda1;
	    boundsStream.point = boundsPoint;
	    p0 = null;
	  }
	
	  function boundsRingPoint(lambda, phi) {
	    if (p0) {
	      var delta = lambda - lambda2;
	      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
	    } else {
	      lambda00$1 = lambda, phi00$1 = phi;
	    }
	    areaStream.point(lambda, phi);
	    linePoint(lambda, phi);
	  }
	
	  function boundsRingStart() {
	    areaStream.lineStart();
	  }
	
	  function boundsRingEnd() {
	    boundsRingPoint(lambda00$1, phi00$1);
	    areaStream.lineEnd();
	    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);
	    range$1[0] = lambda0$1, range$1[1] = lambda1;
	    p0 = null;
	  }
	
	  // Finds the left-right distance between two longitudes.
	  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
	  // the distance between ±180° to be 360°.
	  function angle(lambda0, lambda1) {
	    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
	  }
	
	  function rangeCompare(a, b) {
	    return a[0] - b[0];
	  }
	
	  function rangeContains(range, x) {
	    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	  }
	
	  function bounds(feature) {
	    var i, n, a, b, merged, deltaMax, delta;
	
	    if (deltaSum) deltaSum.reset();
	    else deltaSum = adder();
	    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);
	    ranges = [];
	    stream(feature, boundsStream);
	
	    // First, sort ranges by their minimum longitudes.
	    if (n = ranges.length) {
	      ranges.sort(rangeCompare);
	
	      // Then, merge any ranges that overlap.
	      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
	        b = ranges[i];
	        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
	          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	        } else {
	          merged.push(a = b);
	        }
	      }
	
	      // Finally, find the largest gap between the merged ranges.
	      // The final bounding box will be the inverse of this gap.
	      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
	        b = merged[i];
	        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];
	      }
	    }
	
	    ranges = range$1 = null;
	
	    return lambda0$1 === Infinity || phi0 === Infinity
	        ? [[NaN, NaN], [NaN, NaN]]
	        : [[lambda0$1, phi0], [lambda1, phi1]];
	  }
	
	  var W0;
	  var W1;
	  var X0;
	  var Y0;
	  var Z0;
	  var X1;
	  var Y1;
	  var Z1;
	  var X2;
	  var Y2;
	  var Z2;
	var   lambda00$2;
	var   phi00$2;
	  var x0;
	  var y0;
	  var z0;
	  // previous point
	
	  var centroidStream = {
	    sphere: noop$2,
	    point: centroidPoint,
	    lineStart: centroidLineStart,
	    lineEnd: centroidLineEnd,
	    polygonStart: function() {
	      centroidStream.lineStart = centroidRingStart;
	      centroidStream.lineEnd = centroidRingEnd;
	    },
	    polygonEnd: function() {
	      centroidStream.lineStart = centroidLineStart;
	      centroidStream.lineEnd = centroidLineEnd;
	    }
	  };
	
	  // Arithmetic mean of Cartesian vectors.
	  function centroidPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi);
	    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));
	  }
	
	  function centroidPointCartesian(x, y, z) {
	    ++W0;
	    X0 += (x - X0) / W0;
	    Y0 += (y - Y0) / W0;
	    Z0 += (z - Z0) / W0;
	  }
	
	  function centroidLineStart() {
	    centroidStream.point = centroidLinePointFirst;
	  }
	
	  function centroidLinePointFirst(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi);
	    x0 = cosPhi * cos$1(lambda);
	    y0 = cosPhi * sin$1(lambda);
	    z0 = sin$1(phi);
	    centroidStream.point = centroidLinePoint;
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidLinePoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi),
	        x = cosPhi * cos$1(lambda),
	        y = cosPhi * sin$1(lambda),
	        z = sin$1(phi),
	        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	    W1 += w;
	    X1 += w * (x0 + (x0 = x));
	    Y1 += w * (y0 + (y0 = y));
	    Z1 += w * (z0 + (z0 = z));
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidLineEnd() {
	    centroidStream.point = centroidPoint;
	  }
	
	  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
	  // J. Applied Mechanics 42, 239 (1975).
	  function centroidRingStart() {
	    centroidStream.point = centroidRingPointFirst;
	  }
	
	  function centroidRingEnd() {
	    centroidRingPoint(lambda00$2, phi00$2);
	    centroidStream.point = centroidPoint;
	  }
	
	  function centroidRingPointFirst(lambda, phi) {
	    lambda00$2 = lambda, phi00$2 = phi;
	    lambda *= radians, phi *= radians;
	    centroidStream.point = centroidRingPoint;
	    var cosPhi = cos$1(phi);
	    x0 = cosPhi * cos$1(lambda);
	    y0 = cosPhi * sin$1(lambda);
	    z0 = sin$1(phi);
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroidRingPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var cosPhi = cos$1(phi),
	        x = cosPhi * cos$1(lambda),
	        y = cosPhi * sin$1(lambda),
	        z = sin$1(phi),
	        cx = y0 * z - z0 * y,
	        cy = z0 * x - x0 * z,
	        cz = x0 * y - y0 * x,
	        m = sqrt$1(cx * cx + cy * cy + cz * cz),
	        u = x0 * x + y0 * y + z0 * z,
	        v = m && -acos(u) / m, // area weight
	        w = atan2(m, u); // line weight
	    X2 += v * cx;
	    Y2 += v * cy;
	    Z2 += v * cz;
	    W1 += w;
	    X1 += w * (x0 + (x0 = x));
	    Y1 += w * (y0 + (y0 = y));
	    Z1 += w * (z0 + (z0 = z));
	    centroidPointCartesian(x0, y0, z0);
	  }
	
	  function centroid$1(object) {
	    W0 = W1 =
	    X0 = Y0 = Z0 =
	    X1 = Y1 = Z1 =
	    X2 = Y2 = Z2 = 0;
	    stream(object, centroidStream);
	
	    var x = X2,
	        y = Y2,
	        z = Z2,
	        m = x * x + y * y + z * z;
	
	    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
	    if (m < epsilon2$2) {
	      x = X1, y = Y1, z = Z1;
	      // If the feature has zero length, fall back to arithmetic mean of point vectors.
	      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;
	      m = x * x + y * y + z * z;
	      // If the feature still has an undefined ccentroid, then return.
	      if (m < epsilon2$2) return [NaN, NaN];
	    }
	
	    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];
	  }
	
	  function constant$12(x) {
	    return function() {
	      return x;
	    };
	  }
	
	  function compose(a, b) {
	
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	
	    return compose;
	  }
	
	  function rotationIdentity(lambda, phi) {
	    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];
	  }
	
	  rotationIdentity.invert = rotationIdentity;
	
	  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
	    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
	      : rotationLambda(deltaLambda))
	      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
	      : rotationIdentity);
	  }
	
	  function forwardRotationLambda(deltaLambda) {
	    return function(lambda, phi) {
	      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];
	    };
	  }
	
	  function rotationLambda(deltaLambda) {
	    var rotation = forwardRotationLambda(deltaLambda);
	    rotation.invert = forwardRotationLambda(-deltaLambda);
	    return rotation;
	  }
	
	  function rotationPhiGamma(deltaPhi, deltaGamma) {
	    var cosDeltaPhi = cos$1(deltaPhi),
	        sinDeltaPhi = sin$1(deltaPhi),
	        cosDeltaGamma = cos$1(deltaGamma),
	        sinDeltaGamma = sin$1(deltaGamma);
	
	    function rotation(lambda, phi) {
	      var cosPhi = cos$1(phi),
	          x = cos$1(lambda) * cosPhi,
	          y = sin$1(lambda) * cosPhi,
	          z = sin$1(phi),
	          k = z * cosDeltaPhi + x * sinDeltaPhi;
	      return [
	        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
	        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)
	      ];
	    }
	
	    rotation.invert = function(lambda, phi) {
	      var cosPhi = cos$1(phi),
	          x = cos$1(lambda) * cosPhi,
	          y = sin$1(lambda) * cosPhi,
	          z = sin$1(phi),
	          k = z * cosDeltaGamma - y * sinDeltaGamma;
	      return [
	        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
	        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)
	      ];
	    };
	
	    return rotation;
	  }
	
	  function rotation(rotate) {
	    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);
	
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);
	      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
	    }
	
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);
	      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;
	    };
	
	    return forward;
	  }
	
	  // Generates a circle centered at [0°, 0°], with a given radius and precision.
	  function circleStream(stream, radius, delta, direction, t0, t1) {
	    if (!delta) return;
	    var cosRadius = cos$1(radius),
	        sinRadius = sin$1(radius),
	        step = direction * delta;
	    if (t0 == null) {
	      t0 = radius + direction * tau$4;
	      t1 = radius - step / 2;
	    } else {
	      t0 = circleRadius(cosRadius, t0);
	      t1 = circleRadius(cosRadius, t1);
	      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;
	    }
	    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
	      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);
	      stream.point(point[0], point[1]);
	    }
	  }
	
	  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
	  function circleRadius(cosRadius, point) {
	    point = cartesian(point), point[0] -= cosRadius;
	    cartesianNormalizeInPlace(point);
	    var radius = acos(-point[1]);
	    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;
	  }
	
	  function circle$1() {
	    var center = constant$12([0, 0]),
	        radius = constant$12(90),
	        precision = constant$12(6),
	        ring,
	        rotate,
	        stream = {point: point};
	
	    function point(x, y) {
	      ring.push(x = rotate(x, y));
	      x[0] *= degrees$1, x[1] *= degrees$1;
	    }
	
	    function circle() {
	      var c = center.apply(this, arguments),
	          r = radius.apply(this, arguments) * radians,
	          p = precision.apply(this, arguments) * radians;
	      ring = [];
	      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;
	      circleStream(stream, r, p, 1);
	      c = {type: "Polygon", coordinates: [ring]};
	      ring = rotate = null;
	      return c;
	    }
	
	    circle.center = function(_) {
	      return arguments.length ? (center = typeof _ === "function" ? _ : constant$12([+_[0], +_[1]]), circle) : center;
	    };
	
	    circle.radius = function(_) {
	      return arguments.length ? (radius = typeof _ === "function" ? _ : constant$12(+_), circle) : radius;
	    };
	
	    circle.precision = function(_) {
	      return arguments.length ? (precision = typeof _ === "function" ? _ : constant$12(+_), circle) : precision;
	    };
	
	    return circle;
	  }
	
	  function clipBuffer() {
	    var lines = [],
	        line;
	    return {
	      point: function(x, y) {
	        line.push([x, y]);
	      },
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      lineEnd: noop$2,
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      },
	      result: function() {
	        var result = lines;
	        lines = [];
	        line = null;
	        return result;
	      }
	    };
	  }
	
	  function clipLine(a, b, x0, y0, x1, y1) {
	    var ax = a[0],
	        ay = a[1],
	        bx = b[0],
	        by = b[1],
	        t0 = 0,
	        t1 = 1,
	        dx = bx - ax,
	        dy = by - ay,
	        r;
	
	    r = x0 - ax;
	    if (!dx && r > 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dx > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = x1 - ax;
	    if (!dx && r < 0) return;
	    r /= dx;
	    if (dx < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dx > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    r = y0 - ay;
	    if (!dy && r > 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    } else if (dy > 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    }
	
	    r = y1 - ay;
	    if (!dy && r < 0) return;
	    r /= dy;
	    if (dy < 0) {
	      if (r > t1) return;
	      if (r > t0) t0 = r;
	    } else if (dy > 0) {
	      if (r < t0) return;
	      if (r < t1) t1 = r;
	    }
	
	    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
	    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
	    return true;
	  }
	
	  function pointEqual(a, b) {
	    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;
	  }
	
	  function Intersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other; // another intersection
	    this.e = entry; // is an entry?
	    this.v = false; // visited
	    this.n = this.p = null; // next & previous
	  }
	
	  // A generalized polygon clipping algorithm: given a polygon that has been cut
	  // into its visible line segments, and rejoins the segments by interpolating
	  // along the clip edge.
	  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {
	    var subject = [],
	        clip = [],
	        i,
	        n;
	
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n], x;
	
	      // If the first and last points of a segment are coincident, then treat as a
	      // closed ring. TODO if all rings are closed, then the winding order of the
	      // exterior ring should be checked.
	      if (pointEqual(p0, p1)) {
	        stream.lineStart();
	        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
	        stream.lineEnd();
	        return;
	      }
	
	      subject.push(x = new Intersection(p0, segment, null, true));
	      clip.push(x.o = new Intersection(p0, null, x, false));
	      subject.push(x = new Intersection(p1, segment, null, false));
	      clip.push(x.o = new Intersection(p1, null, x, true));
	    });
	
	    if (!subject.length) return;
	
	    clip.sort(compareIntersection);
	    link$1(subject);
	    link$1(clip);
	
	    for (i = 0, n = clip.length; i < n; ++i) {
	      clip[i].e = startInside = !startInside;
	    }
	
	    var start = subject[0],
	        points,
	        point;
	
	    while (1) {
	      // Find first unvisited intersection.
	      var current = start,
	          isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      stream.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, stream);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, stream);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      stream.lineEnd();
	    }
	  }
	
	  function link$1(array) {
	    if (!(n = array.length)) return;
	    var n,
	        i = 0,
	        a = array[0],
	        b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	
	  var clipMax = 1e9;
	  var clipMin = -clipMax;
	  // TODO Use d3-polygon’s polygonContains here for the ring check?
	  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?
	
	  function clipExtent(x0, y0, x1, y1) {
	
	    function visible(x, y) {
	      return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	    }
	
	    function interpolate(from, to, direction, stream) {
	      var a = 0, a1 = 0;
	      if (from == null
	          || (a = corner(from, direction)) !== (a1 = corner(to, direction))
	          || comparePoint(from, to) < 0 ^ direction > 0) {
	        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	        while ((a = (a + direction + 4) % 4) !== a1);
	      } else {
	        stream.point(to[0], to[1]);
	      }
	    }
	
	    function corner(p, direction) {
	      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3
	          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1
	          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0
	          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
	    }
	
	    function compareIntersection(a, b) {
	      return comparePoint(a.x, b.x);
	    }
	
	    function comparePoint(a, b) {
	      var ca = corner(a, 1),
	          cb = corner(b, 1);
	      return ca !== cb ? ca - cb
	          : ca === 0 ? b[1] - a[1]
	          : ca === 1 ? a[0] - b[0]
	          : ca === 2 ? a[1] - b[1]
	          : b[0] - a[0];
	    }
	
	    return function(stream) {
	      var activeStream = stream,
	          bufferStream = clipBuffer(),
	          segments,
	          polygon,
	          ring,
	          x__, y__, v__, // first point
	          x_, y_, v_, // previous point
	          first,
	          clean;
	
	      var clipStream = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: polygonStart,
	        polygonEnd: polygonEnd
	      };
	
	      function point(x, y) {
	        if (visible(x, y)) activeStream.point(x, y);
	      }
	
	      function polygonInside() {
	        var winding = 0;
	
	        for (var i = 0, n = polygon.length; i < n; ++i) {
	          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
	            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
	            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
	            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
	          }
	        }
	
	        return winding;
	      }
	
	      // Buffer geometry within a polygon and then clip it en masse.
	      function polygonStart() {
	        activeStream = bufferStream, segments = [], polygon = [], clean = true;
	      }
	
	      function polygonEnd() {
	        var startInside = polygonInside(),
	            cleanInside = clean && startInside,
	            visible = (segments = merge(segments)).length;
	        if (cleanInside || visible) {
	          stream.polygonStart();
	          if (cleanInside) {
	            stream.lineStart();
	            interpolate(null, null, 1, stream);
	            stream.lineEnd();
	          }
	          if (visible) {
	            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);
	          }
	          stream.polygonEnd();
	        }
	        activeStream = stream, segments = polygon = ring = null;
	      }
	
	      function lineStart() {
	        clipStream.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	
	      // TODO rather than special-case polygons, simply handle them separately.
	      // Ideally, coincident intersection points should be jittered to avoid
	      // clipping issues.
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferStream.rejoin();
	          segments.push(bufferStream.result());
	        }
	        clipStream.point = point;
	        if (v_) activeStream.lineEnd();
	      }
	
	      function linePoint(x, y) {
	        var v = visible(x, y);
	        if (polygon) ring.push([x, y]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            activeStream.lineStart();
	            activeStream.point(x, y);
	          }
	        } else {
	          if (v && v_) activeStream.point(x, y);
	          else {
	            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
	                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
	            if (clipLine(a, b, x0, y0, x1, y1)) {
	              if (!v_) {
	                activeStream.lineStart();
	                activeStream.point(a[0], a[1]);
	              }
	              activeStream.point(b[0], b[1]);
	              if (!v) activeStream.lineEnd();
	              clean = false;
	            } else if (v) {
	              activeStream.lineStart();
	              activeStream.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	
	      return clipStream;
	    };
	  }
	
	  function extent$1() {
	    var x0 = 0,
	        y0 = 0,
	        x1 = 960,
	        y1 = 500,
	        cache,
	        cacheStream,
	        clip;
	
	    return clip = {
	      stream: function(stream) {
	        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);
	      },
	      extent: function(_) {
	        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
	      }
	    };
	  }
	
	  var lengthSum;
	var   lambda0$2;
	var   sinPhi0$1;
	var   cosPhi0$1;
	  var lengthStream = {
	    sphere: noop$2,
	    point: noop$2,
	    lineStart: lengthLineStart,
	    lineEnd: noop$2,
	    polygonStart: noop$2,
	    polygonEnd: noop$2
	  };
	
	  function lengthLineStart() {
	    lengthStream.point = lengthPointFirst;
	    lengthStream.lineEnd = lengthLineEnd;
	  }
	
	  function lengthLineEnd() {
	    lengthStream.point = lengthStream.lineEnd = noop$2;
	  }
	
	  function lengthPointFirst(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);
	    lengthStream.point = lengthPoint;
	  }
	
	  function lengthPoint(lambda, phi) {
	    lambda *= radians, phi *= radians;
	    var sinPhi = sin$1(phi),
	        cosPhi = cos$1(phi),
	        delta = abs(lambda - lambda0$2),
	        cosDelta = cos$1(delta),
	        sinDelta = sin$1(delta),
	        x = cosPhi * sinDelta,
	        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,
	        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;
	    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));
	    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;
	  }
	
	  function length$2(object) {
	    if (lengthSum) lengthSum.reset();
	    else lengthSum = adder();
	    stream(object, lengthStream);
	    return +lengthSum;
	  }
	
	  var coordinates = [null, null];
	var   object$1 = {type: "LineString", coordinates: coordinates};
	  function distance(a, b) {
	    coordinates[0] = a;
	    coordinates[1] = b;
	    return length$2(object$1);
	  }
	
	  function graticuleX(y0, y1, dy) {
	    var y = range(y0, y1 - epsilon$4, dy).concat(y1);
	    return function(x) { return y.map(function(y) { return [x, y]; }); };
	  }
	
	  function graticuleY(x0, x1, dx) {
	    var x = range(x0, x1 - epsilon$4, dx).concat(x1);
	    return function(y) { return x.map(function(x) { return [x, y]; }); };
	  }
	
	  function graticule() {
	    var x1, x0, X1, X0,
	        y1, y0, Y1, Y0,
	        dx = 10, dy = dx, DX = 90, DY = 360,
	        x, y, X, Y,
	        precision = 2.5;
	
	    function graticule() {
	      return {type: "MultiLineString", coordinates: lines()};
	    }
	
	    function lines() {
	      return range(ceil(X0 / DX) * DX, X1, DX).map(X)
	          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))
	          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))
	          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));
	    }
	
	    graticule.lines = function() {
	      return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
	    };
	
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [
	          X(X0).concat(
	          Y(Y1).slice(1),
	          X(X1).reverse().slice(1),
	          Y(Y0).reverse().slice(1))
	        ]
	      };
	    };
	
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.extentMinor();
	      return graticule.extentMajor(_).extentMinor(_);
	    };
	
	    graticule.extentMajor = function(_) {
	      if (!arguments.length) return [[X0, Y0], [X1, Y1]];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	
	    graticule.extentMinor = function(_) {
	      if (!arguments.length) return [[x0, y0], [x1, y1]];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.stepMinor();
	      return graticule.stepMajor(_).stepMinor(_);
	    };
	
	    graticule.stepMajor = function(_) {
	      if (!arguments.length) return [DX, DY];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	
	    graticule.stepMinor = function(_) {
	      if (!arguments.length) return [dx, dy];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = graticuleX(y0, y1, 90);
	      y = graticuleY(x0, x1, precision);
	      X = graticuleX(Y0, Y1, 90);
	      Y = graticuleY(X0, X1, precision);
	      return graticule;
	    };
	
	    return graticule
	        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])
	        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);
	  }
	
	  function interpolate$2(a, b) {
	    var x0 = a[0] * radians,
	        y0 = a[1] * radians,
	        x1 = b[0] * radians,
	        y1 = b[1] * radians,
	        cy0 = cos$1(y0),
	        sy0 = sin$1(y0),
	        cy1 = cos$1(y1),
	        sy1 = sin$1(y1),
	        kx0 = cy0 * cos$1(x0),
	        ky0 = cy0 * sin$1(x0),
	        kx1 = cy1 * cos$1(x1),
	        ky1 = cy1 * sin$1(x1),
	        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),
	        k = sin$1(d);
	
	    var interpolate = d ? function(t) {
	      var B = sin$1(t *= d) / k,
	          A = sin$1(d - t) / k,
	          x = A * kx0 + B * kx1,
	          y = A * ky0 + B * ky1,
	          z = A * sy0 + B * sy1;
	      return [
	        atan2(y, x) * degrees$1,
	        atan2(z, sqrt$1(x * x + y * y)) * degrees$1
	      ];
	    } : function() {
	      return [x0 * degrees$1, y0 * degrees$1];
	    };
	
	    interpolate.distance = d;
	
	    return interpolate;
	  }
	
	  function identity$7(x) {
	    return x;
	  }
	
	var   areaSum$1 = adder();
	var   areaRingSum$1 = adder();
	  var x00;
	  var y00;
	var   x0$1;
	var   y0$1;
	  var areaStream$1 = {
	    point: noop$2,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: function() {
	      areaStream$1.lineStart = areaRingStart$1;
	      areaStream$1.lineEnd = areaRingEnd$1;
	    },
	    polygonEnd: function() {
	      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;
	      areaSum$1.add(abs(areaRingSum$1));
	      areaRingSum$1.reset();
	    },
	    result: function() {
	      var area = areaSum$1 / 2;
	      areaSum$1.reset();
	      return area;
	    }
	  };
	
	  function areaRingStart$1() {
	    areaStream$1.point = areaPointFirst$1;
	  }
	
	  function areaPointFirst$1(x, y) {
	    areaStream$1.point = areaPoint$1;
	    x00 = x0$1 = x, y00 = y0$1 = y;
	  }
	
	  function areaPoint$1(x, y) {
	    areaRingSum$1.add(y0$1 * x - x0$1 * y);
	    x0$1 = x, y0$1 = y;
	  }
	
	  function areaRingEnd$1() {
	    areaPoint$1(x00, y00);
	  }
	
	var   x0$2 = Infinity;
	var   y0$2 = x0$2;
	  var x1 = -x0$2;
	  var y1 = x1;
	  var boundsStream$1 = {
	    point: boundsPoint$1,
	    lineStart: noop$2,
	    lineEnd: noop$2,
	    polygonStart: noop$2,
	    polygonEnd: noop$2,
	    result: function() {
	      var bounds = [[x0$2, y0$2], [x1, y1]];
	      x1 = y1 = -(y0$2 = x0$2 = Infinity);
	      return bounds;
	    }
	  };
	
	  function boundsPoint$1(x, y) {
	    if (x < x0$2) x0$2 = x;
	    if (x > x1) x1 = x;
	    if (y < y0$2) y0$2 = y;
	    if (y > y1) y1 = y;
	  }
	
	var   X0$1 = 0;
	var   Y0$1 = 0;
	var   Z0$1 = 0;
	var   X1$1 = 0;
	var   Y1$1 = 0;
	var   Z1$1 = 0;
	var   X2$1 = 0;
	var   Y2$1 = 0;
	var   Z2$1 = 0;
	var   x00$1;
	var   y00$1;
	var   x0$3;
	var   y0$3;
	  var centroidStream$1 = {
	    point: centroidPoint$1,
	    lineStart: centroidLineStart$1,
	    lineEnd: centroidLineEnd$1,
	    polygonStart: function() {
	      centroidStream$1.lineStart = centroidRingStart$1;
	      centroidStream$1.lineEnd = centroidRingEnd$1;
	    },
	    polygonEnd: function() {
	      centroidStream$1.point = centroidPoint$1;
	      centroidStream$1.lineStart = centroidLineStart$1;
	      centroidStream$1.lineEnd = centroidLineEnd$1;
	    },
	    result: function() {
	      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]
	          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]
	          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]
	          : [NaN, NaN];
	      X0$1 = Y0$1 = Z0$1 =
	      X1$1 = Y1$1 = Z1$1 =
	      X2$1 = Y2$1 = Z2$1 = 0;
	      return centroid;
	    }
	  };
	
	  function centroidPoint$1(x, y) {
	    X0$1 += x;
	    Y0$1 += y;
	    ++Z0$1;
	  }
	
	  function centroidLineStart$1() {
	    centroidStream$1.point = centroidPointFirstLine;
	  }
	
	  function centroidPointFirstLine(x, y) {
	    centroidStream$1.point = centroidPointLine;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function centroidPointLine(x, y) {
	    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);
	    X1$1 += z * (x0$3 + x) / 2;
	    Y1$1 += z * (y0$3 + y) / 2;
	    Z1$1 += z;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function centroidLineEnd$1() {
	    centroidStream$1.point = centroidPoint$1;
	  }
	
	  function centroidRingStart$1() {
	    centroidStream$1.point = centroidPointFirstRing;
	  }
	
	  function centroidRingEnd$1() {
	    centroidPointRing(x00$1, y00$1);
	  }
	
	  function centroidPointFirstRing(x, y) {
	    centroidStream$1.point = centroidPointRing;
	    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);
	  }
	
	  function centroidPointRing(x, y) {
	    var dx = x - x0$3,
	        dy = y - y0$3,
	        z = sqrt$1(dx * dx + dy * dy);
	
	    X1$1 += z * (x0$3 + x) / 2;
	    Y1$1 += z * (y0$3 + y) / 2;
	    Z1$1 += z;
	
	    z = y0$3 * x - x0$3 * y;
	    X2$1 += z * (x0$3 + x);
	    Y2$1 += z * (y0$3 + y);
	    Z2$1 += z * 3;
	    centroidPoint$1(x0$3 = x, y0$3 = y);
	  }
	
	  function PathContext(context) {
	    var pointRadius = 4.5;
	
	    var stream = {
	      point: point,
	
	      // While inside a line, override point to moveTo then lineTo.
	      lineStart: function() { stream.point = pointLineStart; },
	      lineEnd: lineEnd,
	
	      // While inside a polygon, override lineEnd to closePath.
	      polygonStart: function() { stream.lineEnd = lineEndPolygon; },
	      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },
	
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	
	      result: noop$2
	    };
	
	    function point(x, y) {
	      context.moveTo(x + pointRadius, y);
	      context.arc(x, y, pointRadius, 0, tau$4);
	    }
	
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	
	    function lineEnd() {
	      stream.point = point;
	    }
	
	    function lineEndPolygon() {
	      context.closePath();
	    }
	
	    return stream;
	  }
	
	  function PathString() {
	    var pointCircle = circle$2(4.5),
	        string = [];
	
	    var stream = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = circle$2(_);
	        return stream;
	      },
	      result: function() {
	        if (string.length) {
	          var result = string.join("");
	          string = [];
	          return result;
	        }
	      }
	    };
	
	    function point(x, y) {
	      string.push("M", x, ",", y, pointCircle);
	    }
	
	    function pointLineStart(x, y) {
	      string.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	
	    function pointLine(x, y) {
	      string.push("L", x, ",", y);
	    }
	
	    function lineStart() {
	      stream.point = pointLineStart;
	    }
	
	    function lineEnd() {
	      stream.point = point;
	    }
	
	    function lineEndPolygon() {
	      string.push("Z");
	    }
	
	    return stream;
	  }
	
	  function circle$2(radius) {
	    return "m0," + radius
	        + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
	        + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
	        + "z";
	  }
	
	  function index$3() {
	    var pointRadius = 4.5,
	        projection,
	        projectionStream,
	        context,
	        contextStream;
	
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        stream(object, projectionStream(contextStream));
	      }
	      return contextStream.result();
	    }
	
	    path.area = function(object) {
	      stream(object, projectionStream(areaStream$1));
	      return areaStream$1.result();
	    };
	
	    path.bounds = function(object) {
	      stream(object, projectionStream(boundsStream$1));
	      return boundsStream$1.result();
	    };
	
	    path.centroid = function(object) {
	      stream(object, projectionStream(centroidStream$1));
	      return centroidStream$1.result();
	    };
	
	    path.projection = function(_) {
	      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;
	    };
	
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new PathString : new PathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return path;
	    };
	
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	
	    return path.projection(null).context(null);
	  }
	
	  var sum$2 = adder();
	
	  function polygonContains(polygon, point) {
	    var lambda = point[0],
	        phi = point[1],
	        normal = [sin$1(lambda), -cos$1(lambda), 0],
	        angle = 0,
	        winding = 0;
	
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      if (!(m = (ring = polygon[i]).length)) continue;
	      var ring,
	          m,
	          point0 = ring[m - 1],
	          lambda0 = point0[0],
	          phi0 = point0[1] / 2 + quarterPi,
	          sinPhi0 = sin$1(phi0),
	          cosPhi0 = cos$1(phi0);
	
	      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
	        var point1 = ring[j],
	            lambda1 = point1[0],
	            phi1 = point1[1] / 2 + quarterPi,
	            sinPhi1 = sin$1(phi1),
	            cosPhi1 = cos$1(phi1),
	            delta = lambda1 - lambda0,
	            sign = delta >= 0 ? 1 : -1,
	            absDelta = sign * delta,
	            antimeridian = absDelta > pi$4,
	            k = sinPhi0 * sinPhi1;
	
	        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));
	        angle += antimeridian ? delta + sign * tau$4 : delta;
	
	        // Are the longitudes either side of the point’s meridian (lambda),
	        // and are the latitudes smaller than the parallel (phi)?
	        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
	          var arc = cartesianCross(cartesian(point0), cartesian(point1));
	          cartesianNormalizeInPlace(arc);
	          var intersection = cartesianCross(normal, arc);
	          cartesianNormalizeInPlace(intersection);
	          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);
	          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ delta >= 0 ? 1 : -1;
	          }
	        }
	      }
	    }
	
	    // First, determine whether the South pole is inside or outside:
	    //
	    // It is inside if:
	    // * the polygon winds around it in a clockwise direction.
	    // * the polygon does not (cumulatively) wind around it, but has a negative
	    //   (counter-clockwise) area.
	    //
	    // Second, count the (signed) number of times a segment crosses a lambda
	    // from the point to the South pole.  If it is zero, then the point is the
	    // same side as the South pole.
	
	    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);
	    sum$2.reset();
	    return contains;
	  }
	
	  function clip(pointVisible, clipLine, interpolate, start) {
	    return function(rotate, sink) {
	      var line = clipLine(sink),
	          rotatedStart = rotate.invert(start[0], start[1]),
	          ringBuffer = clipBuffer(),
	          ringSink = clipLine(ringBuffer),
	          polygonStarted = false,
	          polygon,
	          segments,
	          ring;
	
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = merge(segments);
	          var startInside = polygonContains(polygon, rotatedStart);
	          if (segments.length) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);
	          } else if (startInside) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            sink.lineStart();
	            interpolate(null, null, 1, sink);
	            sink.lineEnd();
	          }
	          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          sink.polygonStart();
	          sink.lineStart();
	          interpolate(null, null, 1, sink);
	          sink.lineEnd();
	          sink.polygonEnd();
	        }
	      };
	
	      function point(lambda, phi) {
	        var point = rotate(lambda, phi);
	        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);
	      }
	
	      function pointLine(lambda, phi) {
	        var point = rotate(lambda, phi);
	        line.point(point[0], point[1]);
	      }
	
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	
	      function pointRing(lambda, phi) {
	        ring.push([lambda, phi]);
	        var point = rotate(lambda, phi);
	        ringSink.point(point[0], point[1]);
	      }
	
	      function ringStart() {
	        ringSink.lineStart();
	        ring = [];
	      }
	
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringSink.lineEnd();
	
	        var clean = ringSink.clean(),
	            ringSegments = ringBuffer.result(),
	            i, n = ringSegments.length, m,
	            segment,
	            point;
	
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	
	        if (!n) return;
	
	        // No intersections.
	        if (clean & 1) {
	          segment = ringSegments[0];
	          if ((m = segment.length - 1) > 0) {
	            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
	            sink.lineStart();
	            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
	            sink.lineEnd();
	          }
	          return;
	        }
	
	        // Rejoin connected segments.
	        // TODO reuse ringBuffer.rejoin()?
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	
	        segments.push(ringSegments.filter(validSegment));
	      }
	
	      return clip;
	    };
	  }
	
	  function validSegment(segment) {
	    return segment.length > 1;
	  }
	
	  // Intersections are sorted along the clip edge. For both antimeridian cutting
	  // and circle clipping, the same comparison is used.
	  function compareIntersection(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])
	         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);
	  }
	
	  var clipAntimeridian = clip(
	    function() { return true; },
	    clipAntimeridianLine,
	    clipAntimeridianInterpolate,
	    [-pi$4, -halfPi$3]
	  );
	
	  // Takes a line and cuts into visible segments. Return values: 0 - there were
	  // intersections or the line was empty; 1 - no intersections; 2 - there were
	  // intersections, and the first and last segments should be rejoined.
	  function clipAntimeridianLine(stream) {
	    var lambda0 = NaN,
	        phi0 = NaN,
	        sign0 = NaN,
	        clean; // no intersections
	
	    return {
	      lineStart: function() {
	        stream.lineStart();
	        clean = 1;
	      },
	      point: function(lambda1, phi1) {
	        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,
	            delta = abs(lambda1 - lambda0);
	        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole
	          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);
	          stream.point(sign0, phi0);
	          stream.lineEnd();
	          stream.lineStart();
	          stream.point(sign1, phi0);
	          stream.point(lambda1, phi0);
	          clean = 0;
	        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian
	          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies
	          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;
	          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
	          stream.point(sign0, phi0);
	          stream.lineEnd();
	          stream.lineStart();
	          stream.point(sign1, phi0);
	          clean = 0;
	        }
	        stream.point(lambda0 = lambda1, phi0 = phi1);
	        sign0 = sign1;
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	        lambda0 = phi0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean; // if intersections, rejoin first and last segments
	      }
	    };
	  }
	
	  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
	    var cosPhi0,
	        cosPhi1,
	        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);
	    return abs(sinLambda0Lambda1) > epsilon$4
	        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)
	            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))
	            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
	        : (phi0 + phi1) / 2;
	  }
	
	  function clipAntimeridianInterpolate(from, to, direction, stream) {
	    var phi;
	    if (from == null) {
	      phi = direction * halfPi$3;
	      stream.point(-pi$4, phi);
	      stream.point(0, phi);
	      stream.point(pi$4, phi);
	      stream.point(pi$4, 0);
	      stream.point(pi$4, -phi);
	      stream.point(0, -phi);
	      stream.point(-pi$4, -phi);
	      stream.point(-pi$4, 0);
	      stream.point(-pi$4, phi);
	    } else if (abs(from[0] - to[0]) > epsilon$4) {
	      var lambda = from[0] < to[0] ? pi$4 : -pi$4;
	      phi = direction * lambda / 2;
	      stream.point(-lambda, phi);
	      stream.point(0, phi);
	      stream.point(lambda, phi);
	    } else {
	      stream.point(to[0], to[1]);
	    }
	  }
	
	  function clipCircle(radius, delta) {
	    var cr = cos$1(radius),
	        smallRadius = cr > 0,
	        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case
	
	    function interpolate(from, to, direction, stream) {
	      circleStream(stream, radius, delta, direction, from, to);
	    }
	
	    function visible(lambda, phi) {
	      return cos$1(lambda) * cos$1(phi) > cr;
	    }
	
	    // Takes a line and cuts into visible segments. Return values used for polygon
	    // clipping: 0 - there were intersections or the line was empty; 1 - no
	    // intersections 2 - there were intersections, and the first and last segments
	    // should be rejoined.
	    function clipLine(stream) {
	      var point0, // previous point
	          c0, // code for previous point
	          v0, // visibility of previous point
	          v00, // visibility of first point
	          clean; // no intersections
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(lambda, phi) {
	          var point1 = [lambda, phi],
	              point2,
	              v = visible(lambda, phi),
	              c = smallRadius
	                ? v ? 0 : code(lambda, phi)
	                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;
	          if (!point0 && (v00 = v0 = v)) stream.lineStart();
	          // Handle degeneracies.
	          // TODO ignore if not clipping polygons.
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {
	              point1[0] += epsilon$4;
	              point1[1] += epsilon$4;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              // outside going in
	              stream.lineStart();
	              point2 = intersect(point1, point0);
	              stream.point(point2[0], point2[1]);
	            } else {
	              // inside going out
	              point2 = intersect(point0, point1);
	              stream.point(point2[0], point2[1]);
	              stream.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            // If the codes for two points are different, or are both zero,
	            // and there this segment intersects with the small circle.
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                stream.lineStart();
	                stream.point(t[0][0], t[0][1]);
	                stream.point(t[1][0], t[1][1]);
	                stream.lineEnd();
	              } else {
	                stream.point(t[1][0], t[1][1]);
	                stream.lineEnd();
	                stream.lineStart();
	                stream.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !pointEqual(point0, point1))) {
	            stream.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) stream.lineEnd();
	          point0 = null;
	        },
	        // Rejoin first and last segments if there were intersections and the first
	        // and last points were visible.
	        clean: function() {
	          return clean | ((v00 && v0) << 1);
	        }
	      };
	    }
	
	    // Intersects the great circle between a and b with the clip circle.
	    function intersect(a, b, two) {
	      var pa = cartesian(a),
	          pb = cartesian(b);
	
	      // We have two planes, n1.p = d1 and n2.p = d2.
	      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
	      var n1 = [1, 0, 0], // normal
	          n2 = cartesianCross(pa, pb),
	          n2n2 = cartesianDot(n2, n2),
	          n1n2 = n2[0], // cartesianDot(n1, n2),
	          determinant = n2n2 - n1n2 * n1n2;
	
	      // Two polar points.
	      if (!determinant) return !two && a;
	
	      var c1 =  cr * n2n2 / determinant,
	          c2 = -cr * n1n2 / determinant,
	          n1xn2 = cartesianCross(n1, n2),
	          A = cartesianScale(n1, c1),
	          B = cartesianScale(n2, c2);
	      cartesianAddInPlace(A, B);
	
	      // Solve |p(t)|^2 = 1.
	      var u = n1xn2,
	          w = cartesianDot(A, u),
	          uu = cartesianDot(u, u),
	          t2 = w * w - uu * (cartesianDot(A, A) - 1);
	
	      if (t2 < 0) return;
	
	      var t = sqrt$1(t2),
	          q = cartesianScale(u, (-w - t) / uu);
	      cartesianAddInPlace(q, A);
	      q = spherical(q);
	
	      if (!two) return q;
	
	      // Two intersection points.
	      var lambda0 = a[0],
	          lambda1 = b[0],
	          phi0 = a[1],
	          phi1 = b[1],
	          z;
	
	      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;
	
	      var delta = lambda1 - lambda0,
	          polar = abs(delta - pi$4) < epsilon$4,
	          meridian = polar || delta < epsilon$4;
	
	      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;
	
	      // Check that the first point is between a and b.
	      if (meridian
	          ? polar
	            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)
	            : phi0 <= q[1] && q[1] <= phi1
	          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
	        var q1 = cartesianScale(u, (-w + t) / uu);
	        cartesianAddInPlace(q1, A);
	        return [q, spherical(q1)];
	      }
	    }
	
	    // Generates a 4-bit vector representing the location of a point relative to
	    // the small circle's bounding box.
	    function code(lambda, phi) {
	      var r = smallRadius ? radius : pi$4 - radius,
	          code = 0;
	      if (lambda < -r) code |= 1; // left
	      else if (lambda > r) code |= 2; // right
	      if (phi < -r) code |= 4; // below
	      else if (phi > r) code |= 8; // above
	      return code;
	    }
	
	    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);
	  }
	
	  function transform$1(prototype) {
	    return {
	      stream: transform$2(prototype)
	    };
	  }
	
	  function transform$2(prototype) {
	    function T() {}
	    var p = T.prototype = Object.create(Transform$1.prototype);
	    for (var k in prototype) p[k] = prototype[k];
	    return function(stream) {
	      var t = new T;
	      t.stream = stream;
	      return t;
	    };
	  }
	
	  function Transform$1() {}
	
	  Transform$1.prototype = {
	    point: function(x, y) { this.stream.point(x, y); },
	    sphere: function() { this.stream.sphere(); },
	    lineStart: function() { this.stream.lineStart(); },
	    lineEnd: function() { this.stream.lineEnd(); },
	    polygonStart: function() { this.stream.polygonStart(); },
	    polygonEnd: function() { this.stream.polygonEnd(); }
	  };
	
	  var maxDepth = 16;
	  var cosMinDistance = cos$1(30 * radians);
	  // cos(minimum angular distance)
	
	  function resample(project, delta2) {
	    return +delta2 ? resample$1(project, delta2) : resampleNone(project);
	  }
	
	  function resampleNone(project) {
	    return transform$2({
	      point: function(x, y) {
	        x = project(x, y);
	        this.stream.point(x[0], x[1]);
	      }
	    });
	  }
	
	  function resample$1(project, delta2) {
	
	    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0,
	          dy = y1 - y0,
	          d2 = dx * dx + dy * dy;
	      if (d2 > 4 * delta2 && depth--) {
	        var a = a0 + a1,
	            b = b0 + b1,
	            c = c0 + c1,
	            m = sqrt$1(a * a + b * b + c * c),
	            phi2 = asin$1(c /= m),
	            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),
	            p = project(lambda2, phi2),
	            x2 = p[0],
	            y2 = p[1],
	            dx2 = x2 - x0,
	            dy2 = y2 - y0,
	            dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > delta2 // perpendicular projected distance
	            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
	            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
	          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    return function(stream) {
	      var lambda00, x00, y00, a00, b00, c00, // first point
	          lambda0, x0, y0, a0, b0, c0; // previous point
	
	      var resampleStream = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
	        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
	      };
	
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	
	      function lineStart() {
	        x0 = NaN;
	        resampleStream.point = linePoint;
	        stream.lineStart();
	      }
	
	      function linePoint(lambda, phi) {
	        var c = cartesian([lambda, phi]), p = project(lambda, phi);
	        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	
	      function lineEnd() {
	        resampleStream.point = point;
	        stream.lineEnd();
	      }
	
	      function ringStart() {
	        lineStart();
	        resampleStream.point = ringPoint;
	        resampleStream.lineEnd = ringEnd;
	      }
	
	      function ringPoint(lambda, phi) {
	        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resampleStream.point = linePoint;
	      }
	
	      function ringEnd() {
	        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
	        resampleStream.lineEnd = lineEnd;
	        lineEnd();
	      }
	
	      return resampleStream;
	    };
	  }
	
	  var transformRadians = transform$2({
	    point: function(x, y) {
	      this.stream.point(x * radians, y * radians);
	    }
	  });
	
	  function projection(project) {
	    return projectionMutator(function() { return project; })();
	  }
	
	  function projectionMutator(projectAt) {
	    var project,
	        k = 150, // scale
	        x = 480, y = 250, // translate
	        dx, dy, lambda = 0, phi = 0, // center
	        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate
	        theta = null, preclip = clipAntimeridian, // clip angle
	        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent
	        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision
	        cache,
	        cacheStream;
	
	    function projection(point) {
	      point = projectRotate(point[0] * radians, point[1] * radians);
	      return [point[0] * k + dx, dy - point[1] * k];
	    }
	
	    function invert(point) {
	      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);
	      return point && [point[0] * degrees$1, point[1] * degrees$1];
	    }
	
	    function projectTransform(x, y) {
	      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];
	    }
	
	    projection.stream = function(stream) {
	      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));
	    };
	
	    projection.clipAngle = function(_) {
	      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;
	    };
	
	    projection.clipExtent = function(_) {
	      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
	    };
	
	    projection.scale = function(_) {
	      return arguments.length ? (k = +_, recenter()) : k;
	    };
	
	    projection.translate = function(_) {
	      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
	    };
	
	    projection.center = function(_) {
	      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];
	    };
	
	    projection.rotate = function(_) {
	      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];
	    };
	
	    projection.precision = function(_) {
	      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);
	    };
	
	    function recenter() {
	      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);
	      var center = project(lambda, phi);
	      dx = x - center[0] * k;
	      dy = y + center[1] * k;
	      return reset();
	    }
	
	    function reset() {
	      cache = cacheStream = null;
	      return projection;
	    }
	
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return recenter();
	    };
	  }
	
	  function conicProjection(projectAt) {
	    var phi0 = 0,
	        phi1 = pi$4 / 3,
	        m = projectionMutator(projectAt),
	        p = m(phi0, phi1);
	
	    p.parallels = function(_) {
	      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];
	    };
	
	    return p;
	  }
	
	  function conicEqualAreaRaw(y0, y1) {
	    var sy0 = sin$1(y0),
	        n = (sy0 + sin$1(y1)) / 2,
	        c = 1 + sy0 * (2 * n - sy0),
	        r0 = sqrt$1(c) / n;
	
	    function project(x, y) {
	      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;
	      return [r * sin$1(x *= n), r0 - r * cos$1(x)];
	    }
	
	    project.invert = function(x, y) {
	      var r0y = r0 - y;
	      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
	    };
	
	    return project;
	  }
	
	  function conicEqualArea() {
	    return conicProjection(conicEqualAreaRaw)
	        .scale(155.424)
	        .center([0, 33.6442]);
	  }
	
	  function albers() {
	    return conicEqualArea()
	        .parallels([29.5, 45.5])
	        .scale(1070)
	        .translate([480, 250])
	        .rotate([96, 0])
	        .center([-0.6, 38.7]);
	  }
	
	  // The projections must have mutually exclusive clip regions on the sphere,
	  // as this will avoid emitting interleaving lines and polygons.
	  function multiplex(streams) {
	    var n = streams.length;
	    return {
	      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
	      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
	      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
	      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
	      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
	      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
	    };
	  }
	
	  // A composite projection for the United States, configured by default for
	  // 960×500. The projection also works quite well at 960×600 if you change the
	  // scale to 1285 and adjust the translate accordingly. The set of standard
	  // parallels for each region comes from USGS, which is published here:
	  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
	  function albersUsa() {
	    var cache,
	        cacheStream,
	        lower48 = albers(), lower48Point,
	        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
	        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
	        point, pointStream = {point: function(x, y) { point = [x, y]; }};
	
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      return point = null,
	          (lower48Point.point(x, y), point)
	          || (alaskaPoint.point(x, y), point)
	          || (hawaiiPoint.point(x, y), point);
	    }
	
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(),
	          t = lower48.translate(),
	          x = (coordinates[0] - t[0]) / k,
	          y = (coordinates[1] - t[1]) / k;
	      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
	          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
	          : lower48).invert(coordinates);
	    };
	
	    albersUsa.stream = function(stream) {
	      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
	    };
	
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_), alaska.precision(_), hawaii.precision(_);
	      return albersUsa;
	    };
	
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	
	      lower48Point = lower48
	          .translate(_)
	          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
	          .stream(pointStream);
	
	      alaskaPoint = alaska
	          .translate([x - 0.307 * k, y + 0.201 * k])
	          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])
	          .stream(pointStream);
	
	      hawaiiPoint = hawaii
	          .translate([x - 0.205 * k, y + 0.212 * k])
	          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])
	          .stream(pointStream);
	
	      return albersUsa;
	    };
	
	    return albersUsa.scale(1070);
	  }
	
	  function azimuthalRaw(scale) {
	    return function(x, y) {
	      var cx = cos$1(x),
	          cy = cos$1(y),
	          k = scale(cx * cy);
	      return [
	        k * cy * sin$1(x),
	        k * sin$1(y)
	      ];
	    }
	  }
	
	  function azimuthalInvert(angle) {
	    return function(x, y) {
	      var z = sqrt$1(x * x + y * y),
	          c = angle(z),
	          sc = sin$1(c),
	          cc = cos$1(c);
	      return [
	        atan2(x * sc, z * cc),
	        asin$1(z && y * sc / z)
	      ];
	    }
	  }
	
	  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
	    return sqrt$1(2 / (1 + cxcy));
	  });
	
	  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {
	    return 2 * asin$1(z / 2);
	  });
	
	  function azimuthalEqualArea() {
	    return projection(azimuthalEqualAreaRaw)
	        .scale(124.75)
	        .clipAngle(180 - 1e-3);
	  }
	
	  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {
	    return (c = acos(c)) && c / sin$1(c);
	  });
	
	  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {
	    return z;
	  });
	
	  function azimuthalEquidistant() {
	    return projection(azimuthalEquidistantRaw)
	        .scale(79.4188)
	        .clipAngle(180 - 1e-3);
	  }
	
	  function mercatorRaw(lambda, phi) {
	    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];
	  }
	
	  mercatorRaw.invert = function(x, y) {
	    return [x, 2 * atan(exp(y)) - halfPi$3];
	  };
	
	  function mercator() {
	    return mercatorProjection(mercatorRaw)
	        .scale(961 / tau$4);
	  }
	
	  function mercatorProjection(project) {
	    var m = projection(project),
	        scale = m.scale,
	        translate = m.translate,
	        clipExtent = m.clipExtent,
	        clipAuto;
	
	    m.scale = function(_) {
	      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();
	    };
	
	    m.translate = function(_) {
	      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();
	    };
	
	    m.clipExtent = function(_) {
	      if (!arguments.length) return clipAuto ? null : clipExtent();
	      if (clipAuto = _ == null) {
	        var k = pi$4 * scale(),
	            t = translate();
	        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];
	      }
	      clipExtent(_);
	      return m;
	    };
	
	    return m.clipExtent(null);
	  }
	
	  function tany(y) {
	    return tan((halfPi$3 + y) / 2);
	  }
	
	  function conicConformalRaw(y0, y1) {
	    var cy0 = cos$1(y0),
	        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),
	        f = cy0 * pow$1(tany(y0), n) / n;
	
	    if (!n) return mercatorRaw;
	
	    function project(x, y) {
	      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }
	      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }
	      var r = f / pow$1(tany(y), n);
	      return [r * sin$1(n * x), f - r * cos$1(n * x)];
	    }
	
	    project.invert = function(x, y) {
	      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);
	      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];
	    };
	
	    return project;
	  }
	
	  function conicConformal() {
	    return conicProjection(conicConformalRaw)
	        .scale(109.5)
	        .parallels([30, 30]);
	  }
	
	  function equirectangularRaw(lambda, phi) {
	    return [lambda, phi];
	  }
	
	  equirectangularRaw.invert = equirectangularRaw;
	
	  function equirectangular() {
	    return projection(equirectangularRaw)
	        .scale(152.63);
	  }
	
	  function conicEquidistantRaw(y0, y1) {
	    var cy0 = cos$1(y0),
	        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),
	        g = cy0 / n + y0;
	
	    if (abs(n) < epsilon$4) return equirectangularRaw;
	
	    function project(x, y) {
	      var gy = g - y, nx = n * x;
	      return [gy * sin$1(nx), g - gy * cos$1(nx)];
	    }
	
	    project.invert = function(x, y) {
	      var gy = g - y;
	      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];
	    };
	
	    return project;
	  }
	
	  function conicEquidistant() {
	    return conicProjection(conicEquidistantRaw)
	        .scale(131.154)
	        .center([0, 13.9389]);
	  }
	
	  function gnomonicRaw(x, y) {
	    var cy = cos$1(y), k = cos$1(x) * cy;
	    return [cy * sin$1(x) / k, sin$1(y) / k];
	  }
	
	  gnomonicRaw.invert = azimuthalInvert(atan);
	
	  function gnomonic() {
	    return projection(gnomonicRaw)
	        .scale(144.049)
	        .clipAngle(60);
	  }
	
	  function orthographicRaw(x, y) {
	    return [cos$1(y) * sin$1(x), sin$1(y)];
	  }
	
	  orthographicRaw.invert = azimuthalInvert(asin$1);
	
	  function orthographic() {
	    return projection(orthographicRaw)
	        .scale(249.5)
	        .clipAngle(90 + epsilon$4);
	  }
	
	  function stereographicRaw(x, y) {
	    var cy = cos$1(y), k = 1 + cos$1(x) * cy;
	    return [cy * sin$1(x) / k, sin$1(y) / k];
	  }
	
	  stereographicRaw.invert = azimuthalInvert(function(z) {
	    return 2 + atan(z);
	  });
	
	  function stereographic() {
	    return projection(stereographicRaw)
	        .scale(250)
	        .clipAngle(142);
	  }
	
	  function transverseMercatorRaw(lambda, phi) {
	    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];
	  }
	
	  transverseMercatorRaw.invert = function(x, y) {
	    return [-y, 2 * atan(exp(x)) - halfPi$3];
	  };
	
	  function transverseMercator() {
	    var m = mercatorProjection(transverseMercatorRaw),
	        center = m.center,
	        rotate = m.rotate;
	
	    m.center = function(_) {
	      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
	    };
	
	    m.rotate = function(_) {
	      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
	    };
	
	    return rotate([0, 0, 90])
	        .scale(159.155);
	  }
	
	  exports.version = version;
	  exports.bisect = bisectRight;
	  exports.bisectRight = bisectRight;
	  exports.bisectLeft = bisectLeft;
	  exports.ascending = ascending;
	  exports.bisector = bisector;
	  exports.descending = descending;
	  exports.deviation = deviation;
	  exports.extent = extent;
	  exports.histogram = histogram;
	  exports.thresholdFreedmanDiaconis = freedmanDiaconis;
	  exports.thresholdScott = scott;
	  exports.thresholdSturges = sturges;
	  exports.max = max;
	  exports.mean = mean;
	  exports.median = median;
	  exports.merge = merge;
	  exports.min = min;
	  exports.pairs = pairs;
	  exports.permute = permute;
	  exports.quantile = threshold;
	  exports.range = range;
	  exports.scan = scan;
	  exports.shuffle = shuffle;
	  exports.sum = sum;
	  exports.ticks = ticks;
	  exports.tickStep = tickStep;
	  exports.transpose = transpose;
	  exports.variance = variance;
	  exports.zip = zip;
	  exports.entries = entries;
	  exports.keys = keys;
	  exports.values = values;
	  exports.map = map$1;
	  exports.set = set;
	  exports.nest = nest;
	  exports.randomUniform = uniform;
	  exports.randomNormal = normal;
	  exports.randomLogNormal = logNormal;
	  exports.randomBates = bates;
	  exports.randomIrwinHall = irwinHall;
	  exports.randomExponential = exponential;
	  exports.easeLinear = linear;
	  exports.easeQuad = quadInOut;
	  exports.easeQuadIn = quadIn;
	  exports.easeQuadOut = quadOut;
	  exports.easeQuadInOut = quadInOut;
	  exports.easeCubic = easeCubicInOut;
	  exports.easeCubicIn = cubicIn;
	  exports.easeCubicOut = cubicOut;
	  exports.easeCubicInOut = easeCubicInOut;
	  exports.easePoly = polyInOut;
	  exports.easePolyIn = polyIn;
	  exports.easePolyOut = polyOut;
	  exports.easePolyInOut = polyInOut;
	  exports.easeSin = sinInOut;
	  exports.easeSinIn = sinIn;
	  exports.easeSinOut = sinOut;
	  exports.easeSinInOut = sinInOut;
	  exports.easeExp = expInOut;
	  exports.easeExpIn = expIn;
	  exports.easeExpOut = expOut;
	  exports.easeExpInOut = expInOut;
	  exports.easeCircle = circleInOut;
	  exports.easeCircleIn = circleIn;
	  exports.easeCircleOut = circleOut;
	  exports.easeCircleInOut = circleInOut;
	  exports.easeBounce = bounceOut;
	  exports.easeBounceIn = bounceIn;
	  exports.easeBounceOut = bounceOut;
	  exports.easeBounceInOut = bounceInOut;
	  exports.easeBack = backInOut;
	  exports.easeBackIn = backIn;
	  exports.easeBackOut = backOut;
	  exports.easeBackInOut = backInOut;
	  exports.easeElastic = elasticOut;
	  exports.easeElasticIn = elasticIn;
	  exports.easeElasticOut = elasticOut;
	  exports.easeElasticInOut = elasticInOut;
	  exports.polygonArea = area;
	  exports.polygonCentroid = centroid;
	  exports.polygonHull = hull;
	  exports.polygonContains = contains;
	  exports.polygonLength = length$1;
	  exports.path = path;
	  exports.quadtree = quadtree;
	  exports.queue = queue;
	  exports.arc = arc;
	  exports.area = area$1;
	  exports.line = line;
	  exports.pie = pie;
	  exports.radialArea = radialArea;
	  exports.radialLine = radialLine$1;
	  exports.symbol = symbol;
	  exports.symbols = symbols;
	  exports.symbolCircle = circle;
	  exports.symbolCross = cross$1;
	  exports.symbolDiamond = diamond;
	  exports.symbolSquare = square;
	  exports.symbolStar = star;
	  exports.symbolTriangle = triangle;
	  exports.symbolWye = wye;
	  exports.curveBasisClosed = basisClosed;
	  exports.curveBasisOpen = basisOpen;
	  exports.curveBasis = basis;
	  exports.curveBundle = bundle;
	  exports.curveCardinalClosed = cardinalClosed;
	  exports.curveCardinalOpen = cardinalOpen;
	  exports.curveCardinal = cardinal;
	  exports.curveCatmullRomClosed = catmullRomClosed;
	  exports.curveCatmullRomOpen = catmullRomOpen;
	  exports.curveCatmullRom = catmullRom;
	  exports.curveLinearClosed = linearClosed;
	  exports.curveLinear = curveLinear;
	  exports.curveMonotoneX = monotoneX;
	  exports.curveMonotoneY = monotoneY;
	  exports.curveNatural = natural;
	  exports.curveStep = step;
	  exports.curveStepAfter = stepAfter;
	  exports.curveStepBefore = stepBefore;
	  exports.stack = stack;
	  exports.stackOffsetExpand = expand;
	  exports.stackOffsetNone = none;
	  exports.stackOffsetSilhouette = silhouette;
	  exports.stackOffsetWiggle = wiggle;
	  exports.stackOrderAscending = ascending$1;
	  exports.stackOrderDescending = descending$2;
	  exports.stackOrderInsideOut = insideOut;
	  exports.stackOrderNone = none$1;
	  exports.stackOrderReverse = reverse;
	  exports.color = color;
	  exports.rgb = colorRgb;
	  exports.hsl = colorHsl;
	  exports.lab = lab;
	  exports.hcl = colorHcl;
	  exports.cubehelix = cubehelix;
	  exports.interpolate = interpolate;
	  exports.interpolateArray = array$1;
	  exports.interpolateDate = date;
	  exports.interpolateNumber = interpolateNumber;
	  exports.interpolateObject = object;
	  exports.interpolateRound = interpolateRound;
	  exports.interpolateString = interpolateString;
	  exports.interpolateTransformCss = interpolateTransform$1;
	  exports.interpolateTransformSvg = interpolateTransform$2;
	  exports.interpolateZoom = interpolateZoom;
	  exports.interpolateRgb = interpolateRgb;
	  exports.interpolateRgbBasis = rgbBasis;
	  exports.interpolateRgbBasisClosed = rgbBasisClosed;
	  exports.interpolateHsl = hsl$1;
	  exports.interpolateHslLong = hslLong;
	  exports.interpolateLab = lab$1;
	  exports.interpolateHcl = hcl$1;
	  exports.interpolateHclLong = hclLong;
	  exports.interpolateCubehelix = cubehelix$2;
	  exports.interpolateCubehelixLong = interpolateCubehelixLong;
	  exports.interpolateBasis = basis$2;
	  exports.interpolateBasisClosed = basisClosed$1;
	  exports.quantize = quantize;
	  exports.dispatch = dispatch;
	  exports.dsvFormat = dsv;
	  exports.csvParse = csvParse;
	  exports.csvParseRows = csvParseRows;
	  exports.csvFormat = csvFormat;
	  exports.csvFormatRows = csvFormatRows;
	  exports.tsvParse = tsvParse;
	  exports.tsvParseRows = tsvParseRows;
	  exports.tsvFormat = tsvFormat;
	  exports.tsvFormatRows = tsvFormatRows;
	  exports.request = request;
	  exports.html = html;
	  exports.json = json;
	  exports.text = text;
	  exports.xml = xml;
	  exports.csv = csv$1;
	  exports.tsv = tsv$1;
	  exports.now = now;
	  exports.timer = timer;
	  exports.timerFlush = timerFlush;
	  exports.timeout = timeout$1;
	  exports.interval = interval$1;
	  exports.timeInterval = newInterval;
	  exports.timeMillisecond = millisecond;
	  exports.timeMilliseconds = milliseconds;
	  exports.timeSecond = second;
	  exports.timeSeconds = seconds;
	  exports.timeMinute = minute;
	  exports.timeMinutes = minutes;
	  exports.timeHour = hour;
	  exports.timeHours = hours;
	  exports.timeDay = day;
	  exports.timeDays = days;
	  exports.timeWeek = timeWeek;
	  exports.timeWeeks = sundays;
	  exports.timeSunday = timeWeek;
	  exports.timeSundays = sundays;
	  exports.timeMonday = timeMonday;
	  exports.timeMondays = mondays;
	  exports.timeTuesday = tuesday;
	  exports.timeTuesdays = tuesdays;
	  exports.timeWednesday = wednesday;
	  exports.timeWednesdays = wednesdays;
	  exports.timeThursday = thursday;
	  exports.timeThursdays = thursdays;
	  exports.timeFriday = friday;
	  exports.timeFridays = fridays;
	  exports.timeSaturday = saturday;
	  exports.timeSaturdays = saturdays;
	  exports.timeMonth = month;
	  exports.timeMonths = months;
	  exports.timeYear = year;
	  exports.timeYears = years;
	  exports.utcMillisecond = millisecond;
	  exports.utcMilliseconds = milliseconds;
	  exports.utcSecond = second;
	  exports.utcSeconds = seconds;
	  exports.utcMinute = utcMinute;
	  exports.utcMinutes = utcMinutes;
	  exports.utcHour = utcHour;
	  exports.utcHours = utcHours;
	  exports.utcDay = utcDay;
	  exports.utcDays = utcDays;
	  exports.utcWeek = utcWeek;
	  exports.utcWeeks = utcSundays;
	  exports.utcSunday = utcWeek;
	  exports.utcSundays = utcSundays;
	  exports.utcMonday = utcMonday;
	  exports.utcMondays = utcMondays;
	  exports.utcTuesday = utcTuesday;
	  exports.utcTuesdays = utcTuesdays;
	  exports.utcWednesday = utcWednesday;
	  exports.utcWednesdays = utcWednesdays;
	  exports.utcThursday = utcThursday;
	  exports.utcThursdays = utcThursdays;
	  exports.utcFriday = utcFriday;
	  exports.utcFridays = utcFridays;
	  exports.utcSaturday = utcSaturday;
	  exports.utcSaturdays = utcSaturdays;
	  exports.utcMonth = utcMonth;
	  exports.utcMonths = utcMonths;
	  exports.utcYear = utcYear;
	  exports.utcYears = utcYears;
	  exports.formatLocale = formatLocale;
	  exports.formatDefaultLocale = defaultLocale;
	  exports.formatSpecifier = formatSpecifier;
	  exports.precisionFixed = precisionFixed;
	  exports.precisionPrefix = precisionPrefix;
	  exports.precisionRound = precisionRound;
	  exports.isoFormat = formatIso;
	  exports.isoParse = parseIso;
	  exports.timeFormatLocale = formatLocale$1;
	  exports.timeFormatDefaultLocale = defaultLocale$1;
	  exports.scaleBand = band;
	  exports.scalePoint = point$4;
	  exports.scaleIdentity = identity$4;
	  exports.scaleLinear = linear$2;
	  exports.scaleLog = log;
	  exports.scaleOrdinal = ordinal;
	  exports.scaleImplicit = implicit;
	  exports.scalePow = pow;
	  exports.scaleSqrt = sqrt;
	  exports.scaleQuantile = quantile;
	  exports.scaleQuantize = quantize$1;
	  exports.scaleThreshold = threshold$1;
	  exports.scaleTime = time;
	  exports.scaleUtc = utcTime;
	  exports.schemeCategory10 = category10;
	  exports.schemeCategory20b = category20b;
	  exports.schemeCategory20c = category20c;
	  exports.schemeCategory20 = category20;
	  exports.scaleSequential = sequential;
	  exports.interpolateCubehelixDefault = cubehelix$3;
	  exports.interpolateRainbow = rainbow$1;
	  exports.interpolateWarm = warm;
	  exports.interpolateCool = cool;
	  exports.interpolateViridis = viridis;
	  exports.interpolateMagma = magma;
	  exports.interpolateInferno = inferno;
	  exports.interpolatePlasma = plasma;
	  exports.creator = creator;
	  exports.customEvent = customEvent;
	  exports.local = local;
	  exports.matcher = matcher$1;
	  exports.mouse = mouse;
	  exports.namespace = namespace;
	  exports.namespaces = namespaces;
	  exports.select = select;
	  exports.selectAll = selectAll;
	  exports.selection = selection;
	  exports.selector = selector;
	  exports.selectorAll = selectorAll;
	  exports.touch = touch;
	  exports.touches = touches;
	  exports.window = window;
	  exports.active = active;
	  exports.interrupt = interrupt;
	  exports.transition = transition;
	  exports.axisTop = axisTop;
	  exports.axisRight = axisRight;
	  exports.axisBottom = axisBottom;
	  exports.axisLeft = axisLeft;
	  exports.cluster = cluster;
	  exports.hierarchy = hierarchy;
	  exports.pack = index;
	  exports.packSiblings = siblings;
	  exports.packEnclose = enclose;
	  exports.partition = partition;
	  exports.stratify = stratify;
	  exports.tree = tree;
	  exports.treemap = index$1;
	  exports.treemapBinary = binary;
	  exports.treemapDice = treemapDice;
	  exports.treemapSlice = treemapSlice;
	  exports.treemapSliceDice = sliceDice;
	  exports.treemapSquarify = squarify;
	  exports.treemapResquarify = resquarify;
	  exports.forceCenter = center$1;
	  exports.forceCollide = collide;
	  exports.forceLink = link;
	  exports.forceManyBody = manyBody;
	  exports.forceSimulation = simulation;
	  exports.forceX = x$3;
	  exports.forceY = y$3;
	  exports.drag = drag;
	  exports.dragDisable = dragDisable;
	  exports.dragEnable = dragEnable;
	  exports.voronoi = voronoi;
	  exports.zoom = zoom;
	  exports.zoomIdentity = identity$6;
	  exports.zoomTransform = transform;
	  exports.brush = brush;
	  exports.brushX = brushX;
	  exports.brushY = brushY;
	  exports.brushSelection = brushSelection;
	  exports.chord = chord;
	  exports.ribbon = ribbon;
	  exports.geoAlbers = albers;
	  exports.geoAlbersUsa = albersUsa;
	  exports.geoArea = area$2;
	  exports.geoAzimuthalEqualArea = azimuthalEqualArea;
	  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
	  exports.geoAzimuthalEquidistant = azimuthalEquidistant;
	  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;
	  exports.geoBounds = bounds;
	  exports.geoCentroid = centroid$1;
	  exports.geoCircle = circle$1;
	  exports.geoClipExtent = extent$1;
	  exports.geoConicConformal = conicConformal;
	  exports.geoConicConformalRaw = conicConformalRaw;
	  exports.geoConicEqualArea = conicEqualArea;
	  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;
	  exports.geoConicEquidistant = conicEquidistant;
	  exports.geoConicEquidistantRaw = conicEquidistantRaw;
	  exports.geoDistance = distance;
	  exports.geoEquirectangular = equirectangular;
	  exports.geoEquirectangularRaw = equirectangularRaw;
	  exports.geoGnomonic = gnomonic;
	  exports.geoGnomonicRaw = gnomonicRaw;
	  exports.geoGraticule = graticule;
	  exports.geoInterpolate = interpolate$2;
	  exports.geoLength = length$2;
	  exports.geoMercator = mercator;
	  exports.geoMercatorRaw = mercatorRaw;
	  exports.geoOrthographic = orthographic;
	  exports.geoOrthographicRaw = orthographicRaw;
	  exports.geoPath = index$3;
	  exports.geoProjection = projection;
	  exports.geoProjectionMutator = projectionMutator;
	  exports.geoRotation = rotation;
	  exports.geoStereographic = stereographic;
	  exports.geoStereographicRaw = stereographicRaw;
	  exports.geoStream = stream;
	  exports.geoTransform = transform$1;
	  exports.geoTransverseMercator = transverseMercator;
	  exports.geoTransverseMercatorRaw = transverseMercatorRaw;
	
	  Object.defineProperty(exports, '__esModule', { value: true });
	
	}));

/***/ },
/* 315 */
/*!***********************************************************************************!*\
  !*** ./bower_components/purescript-foreign-generic/src/Data/Foreign/Generic.purs ***!
  \***********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var Control_Monad_Eff_Exception_Unsafe = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception/Unsafe.purs */ 316);
	var Data_Array = __webpack_require__(/*! ./bower_components/purescript-arrays/src/Data/Array.purs */ 162);
	var Data_Either = __webpack_require__(/*! ./bower_components/purescript-either/src/Data/Either.purs */ 87);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Foreign = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign.purs */ 149);
	var Data_Foreign_Index = __webpack_require__(/*! ./bower_components/purescript-foreign/src/Data/Foreign/Index.purs */ 166);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Data_Generic = __webpack_require__(/*! ./bower_components/purescript-generics/src/Data/Generic.purs */ 182);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Nullable = __webpack_require__(/*! ./bower_components/purescript-nullable/src/Data/Nullable.purs */ 222);
	var Data_StrMap = __webpack_require__(/*! ./bower_components/purescript-maps/src/Data/StrMap.purs */ 317);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Global_Unsafe = __webpack_require__(/*! ./bower_components/purescript-globals/src/Global/Unsafe.purs */ 321);
	var Type_Proxy = __webpack_require__(/*! ./bower_components/purescript-proxy/src/Type/Proxy.purs */ 184);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Data_Unit = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Unit.purs */ 42);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_Boolean = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Boolean.purs */ 49);
	var Data_Ord = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Ord.purs */ 55);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var TaggedObject = (function () {
	    function TaggedObject(value0) {
	        this.value0 = value0;
	    };
	    TaggedObject.create = function (value0) {
	        return new TaggedObject(value0);
	    };
	    return TaggedObject;
	})();
	var toForeignGeneric = function (dictGeneric) {
	    return function (v) {
	        var go = function (v1) {
	            return function (v2) {
	                if (v2 instanceof Data_Generic.SNumber) {
	                    return Data_Foreign.toForeign(v2.value0);
	                };
	                if (v2 instanceof Data_Generic.SInt) {
	                    return Data_Foreign.toForeign(v2.value0);
	                };
	                if (v2 instanceof Data_Generic.SChar) {
	                    return Data_Foreign.toForeign(v2.value0);
	                };
	                if (v2 instanceof Data_Generic.SString) {
	                    return Data_Foreign.toForeign(v2.value0);
	                };
	                if (v2 instanceof Data_Generic.SBoolean) {
	                    return Data_Foreign.toForeign(v2.value0);
	                };
	                if (v1 instanceof Data_Generic.SigArray && v2 instanceof Data_Generic.SArray) {
	                    return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(function ($168) {
	                        return go(v1.value0(Data_Unit.unit))((function (v3) {
	                            return Data_Function.apply(v3)(Data_Unit.unit);
	                        })($168));
	                    })(v2.value0));
	                };
	                if (v1 instanceof Data_Generic.SigRecord && v2 instanceof Data_Generic.SRecord) {
	                    var pair = function (sig) {
	                        return function (sp) {
	                            if (sig.recLabel === sp.recLabel) {
	                                return new Data_Tuple.Tuple(sig.recLabel, go(sig.recValue(Data_Unit.unit))(sp.recValue(Data_Unit.unit)));
	                            };
	                            if (Data_Boolean.otherwise) {
	                                return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Record fields do not match signature");
	                            };
	                            throw new Error("Failed pattern match at Data.Foreign.Generic line 136, column 5 - line 136, column 42: " + [ sig.constructor.name, sp.constructor.name ]);
	                        };
	                    };
	                    var pairs = Data_Array.zipWith(pair)(Data_Array.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordString))(function (v3) {
	                        return v3.recLabel;
	                    }))(v1.value0))(Data_Array.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordString))(function (v3) {
	                        return v3.recLabel;
	                    }))(v2.value0));
	                    return Data_Foreign.toForeign(Data_StrMap.fromList(Data_List.fromFoldable(Data_Foldable.foldableArray)(pairs)));
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value0 === "Data.Maybe.Maybe" && (v2 instanceof Data_Generic.SProd && (v2.value0 === "Data.Maybe.Nothing" && (v2.value1.length === 0 && v.maybeAsNull))))) {
	                    return Data_Foreign.toForeign(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value0 === "Data.Maybe.Maybe" && (v1.value1.length === 2 && ((v1.value1[0]).sigValues.length === 1 && (v2 instanceof Data_Generic.SProd && (v2.value0 === "Data.Maybe.Just" && (v2.value1.length === 1 && v.maybeAsNull))))))) {
	                    return go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v2.value1[0](Data_Unit.unit));
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value0 === "Data.Tuple.Tuple" && (v1.value1.length === 1 && ((v1.value1[0]).sigValues.length === 2 && (v2 instanceof Data_Generic.SProd && (v2.value0 === "Data.Tuple.Tuple" && (v2.value1.length === 2 && v.tupleAsArray))))))) {
	                    return Data_Foreign.toForeign([ go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v2.value1[0](Data_Unit.unit)), go((v1.value1[0]).sigValues[1](Data_Unit.unit))(v2.value1[1](Data_Unit.unit)) ]);
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value1.length === 1 && ((v1.value1[0]).sigValues.length === 1 && (v2 instanceof Data_Generic.SProd && (v2.value1.length === 1 && v.unwrapNewtypes))))) {
	                    return go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v2.value1[0](Data_Unit.unit));
	                };
	                if (v1 instanceof Data_Generic.SigProd && v2 instanceof Data_Generic.SProd) {
	                    var $82 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                        return alt.sigConstructor === v2.value0;
	                    })(v1.value1);
	                    if ($82 instanceof Data_Maybe.Nothing) {
	                        return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("No signature for data constructor " + v2.value0);
	                    };
	                    if ($82 instanceof Data_Maybe.Just) {
	                        var $83 = Data_Array.zipWith(function (sig) {
	                            return function (sp) {
	                                return go(sig(Data_Unit.unit))(sp(Data_Unit.unit));
	                            };
	                        })($82.value0.sigValues)(v2.value1);
	                        if ($83.length === 0) {
	                            return Data_Foreign.toForeign(Data_StrMap.fromList(Data_List.singleton(new Data_Tuple.Tuple(v.sumEncoding.value0.tagFieldName, Data_Foreign.toForeign(v2.value0)))));
	                        };
	                        if ($83.length === 1 && v.unwrapSingleArgumentConstructors) {
	                            return Data_Foreign.toForeign(Data_StrMap.fromList(Data_List.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(v.sumEncoding.value0.tagFieldName, Data_Foreign.toForeign(v2.value0)), new Data_Tuple.Tuple(v.sumEncoding.value0.contentsFieldName, $83[0]) ])));
	                        };
	                        return Data_Foreign.toForeign(Data_StrMap.fromList(Data_List.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(v.sumEncoding.value0.tagFieldName, Data_Foreign.toForeign(v2.value0)), new Data_Tuple.Tuple(v.sumEncoding.value0.contentsFieldName, Data_Foreign.toForeign($83)) ])));
	                    };
	                    throw new Error("Failed pattern match at Data.Foreign.Generic line 150, column 9 - line 161, column 62: " + [ $82.constructor.name ]);
	                };
	                return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Invalid spine for signature");
	            };
	        };
	        return function ($169) {
	            return go(Data_Generic.toSignature(dictGeneric)((Type_Proxy["Proxy"]).value))(Data_Generic.toSpine(dictGeneric)($169));
	        };
	    };
	};
	var toJSONGeneric = function (dictGeneric) {
	    return function (opts) {
	        return function ($170) {
	            return Global_Unsafe.unsafeStringify(toForeignGeneric(dictGeneric)(opts)($170));
	        };
	    };
	};
	var readGeneric = function (dictGeneric) {
	    return function (v) {
	        var go = function (v1) {
	            return function (v2) {
	                if (v1 instanceof Data_Generic.SigUnit) {
	                    return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Generic.SUnit.value);
	                };
	                if (v1 instanceof Data_Generic.SigNumber) {
	                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SNumber.create)(Data_Foreign.readNumber(v2));
	                };
	                if (v1 instanceof Data_Generic.SigInt) {
	                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SInt.create)(Data_Foreign.readInt(v2));
	                };
	                if (v1 instanceof Data_Generic.SigChar) {
	                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SChar.create)(Data_Foreign.readChar(v2));
	                };
	                if (v1 instanceof Data_Generic.SigString) {
	                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SString.create)(Data_Foreign.readString(v2));
	                };
	                if (v1 instanceof Data_Generic.SigBoolean) {
	                    return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SBoolean.create)(Data_Foreign.readBoolean(v2));
	                };
	                if (v1 instanceof Data_Generic.SigArray) {
	                    return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.readArray(v2))(function (v3) {
	                        return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v3)(function (f1) {
	                            return Control_Bind.bind(Data_Either.bindEither)(go(v1.value0(Data_Unit.unit))(f1))(function (v4) {
	                                return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Function["const"](v4));
	                            });
	                        }))(function (v4) {
	                            return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SArray(v4));
	                        });
	                    });
	                };
	                if (v1 instanceof Data_Generic.SigRecord) {
	                    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(v1.value0)(function (prop) {
	                        return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.ix(Data_Foreign_Index.indexString)(v2)(prop.recLabel))(function (v3) {
	                            return Control_Bind.bind(Data_Either.bindEither)(go(prop.recValue(Data_Unit.unit))(v3))(function (v4) {
	                                return Control_Applicative.pure(Data_Either.applicativeEither)({
	                                    recLabel: prop.recLabel, 
	                                    recValue: Data_Function["const"](v4)
	                                });
	                            });
	                        });
	                    }))(function (v3) {
	                        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SRecord(v3));
	                    });
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value1.length === 1 && ((v1.value1[0]).sigValues.length === 1 && v.unwrapNewtypes))) {
	                    return Control_Bind.bind(Data_Either.bindEither)(go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v2))(function (v3) {
	                        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd((v1.value1[0]).sigConstructor, [ function (v4) {
	                            return v3;
	                        } ]));
	                    });
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value0 === "Data.Maybe.Maybe" && (v1.value1.length === 2 && ((v1.value1[0]).sigValues.length === 1 && v.maybeAsNull)))) {
	                    var $118 = Data_Foreign.isNull(v2) || Data_Foreign.isUndefined(v2);
	                    if ($118) {
	                        return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd("Data.Maybe.Nothing", [  ]));
	                    };
	                    if (!$118) {
	                        return Control_Bind.bind(Data_Either.bindEither)(go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v2))(function (v3) {
	                            return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd("Data.Maybe.Just", [ function (v4) {
	                                return v3;
	                            } ]));
	                        });
	                    };
	                    throw new Error("Failed pattern match at Data.Foreign.Generic line 90, column 5 - line 93, column 56: " + [ $118.constructor.name ]);
	                };
	                if (v1 instanceof Data_Generic.SigProd && (v1.value0 === "Data.Tuple.Tuple" && (v1.value1.length === 1 && ((v1.value1[0]).sigValues.length === 2 && v.tupleAsArray)))) {
	                    return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign.readArray(v2))(function (v3) {
	                        if (v3.length === 2) {
	                            return Control_Bind.bind(Data_Either.bindEither)(go((v1.value1[0]).sigValues[0](Data_Unit.unit))(v3[0]))(function (v4) {
	                                return Control_Bind.bind(Data_Either.bindEither)(go((v1.value1[0]).sigValues[1](Data_Unit.unit))(v3[1]))(function (v5) {
	                                    return Data_Function.apply(Control_Applicative.pure(Data_Either.applicativeEither))(new Data_Generic.SProd("Data.Tuple.Tuple", [ function (v6) {
	                                        return v4;
	                                    }, function (v6) {
	                                        return v5;
	                                    } ]));
	                                });
	                            });
	                        };
	                        return new Data_Either.Left(new Data_Foreign.TypeMismatch("array of length 2", "array"));
	                    });
	                };
	                if (v1 instanceof Data_Generic.SigProd) {
	                    return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.prop(v.sumEncoding.value0.tagFieldName)(v2))(Data_Foreign.readString))(function (v3) {
	                        var $143 = Data_Foldable.find(Data_Foldable.foldableArray)(function (alt) {
	                            return alt.sigConstructor === v3;
	                        })(v1.value1);
	                        if ($143 instanceof Data_Maybe.Nothing) {
	                            return new Data_Either.Left(new Data_Foreign.TypeMismatch("one of " + Data_Show.show(Data_Show.showArray(Data_Show.showString))(Data_Functor.map(Data_Functor.functorArray)(function (v4) {
	                                return v4.sigConstructor;
	                            })(v1.value1)), v3));
	                        };
	                        if ($143 instanceof Data_Maybe.Just && $143.value0.sigValues.length === 0) {
	                            return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(v3, [  ]));
	                        };
	                        if ($143 instanceof Data_Maybe.Just && ($143.value0.sigValues.length === 1 && v.unwrapSingleArgumentConstructors)) {
	                            return Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.prop(v.sumEncoding.value0.contentsFieldName)(v2))(function (v4) {
	                                return Control_Bind.bind(Data_Either.bindEither)(go($143.value0.sigValues[0](Data_Unit.unit))(v4))(function (v5) {
	                                    return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(v3, [ function (v6) {
	                                        return v5;
	                                    } ]));
	                                });
	                            });
	                        };
	                        if ($143 instanceof Data_Maybe.Just) {
	                            return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Foreign_Index.prop(v.sumEncoding.value0.contentsFieldName)(v2))(Data_Foreign.readArray))(function (v4) {
	                                return Control_Bind.bind(Data_Either.bindEither)(Data_Array.zipWithA(Data_Either.applicativeEither)(function (k) {
	                                    return go(k(Data_Unit.unit));
	                                })($143.value0.sigValues)(v4))(function (v5) {
	                                    return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(v3, Data_Functor.map(Data_Functor.functorArray)(Data_Function["const"])(v5)));
	                                });
	                            });
	                        };
	                        throw new Error("Failed pattern match at Data.Foreign.Generic line 106, column 9 - line 116, column 45: " + [ $143.constructor.name ]);
	                    });
	                };
	                throw new Error("Failed pattern match at Data.Foreign.Generic line 68, column 3 - line 68, column 28: " + [ v1.constructor.name, v2.constructor.name ]);
	            };
	        };
	        var fromSpineUnsafe = function (sp) {
	            var $161 = Data_Generic.fromSpine(dictGeneric)(sp);
	            if ($161 instanceof Data_Maybe.Nothing) {
	                return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Invalid spine for signature");
	            };
	            if ($161 instanceof Data_Maybe.Just) {
	                return $161.value0;
	            };
	            throw new Error("Failed pattern match at Data.Foreign.Generic line 63, column 5 - line 65, column 18: " + [ $161.constructor.name ]);
	        };
	        return function ($171) {
	            return Data_Functor.map(Data_Either.functorEither)(fromSpineUnsafe)(go(Data_Generic.toSignature(dictGeneric)((Type_Proxy["Proxy"]).value))($171));
	        };
	    };
	};
	var readJSONGeneric = function (dictGeneric) {
	    return function (opts) {
	        return Control_Bind.composeKleisli(Data_Either.bindEither)(Data_Foreign.parseJSON)(readGeneric(dictGeneric)(opts));
	    };
	};
	var defaultOptions = {
	    sumEncoding: new TaggedObject({
	        tagFieldName: "tag", 
	        contentsFieldName: "contents"
	    }), 
	    unwrapNewtypes: false, 
	    unwrapSingleArgumentConstructors: true, 
	    maybeAsNull: true, 
	    tupleAsArray: false
	};
	module.exports = {
	    TaggedObject: TaggedObject, 
	    defaultOptions: defaultOptions, 
	    readGeneric: readGeneric, 
	    readJSONGeneric: readJSONGeneric, 
	    toForeignGeneric: toForeignGeneric, 
	    toJSONGeneric: toJSONGeneric
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 316 */
/*!********************************************************************************************!*\
  !*** ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception/Unsafe.purs ***!
  \********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var Control_Monad_Eff_Exception = __webpack_require__(/*! ./bower_components/purescript-exceptions/src/Control/Monad/Eff/Exception.purs */ 85);
	var Control_Monad_Eff_Unsafe = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff/Unsafe.purs */ 115);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var unsafeThrowException = function ($0) {
	    return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
	};
	var unsafeThrow = function ($1) {
	    return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
	};
	module.exports = {
	    unsafeThrow: unsafeThrow, 
	    unsafeThrowException: unsafeThrowException
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 317 */
/*!***************************************************************!*\
  !*** ./bower_components/purescript-maps/src/Data/StrMap.purs ***!
  \***************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-maps/src/Data/StrMap.js */ 318);
	var Prelude = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Prelude.purs */ 33);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_ST = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.purs */ 117);
	var Data_Foldable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Foldable.purs */ 99);
	var Data_Function_Uncurried = __webpack_require__(/*! ./bower_components/purescript-functions/src/Data/Function/Uncurried.purs */ 109);
	var Data_List = __webpack_require__(/*! ./bower_components/purescript-lists/src/Data/List.purs */ 181);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var Data_Monoid = __webpack_require__(/*! ./bower_components/purescript-monoid/src/Data/Monoid.purs */ 90);
	var Data_StrMap_ST = __webpack_require__(/*! ./bower_components/purescript-maps/src/Data/StrMap/ST.purs */ 319);
	var Data_Traversable = __webpack_require__(/*! ./bower_components/purescript-foldable-traversable/src/Data/Traversable.purs */ 107);
	var Data_Tuple = __webpack_require__(/*! ./bower_components/purescript-tuples/src/Data/Tuple.purs */ 129);
	var Data_Functor = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Functor.purs */ 37);
	var Data_Function = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Function.purs */ 39);
	var Control_Apply = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Apply.purs */ 35);
	var Control_Applicative = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Applicative.purs */ 34);
	var Control_Category = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Category.purs */ 40);
	var Data_Eq = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Eq.purs */ 57);
	var Data_HeytingAlgebra = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/HeytingAlgebra.purs */ 51);
	var Data_Show = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Show.purs */ 44);
	var Data_Semigroup = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Data/Semigroup.purs */ 63);
	var Control_Semigroupoid = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Semigroupoid.purs */ 41);
	var Control_Bind = __webpack_require__(/*! ./bower_components/purescript-prelude/src/Control/Bind.purs */ 46);
	var values = function ($38) {
	    return Data_List.fromFoldable(Data_Foldable.foldableArray)($foreign._collect(function (v) {
	        return function (v1) {
	            return v1;
	        };
	    })($38));
	};
	var toList = function ($39) {
	    return Data_List.fromFoldable(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($39));
	};
	var thawST = $foreign._copyEff;
	var showStrMap = function (dictShow) {
	    return new Data_Show.Show(function (m) {
	        return "fromList " + Data_Show.show(Data_List.showList(Data_Tuple.showTuple(Data_Show.showString)(dictShow)))(toList(m));
	    });
	};
	var pureST = function (f) {
	    return Control_Monad_Eff.runPure($foreign.runST(f));
	};
	var singleton = function (k) {
	    return function (v) {
	        return pureST(function __do() {
	            var v1 = Data_StrMap_ST["new"]();
	            Data_StrMap_ST.poke(v1)(k)(v)();
	            return v1;
	        });
	    };
	};
	var mutate = function (f) {
	    return function (m) {
	        return pureST(function __do() {
	            var v = thawST(m)();
	            f(v)();
	            return v;
	        });
	    };
	};
	var member = Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Function["const"](true));
	var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	var isSubmap = function (dictEq) {
	    return function (m1) {
	        return function (m2) {
	            var f = function (k) {
	                return function (v) {
	                    return Data_Function_Uncurried.runFn4($foreign._lookup)(false)(Data_Eq.eq(dictEq)(v))(k)(m2);
	                };
	            };
	            return $foreign.all(f)(m1);
	        };
	    };
	};
	var isEmpty = $foreign.all(function (v) {
	    return function (v1) {
	        return false;
	    };
	});
	var insert = function (k) {
	    return function (v) {
	        return mutate(function (s) {
	            return Data_StrMap_ST.poke(s)(k)(v);
	        });
	    };
	};
	var functorStrMap = new Data_Functor.Functor(function (f) {
	    return function (m) {
	        return Data_Function_Uncurried.runFn2($foreign._fmapStrMap)(m)(f);
	    };
	});
	var fromFoldableWith = function (dictFoldable) {
	    return function (f) {
	        return function (l) {
	            return pureST(function __do() {
	                var v = Data_StrMap_ST["new"]();
	                Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
	                    return Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Function_Uncurried.runFn4($foreign._lookupST)(v1.value1)(f(v1.value1))(v1.value0)(v))(Data_StrMap_ST.poke(v)(v1.value0));
	                })();
	                return v;
	            });
	        };
	    };
	};
	var fromListWith = fromFoldableWith(Data_List.foldableList);
	var fromFoldable = function (dictFoldable) {
	    return function (l) {
	        return pureST(function __do() {
	            var v = Data_StrMap_ST["new"]();
	            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
	                return Data_StrMap_ST.poke(v)(v1.value0)(v1.value1);
	            })();
	            return v;
	        });
	    };
	};
	var fromList = fromFoldable(Data_List.foldableList);
	var freezeST = $foreign._copyEff;
	var foldMaybe = function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Function_Uncurried.runFn4($foreign._foldSCStrMap)(m)(z)(f)(Data_Maybe.fromMaybe);
	        };
	    };
	};
	var foldM = function (dictMonad) {
	    return function (f) {
	        return function (z) {
	            return $foreign._foldM(Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]()))(f)(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(z));
	        };
	    };
	};
	var semigroupStrMap = function (dictSemigroup) {
	    return new Data_Semigroup.Semigroup(function (m1) {
	        return function (m2) {
	            return mutate(function (s1) {
	                return foldM(Control_Monad_Eff.monadEff)(function (s2) {
	                    return function (k) {
	                        return function (v2) {
	                            return Data_StrMap_ST.poke(s2)(k)(Data_Function_Uncurried.runFn4($foreign._lookup)(v2)(function (v1) {
	                                return Data_Semigroup.append(dictSemigroup)(v1)(v2);
	                            })(k)(m2));
	                        };
	                    };
	                })(s1)(m1);
	            })(m2);
	        };
	    });
	};
	var monoidStrMap = function (dictSemigroup) {
	    return new Data_Monoid.Monoid(function () {
	        return semigroupStrMap(dictSemigroup);
	    }, $foreign.empty);
	};
	var union = function (m) {
	    return mutate(function (s) {
	        return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
	    });
	};
	var unions = Data_Foldable.foldl(Data_List.foldableList)(union)($foreign.empty);
	var fold = $foreign._foldM(Data_Function.applyFlipped);
	var foldMap = function (dictMonoid) {
	    return function (f) {
	        return fold(function (acc) {
	            return function (k) {
	                return function (v) {
	                    return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f(k)(v));
	                };
	            };
	        })(Data_Monoid.mempty(dictMonoid));
	    };
	};
	var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
	    return function (f) {
	        return foldMap(dictMonoid)(Data_Function["const"](f));
	    };
	}, function (f) {
	    return fold(function (z) {
	        return function (v) {
	            return f(z);
	        };
	    });
	}, function (f) {
	    return function (z) {
	        return function (m) {
	            return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
	        };
	    };
	});
	var traversableStrMap = new Data_Traversable.Traversable(function () {
	    return foldableStrMap;
	}, function () {
	    return functorStrMap;
	}, function (dictApplicative) {
	    return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
	}, function (dictApplicative) {
	    return function (f) {
	        return function (ms) {
	            return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
	                return function (acc) {
	                    return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(union)(x))(acc);
	                };
	            })(Control_Applicative.pure(dictApplicative)($foreign.empty))(Data_Functor.map(Data_List.functorList)(Data_Functor.map((dictApplicative["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Data_Functor.map(Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
	        };
	    };
	});
	var eqStrMap = function (dictEq) {
	    return new Data_Eq.Eq(function (m1) {
	        return function (m2) {
	            return isSubmap(dictEq)(m1)(m2) && isSubmap(dictEq)(m2)(m1);
	        };
	    });
	};
	var $$delete = function (k) {
	    return mutate(function (s) {
	        return Data_StrMap_ST["delete"](s)(k);
	    });
	};
	var pop = function (k) {
	    return function (m) {
	        return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(lookup(k)(m))(function (a) {
	            return new Data_Tuple.Tuple(a, $$delete(k)(m));
	        });
	    };
	};
	var alter = function (f) {
	    return function (k) {
	        return function (m) {
	            var $36 = f(lookup(k)(m));
	            if ($36 instanceof Data_Maybe.Nothing) {
	                return $$delete(k)(m);
	            };
	            if ($36 instanceof Data_Maybe.Just) {
	                return insert(k)($36.value0)(m);
	            };
	            throw new Error("Failed pattern match at Data.StrMap line 185, column 15 - line 187, column 25: " + [ $36.constructor.name ]);
	        };
	    };
	};
	var update = function (f) {
	    return function (k) {
	        return function (m) {
	            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
	        };
	    };
	};
	module.exports = {
	    alter: alter, 
	    "delete": $$delete, 
	    fold: fold, 
	    foldM: foldM, 
	    foldMap: foldMap, 
	    foldMaybe: foldMaybe, 
	    freezeST: freezeST, 
	    fromFoldable: fromFoldable, 
	    fromFoldableWith: fromFoldableWith, 
	    fromList: fromList, 
	    fromListWith: fromListWith, 
	    insert: insert, 
	    isEmpty: isEmpty, 
	    isSubmap: isSubmap, 
	    lookup: lookup, 
	    member: member, 
	    pop: pop, 
	    pureST: pureST, 
	    singleton: singleton, 
	    thawST: thawST, 
	    toList: toList, 
	    union: union, 
	    unions: unions, 
	    update: update, 
	    values: values, 
	    functorStrMap: functorStrMap, 
	    foldableStrMap: foldableStrMap, 
	    traversableStrMap: traversableStrMap, 
	    eqStrMap: eqStrMap, 
	    showStrMap: showStrMap, 
	    semigroupStrMap: semigroupStrMap, 
	    monoidStrMap: monoidStrMap, 
	    all: $foreign.all, 
	    empty: $foreign.empty, 
	    keys: $foreign.keys, 
	    runST: $foreign.runST, 
	    size: $foreign.size
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 318 */
/*!*************************************************************!*\
  !*** ./bower_components/purescript-maps/src/Data/StrMap.js ***!
  \*************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.StrMap
	
	exports._copy = function (m) {
	  var r = {};
	  for (var k in m) {
	    if (m.hasOwnProperty(k)) {
	      r[k] = m[k];
	    }
	  }
	  return r;
	};
	
	exports._copyEff = function (m) {
	  return function () {
	    var r = {};
	    for (var k in m) {
	      if (m.hasOwnProperty(k)) {
	        r[k] = m[k];
	      }
	    }
	    return r;
	  };
	};
	
	exports.empty = {};
	
	exports.runST = function (f) {
	  return f;
	};
	
	// jshint maxparams: 2
	exports._fmapStrMap = function (m0, f) {
	  var m = {};
	  for (var k in m0) {
	    if (m0.hasOwnProperty(k)) {
	      m[k] = f(m0[k]);
	    }
	  }
	  return m;
	};
	
	// jshint maxparams: 1
	exports._foldM = function (bind) {
	  return function (f) {
	    return function (mz) {
	      return function (m) {
	        var acc = mz;
	        function g(k) {
	          return function (z) {
	            return f(z)(k)(m[k]);
	          };
	        }
	        for (var k in m) {
	          if (m.hasOwnProperty(k)) {
	            acc = bind(acc)(g(k));
	          }
	        }
	        return acc;
	      };
	    };
	  };
	};
	
	// jshint maxparams: 4
	exports._foldSCStrMap = function (m, z, f, fromMaybe) {
	  for (var k in m) {
	    if (m.hasOwnProperty(k)) {
	      var maybeR = f(z)(k)(m[k]);
	      var r = fromMaybe(null)(maybeR);
	      if (r === null) return z;
	      else z = r;
	    }
	  }
	  return z;
	};
	
	// jshint maxparams: 1
	exports.all = function (f) {
	  return function (m) {
	    for (var k in m) {
	      if (m.hasOwnProperty(k) && !f(k)(m[k])) return false;
	    }
	    return true;
	  };
	};
	
	exports.size = function (m) {
	  var s = 0;
	  for (var k in m) {
	    if (m.hasOwnProperty(k)) {
	      ++s;
	    }
	  }
	  return s;
	};
	
	// jshint maxparams: 4
	exports._lookup = function (no, yes, k, m) {
	  return k in m ? yes(m[k]) : no;
	};
	
	// jshint maxparams: 2
	exports._unsafeDeleteStrMap = function (m, k) {
	  delete m[k];
	  return m;
	};
	
	// jshint maxparams: 4
	exports._lookupST = function (no, yes, k, m) {
	  return function () {
	    return k in m ? yes(m[k]) : no;
	  };
	};
	
	function _collect(f) {
	  return function (m) {
	    var r = [];
	    for (var k in m) {
	      if (m.hasOwnProperty(k)) {
	        r.push(f(k)(m[k]));
	      }
	    }
	    return r;
	  };
	}
	
	exports._collect = _collect;
	
	exports.keys = Object.keys || _collect(function (k) {
	  return function () { return k; };
	});


/***/ },
/* 319 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-maps/src/Data/StrMap/ST.purs ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Generated by psc version 0.9.1
	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-maps/src/Data/StrMap/ST.js */ 320);
	var Control_Monad_Eff = __webpack_require__(/*! ./bower_components/purescript-eff/src/Control/Monad/Eff.purs */ 74);
	var Control_Monad_ST = __webpack_require__(/*! ./bower_components/purescript-st/src/Control/Monad/ST.purs */ 117);
	var Data_Maybe = __webpack_require__(/*! ./bower_components/purescript-maybe/src/Data/Maybe.purs */ 101);
	var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
	module.exports = {
	    peek: peek, 
	    "delete": $foreign["delete"], 
	    "new": $foreign["new"], 
	    poke: $foreign.poke
	};
	//# sourceMappingURL=index.js.map


/***/ },
/* 320 */
/*!****************************************************************!*\
  !*** ./bower_components/purescript-maps/src/Data/StrMap/ST.js ***!
  \****************************************************************/
/***/ function(module, exports) {

	/* global exports */
	"use strict";
	
	// module Data.StrMap.ST
	
	exports["new"] = function () {
	  return {};
	};
	
	exports.peekImpl = function (just) {
	  return function (nothing) {
	    return function (m) {
	      return function (k) {
	        return function () {
	          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;
	        };
	      };
	    };
	  };
	};
	
	exports.poke = function (m) {
	  return function (k) {
	    return function (v) {
	      return function () {
	        m[k] = v;
	        return m;
	      };
	    };
	  };
	};
	
	exports["delete"] = function (m) {
	  return function (k) {
	    return function () {
	      delete m[k];
	      return m;
	    };
	  };
	};


/***/ },
/* 321 */
/*!********************************************************************!*\
  !*** ./bower_components/purescript-globals/src/Global/Unsafe.purs ***!
  \********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var $foreign = __webpack_require__(/*! ./bower_components/purescript-globals/src/Global/Unsafe.js */ 322);
	module.exports = {
	    unsafeStringify: $foreign.unsafeStringify
	};


/***/ },
/* 322 */
/*!******************************************************************!*\
  !*** ./bower_components/purescript-globals/src/Global/Unsafe.js ***!
  \******************************************************************/
/***/ function(module, exports) {

	/* globals exports, JSON */
	"use strict";
	
	// module Global.Unsafe
	
	exports.unsafeStringify = function (x) {
	  return JSON.stringify(x);
	};


/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map